[{"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\index.js":"1","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\routes.js":"3","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\index.js":"4","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\home.js":"5","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\MovieDetails\\details.js":"6","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Logout\\logout.js":"7","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js":"8","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js":"9","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\createCinema.js":"10","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js":"11","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js":"12","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js":"13","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\hoc\\auth.js":"14","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Register\\Register.js":"15","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Login\\Login.js":"16","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Forgot\\forgot.js":"17","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Profile\\profile.js":"18","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\reset.js":"19","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\movie_reducer.js":"20","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\cinema_reducer.js":"21","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\user_reducer.js":"22","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\showtime_reducer.js":"23","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Footer\\footer.js":"24","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Widgets\\slider.js":"25","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\header.js":"26","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\actions\\index.js":"27","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\review.js":"28","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\navItems.js":"29","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\expiredPassword.js":"30","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Promotions\\promotions.js":"31","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\cinemas.js":"32","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\moviesInCinema.js":"33","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\CreateCinema.js":"34","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\CreateReview\\createReview.js":"35"},{"size":993,"mtime":1610045243871,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":3089,"mtime":1620583177898,"results":"39","hashOfConfig":"37"},{"size":327,"mtime":1618946145422,"results":"40","hashOfConfig":"37"},{"size":5977,"mtime":1620582012124,"results":"41","hashOfConfig":"37"},{"size":23907,"mtime":1620594892254,"results":"42","hashOfConfig":"37"},{"size":285,"mtime":1620059099863,"results":"43","hashOfConfig":"37"},{"size":3069,"mtime":1620232050707,"results":"44","hashOfConfig":"37"},{"size":6147,"mtime":1620156117881,"results":"45","hashOfConfig":"37"},{"size":5264,"mtime":1620306275887,"results":"46","hashOfConfig":"37"},{"size":12231,"mtime":1620325875879,"results":"47","hashOfConfig":"37"},{"size":12783,"mtime":1620233308605,"results":"48","hashOfConfig":"37"},{"size":13237,"mtime":1618852757582,"results":"49","hashOfConfig":"37"},{"size":1729,"mtime":1620060053805,"results":"50","hashOfConfig":"37"},{"size":8225,"mtime":1620071235538,"results":"51","hashOfConfig":"37"},{"size":4259,"mtime":1620071235519,"results":"52","hashOfConfig":"37"},{"size":3117,"mtime":1620071235516,"results":"53","hashOfConfig":"37"},{"size":1618,"mtime":1620240368984,"results":"54","hashOfConfig":"37"},{"size":3382,"mtime":1620071235540,"results":"55","hashOfConfig":"37"},{"size":1343,"mtime":1620593246668,"results":"56","hashOfConfig":"37"},{"size":1700,"mtime":1620336124122,"results":"57","hashOfConfig":"37"},{"size":1028,"mtime":1619555709086,"results":"58","hashOfConfig":"37"},{"size":1150,"mtime":1618855843021,"results":"59","hashOfConfig":"37"},{"size":3870,"mtime":1620319705706,"results":"60","hashOfConfig":"37"},{"size":1988,"mtime":1618342537853,"results":"61","hashOfConfig":"37"},{"size":1084,"mtime":1620059011701,"results":"62","hashOfConfig":"37"},{"size":8257,"mtime":1620594573946,"results":"63","hashOfConfig":"37"},{"size":5664,"mtime":1620595611123,"results":"64","hashOfConfig":"37"},{"size":3761,"mtime":1620071235517,"results":"65","hashOfConfig":"37"},{"size":386,"mtime":1620071235539,"results":"66","hashOfConfig":"37"},{"size":6753,"mtime":1620316331231,"results":"67","hashOfConfig":"37"},{"size":4402,"mtime":1620336486266,"results":"68","hashOfConfig":"37"},{"size":6880,"mtime":1620336470769,"results":"69","hashOfConfig":"37"},{"size":5264,"mtime":1620306275887,"results":"70","hashOfConfig":"37"},{"size":7986,"mtime":1620595155335,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"1l405pi",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"75"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"75"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"75"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"75"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\index.js",["169"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers'\r\nimport Routes from './routes';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={createStoreWithMiddleware(reducers)}>\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["170","171"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\routes.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\index.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\home.js",["172","173"],"import React, { Component } from 'react'\r\nimport Header from '../Header/header'\r\nimport Footer from '../Footer/footer'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport HomeSlider from '../Widgets/slider'\r\nimport { connect } from 'react-redux'\r\nimport { getHomeMovies } from '../../actions'\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    state = {\r\n        movies: ''\r\n    }\r\n\r\n    responsive = {\r\n        desktop: {\r\n            breakpoint: { max: 3000, min: 1024 },\r\n            items: 3,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }\r\n    };\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    handleSelect = (selectedIndex, e) => {\r\n        this.setState({ index: selectedIndex })\r\n    };\r\n\r\n    slideImages = [\r\n        './assets/images/lionkingbackdrop.jpg',\r\n        './assets/images/lionkingbackdrop.jpg',\r\n        './assets/images/lionkingbackdrop.jpg'\r\n    ];\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.dispatch(getHomeMovies());\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.movies) {\r\n            if (props.movies.length > 0) {\r\n                return {\r\n                    movies: props.movies\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let movies = this.state.movies;\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        {/* <HomeSlider\r\n                            settings={{\r\n                                interval: '500'\r\n                            }}\r\n                            movies={movies}\r\n                        /> */}\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"container\">\r\n                            <div className=\"row mt-5 ml-5\">\r\n                                <button className=\"cbtn active my-1\">\r\n                                    NOW SHOWING\r\n                                </button>\r\n                                <button className=\"cbtn my-1\">\r\n                                    COMING SOON\r\n                                </button>\r\n                                <button className=\"cbtn my-1\">\r\n                                    <Link style={{ color: \"inherit\", textDecoration: \"none\" }} to=\"/cinemas\">CINEMAS</Link>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"row mt-3 px-5\">\r\n                                {\r\n                                    movies ?\r\n                                        movies.map((movie, key) => {\r\n                                            return (\r\n                                                <div className=\" movie-container \" key={key}>\r\n                                                    <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                                                        <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n\r\n                                                    </Link>\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                        : null\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {/* <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={\"holder.js/800x400?text=First slide&bg=373940\"}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>First slide label</h3>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n                            alt=\"Second slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Second slide label</h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Third slide label</h3>\r\n                            <p>\r\n                                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n          </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel> */}\r\n\r\n                <Footer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        movies: state.movie.moviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\MovieDetails\\details.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Logout\\logout.js",["189"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logout = (props) => {\r\n\r\n    let request = axios.get(`/api/logout`)\r\n        .then(request => {\r\n            props.history.push('/')\r\n        })\r\n\r\n    return (\r\n        <div > </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js",["190","191"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../Header/header'\r\nimport DataTable from 'react-data-table-component'\r\nimport { getCinemasList } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\r\nclass Cinemas extends Component {\r\n\r\n\r\n    state = {\r\n        cinemaList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCinemasList())\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.cinemaList) {\r\n            if (props.cinemaList.length > 0) {\r\n                return {\r\n                    cinemaList: props.cinemaList\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span >\r\n                    <strong>{row.name}</strong>\r\n\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            name: 'City',\r\n            selector: 'city',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Address',\r\n            selector: 'address',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Url',\r\n            selector: 'url',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span>\r\n                    {row.url ? row.url : 'N/A'}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            name: 'Showtimes',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span className=\"p-2\">\r\n                    {/* <button className='btn btn-outline-dark'>View </button> */}\r\n                    <Link to={`/create-showtime/${row._id}`} className='btn btn-outline-dark'>View showtimes </Link>\r\n\r\n                </span>\r\n            )\r\n        },\r\n\r\n        {\r\n            name: 'Action',\r\n            hide: 'md',\r\n            cell: row => (\r\n                <span><strong>...</strong></span>\r\n                // <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\r\n                //     <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                //     <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                //     <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                // </DropdownButton>\r\n                // <div className=\"nk-tb-col nk-tb-col-tools\">\r\n                //     <ul className=\"nk-tb-actions gx-1 my-n1\">\r\n                //         <li className=\"mr-n1\">\r\n                //             <div className=\"dropdown\">\r\n                //                 <a href=\"#\" className=\"dropdown-toggle btn btn-icon btn-trigger\" data-toggle=\"dropdown\"><em className=\"icon ni ni-more-h\"></em></a>\r\n                //                 <div className=\"dropdown-menu dropdown-menu-right\">\r\n                //                     <ul className=\"link-list-opt no-bdr\">\r\n                //                         <li><Link to={{\r\n                //                             pathname: \"/editProduct\",\r\n                //                             state: {\r\n                //                                 productInfo: row\r\n                //                             }\r\n                //                         }}>\r\n                //                             <em className=\"icon ni ni-pen\"></em><span>Edit Product</span></Link></li>\r\n                //                         <li><a onClick={() => { this.showData(row) }}><em className=\"icon ni ni-eye\"></em><span>View Product</span></a></li>\r\n                //                         {\r\n                //                             row.status === \"active\" ?\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em className=\"icon ni ni-na\"></em><span style={{ cursor: \"pointer\" }} className=\"text-danger\">Change Status</span>\r\n                //                                 </a></li>\r\n                //                                 :\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em class=\"icon ni ni-check-thick\"></em><span style={{ cursor: \"pointer\" }}>Change Status</span>\r\n                //                                 </a></li>\r\n                //                         }\r\n                //                     </ul>\r\n                //                 </div>\r\n                //             </div>\r\n                //         </li>\r\n                //     </ul>\r\n                // </div>\r\n            ),\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className='row mt-2'>\r\n                        <div className='col-12 col-md-4 mt-2'>\r\n                            <h2>Cinemas</h2>\r\n                        </div>\r\n                        <div className='col-12 col-md-8 mt-2'>\r\n                            <Link to='/create-cinema' className=' float-right btn btn-dark'>Add Cinema </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <DataTable\r\n                            columns={this.columns}\r\n                            data={this.state.cinemaList}\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            pagination\r\n                            // onRowClicked={(data) => { this.showData(data) }}\r\n                            paginationPerPage={10}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        cinemaList: state.cinema.cinemaList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cinemas)\r\n","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\createCinema.js",["192","193","194","195"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addCinema, clearCinema } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CreateCinema extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        city: 'Lahore',\r\n        address: '',\r\n        url: '',\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputCity = (event) => {\r\n        this.setState({ city: event.target.value })\r\n    }\r\n    handleInputAddress = (event) => {\r\n        this.setState({ address: event.target.value })\r\n    }\r\n    handleInputURL = (event) => {\r\n        this.setState({ url: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addCinema({\r\n            name: this.state.name,\r\n            city: this.state.city,\r\n            address: this.state.address,\r\n            url: this.state.url,\r\n        }))\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // console.log(\"Props\", props)\r\n        if (props.cinemapost.cinema) {\r\n            if (props.cinemapost.cinema.post)\r\n                return {\r\n                    redirect: true,\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearCinema());\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Cinema Details</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        required\r\n                                        placeholder=\"Cinema Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style \" controlId=\"city\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <select id=\"city\" name=\"city\" className=\"form-control\" onChange={this.handleInputCity}>\r\n                                        <option value=\"lahore\">Lahore</option>\r\n                                        <option value=\"islamabad\">Islamabad</option>\r\n                                        <option value=\"multan\">Multan</option>\r\n                                        <option value=\"faisalabad\">Faisalabad</option>\r\n                                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"address\">\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleInputAddress}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"url\">\r\n                                    <Form.Label>Website URL</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"URL\"\r\n                                        value={this.state.url}\r\n                                        onChange={this.handleInputURL}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    SAVE\r\n                                </Button>\r\n                            </Form>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemapost: state.cinema\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateCinema)",["196","197"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js",["198","199","200","201","202","203","204","205"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addShowtime, clearCinemaMovie, clearShowtime, getCinemaMovies } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Moment } from 'react-moment';\r\n\r\nclass CreateShowtime extends Component {\r\n    setDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        return today;\r\n    }\r\n    setDateMax = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 3; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        return today;\r\n    }\r\n    state = {\r\n        // name: '',\r\n        // language: 'English',\r\n        // date: '',\r\n        // time: '',\r\n        // screenType: '',\r\n        moviesList: [],\r\n        dupList: [],\r\n        redirect: false,\r\n        cachedProps: ''\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputLanguage = (event) => {\r\n        this.setState({ language: event.target.value })\r\n    }\r\n    handleInputDate = (event) => {\r\n        this.setState({ date: event.target.value })\r\n    }\r\n    handleInputTime = (event) => {\r\n        this.setState({ time: event.target.value })\r\n    }\r\n    handleInputScreen = (event) => {\r\n        this.setState({ screenType: event.target.value })\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n\r\n        if (nextProps != state.cachedProps) {\r\n            if (nextProps.cinemaInfo) {\r\n                if (nextProps.cinemaInfo.movies) {\r\n                    return {\r\n                        moviesList: nextProps.cinemaInfo.movies.reverse(),\r\n                        dupList: nextProps.cinemaInfo.movies.reverse(),\r\n                        cachedProps: nextProps\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(\"Props\", props)\r\n        // if (props.showtimepost.showtime) {\r\n        //     if (props.showtimepost.showtime.post)\r\n        //         return {\r\n        //             redirect: true,\r\n        //         }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearShowtime());\r\n        this.props.dispatch(clearCinemaMovie());\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.cinemaId;\r\n        this.props.dispatch(getCinemaMovies(id));\r\n        this.setState({\r\n            cinemaId: id\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        // Variable to hold the original version of the list\r\n        let currentList = [];\r\n        // Variable to hold the filtered list before putting into state\r\n        let newList = [];\r\n\r\n        // If the search bar isn't empty\r\n        if (e.target.value !== \"\") {\r\n            // Assign the original list to currentList\r\n            currentList = this.state.moviesList;\r\n\r\n            // Use .filter() to determine which items should be displayed\r\n            // based on the search terms\r\n            newList = currentList.filter(item => {\r\n                // change current item to lowercase\r\n                const lc = item.title.toLowerCase();\r\n                // change search term to lowercase\r\n                const filter = e.target.value.toLowerCase();\r\n                // check to see if the current list item includes the search term\r\n                // If it does, it will be added to newList. Using lowercase eliminates\r\n                // issues with capitalization in search terms and search content\r\n                return lc.includes(filter);\r\n            });\r\n        } else {\r\n            // If the search bar is empty, set newList to original task list\r\n            newList = this.state.moviesList;\r\n        }\r\n        // Set the filtered state based on what our rules added to newList\r\n        this.setState({\r\n            dupList: newList\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col col-md-4 my-4\">\r\n                                <h4>Create new showtime</h4>\r\n                            </div>\r\n                            <div className=\"col my-4 mr-md-5\">\r\n                                <div className=\"float-right mr-md-2\">\r\n                                    <Link to={`/addMovie/${this.state.cinemaId}`} className=\"btn btn-dark\"><i className=\"fa fa-cup\"> </i>  New Movie</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"input-group col-md-4 col float-right  mb-3 mr-md-5\">\r\n\r\n                                    <div class=\"input-group-prepend \">\r\n                                        <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                            <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" onChange={this.handleSearchChange} class=\"form-control\" placeholder=\"Search Movie\" aria-label=\"Search\" aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row d-flex mx-md-5 px-md-5\" style={{ float: \"none\", justifyContent: 'between' }}>\r\n\r\n                        {\r\n                            this.state.dupList.map((movie, key) => {\r\n                                return (\r\n                                    <div key={key} className=' cinema-movie-container  d-flex flex-row my-2 mx-md-4 mx-1 rounded border p-2 display-inline '>\r\n\r\n                                        <div className=\"d-inline\" >\r\n                                            <img id=\"postertest\" className='poster-small d-flex mr-3 ' src={movie.poster_url} alt=\"movie-poster\" />\r\n                                        </div>\r\n                                        <div className=\"d-inline\">\r\n                                            <Link to={`/movie/${movie._id}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'black' }}>\r\n                                                <strong >\r\n                                                    {movie.title}\r\n                                                </strong>\r\n                                            </Link>\r\n\r\n                                            <div>\r\n                                                Release: {movie.releaseDate}\r\n                                            </div>\r\n                                            <div>\r\n                                                Runtime: {movie.runtime} Minutes\r\n                                                </div>\r\n                                            <div>\r\n                                                Rating: {movie.rating}\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <Link to={{\r\n                                                    pathname: `/showtimes`,\r\n                                                    showtimeProps: {\r\n                                                        cinemaId: this.state.cinemaId,\r\n                                                        movie: movie\r\n                                                    }\r\n                                                }} className=\"btn btn-dark my-3\">\r\n                                                    Showtimes\r\n                                                </Link>\r\n                                            </div>\r\n                                            {/* <div>\r\n                                                <button className=\"btn border my-1\">\r\n                                                    Edit Showtime\r\n                                                    </button>\r\n                                            </div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div >\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n/* <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                <Form.Group className=\"input-style\" controlId=\"moviename\">\r\n                    <Form.Label>Movie Name</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        placeholder=\"Movie Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputName}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"language\">\r\n                    <Form.Label>Language</Form.Label>\r\n                    <select id=\"language\" name=\"language\" onChange={this.handleInputLanguage}>\r\n                        <option value=\"english\">English</option>\r\n                        <option value=\"urdu\">Urdu</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"date\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        min={this.setDate()}\r\n                        max={this.setDateMax()}\r\n                        value={this.state.date}\r\n                        onChange={this.handleInputDate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"time\">\r\n                    <Form.Label>Time</Form.Label>\r\n                    <Form.Control\r\n                        type=\"time\"\r\n                        placeholder=\"Time\"\r\n                        value={this.state.time}\r\n                        onChange={this.handleInputTime}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"screen\">\r\n                    <Form.Label>Screen type</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Screen Type\"\r\n                        value={this.state.screenType}\r\n                        onChange={this.handleInputScreen}\r\n                    />\r\n                    {/* <select id=\"type\" name=\"type\">\r\n                        <option value=\"gold1\">Gold-1</option>\r\n                        <option value=\"gold2\">Gold-2</option>\r\n                        <option value=\"plat1\">Platinum-1</option>\r\n                        <option value=\"plat2\">Platinum-2</option>\r\n                    </select> */\r\n/* </Form.Group>\r\n                        <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                            SAVE\r\n                                </Button>\r\n                            </Form> */\r\n\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemaInfo: state.cinema.cinemaMoviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateShowtime);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js",["206","207","208","209","210"],"import React, { Component } from 'react';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Header from '../../Header/header'\r\nimport { Modal, Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport { getCinemaMovieShowtimes, addShowtime, clearMovieShowtimes, clearShowtime } from '../../../actions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Showtime extends Component {\r\n\r\n\r\n    state = {\r\n        events: [\r\n            // {\r\n            //     start: moment().toDate(),\r\n            //     end: moment().add(0.4, \"hours\").toDate(),\r\n            //     title: \"Movie 1\",\r\n            // },\r\n            // {\r\n            //     'title': 'Movie 2',\r\n            //     'allDay': true,\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(1, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 3',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(3, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 4',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.5, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 5',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.2, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 7',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(4, \"hours\").toDate(),\r\n            // },\r\n        ],\r\n        title: '',\r\n        language: 'English',\r\n        date: '',\r\n        time: '',\r\n        screenType: '',\r\n        show: false,\r\n        redirect: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        const events = [];\r\n        let show = prevState.show;\r\n\r\n        if (nextProps.postShowtime) {\r\n            if (nextProps.postShowtime.post == true) {\r\n                let language = nextProps.postShowtime.newShowtime.language == 'Urdu' ? ' (Urdu)' : '';\r\n                const event = {\r\n                    title: \"Screen: \" + nextProps.postShowtime.newShowtime.screenType + language,\r\n                    start: moment(nextProps.postShowtime.newShowtime.date).toDate(),\r\n                    end: moment(nextProps.postShowtime.newShowtime.date).add(\"minute\", nextProps.postShowtime.newShowtime.runtime).toDate()\r\n                }\r\n                events.push(event);\r\n                show = !prevState.show;\r\n                nextProps.dispatch(clearShowtime);\r\n            }\r\n        }\r\n\r\n\r\n        if (nextProps.showtimes) {\r\n            if (nextProps.showtimes.showtime) {\r\n                if (prevState.movie) {\r\n                    nextProps.showtimes.showtime.forEach((item => {\r\n                        let language = item.language == 'Urdu' ? ' (Urdu)' : '';\r\n                        const event = {\r\n                            title: \"Screen: \" + item.screenType + language,\r\n                            start: moment(item.date).toDate(),\r\n                            end: moment(item.date).add(\"minute\", item.runtime).toDate()\r\n                        }\r\n                        console.log(\"Event\", event)\r\n                        events.push(event)\r\n                    }))\r\n\r\n\r\n                    return {\r\n                        events: events,\r\n                        show: show\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        this.setState((state) => {\r\n            state.events[0].start = start;\r\n            state.events[0].end = end;\r\n            return { events: [...state.events] };\r\n        });\r\n    };\r\n\r\n    onEventDrop = (data) => {\r\n        // console.log(data);\r\n    };\r\n\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n\r\n\r\n    setDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    setDateMax = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 3; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputLanguage = (event) => {\r\n        this.setState({ language: event.target.value })\r\n    }\r\n    handleInputDate = (event) => {\r\n        this.setState({ date: event.target.value })\r\n    }\r\n    handleInputTime = (event) => {\r\n        this.setState({ time: event.target.value })\r\n    }\r\n    handleInputScreen = (event) => {\r\n        this.setState({ screenType: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addShowtime({\r\n            language: this.state.language,\r\n            date: this.state.date,\r\n            runtime: this.state.movie.runtime,\r\n            screenType: this.state.screenType,\r\n            cinemaId: this.state.cinemaId,\r\n            movieId: this.state.movie._id,\r\n            movieTitle: this.state.movie.title\r\n        }))\r\n    }\r\n\r\n    addShowtime = () => {\r\n        let movie = this.state.movie;\r\n        return (\r\n            <Modal\r\n                show={this.state.show} onHide={this.handleClose}\r\n                size=\"lg\"\r\n                centered\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header className=\"\" closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\" text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                        Add a new showtime\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <div className=\"container\">\r\n                        <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <div className=\"input-style my-2\" >\r\n                                    <div className=\"d-flex float-right\">\r\n                                        <strong>  Showtime: {movie.runtime} Minutes</strong>\r\n                                    </div>\r\n                                    <Form.Label><strong>{movie.title}</strong></Form.Label>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <Form.Group className=\"input-style\" controlId=\"language\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <select id=\"language\" name=\"language\" className=\"form-control\" onChange={this.handleInputLanguage}>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"Urdu\">Urdu</option>\r\n                                </select>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"input-style\" controlId=\"date\">\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"datetime-local\"\r\n                                    min={this.setDate()}\r\n                                    max={this.setDateMax()}\r\n                                    value={this.state.date}\r\n                                    onChange={this.handleInputDate}\r\n                                />\r\n                            </Form.Group>\r\n                            {/* <Form.Group className=\"input-style\" controlId=\"time\">\r\n                                <Form.Label>Time</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"time\"\r\n                                    placeholder=\"Time\"\r\n                                    value={this.state.time}\r\n                                    onChange={this.handleInputTime}\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Form.Group className=\"input-style\" controlId=\"screen\">\r\n                                <Form.Label>Screen type</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Screen Type\"\r\n                                    value={this.state.screenType}\r\n                                    onChange={this.handleInputScreen}\r\n                                />\r\n                                {/* <select id=\"type\" name=\"type\">\r\n                                    <option value=\"gold1\">Gold-1</option>\r\n                                    <option value=\"gold2\">Gold-2</option>\r\n                                    <option value=\"plat1\">Platinum-1</option>\r\n                                    <option value=\"plat2\">Platinum-2</option>\r\n                                </select> */}\r\n                            </Form.Group>\r\n                            <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                SAVE\r\n                                </Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.location.showtimeProps) {\r\n            let id = this.props.location.showtimeProps.cinemaId;\r\n            let movieId = this.props.location.showtimeProps.movie._id;\r\n\r\n            this.props.dispatch(getCinemaMovieShowtimes(id, movieId));\r\n            this.setState({\r\n                cinemaId: id,\r\n                movie: this.props.location.showtimeProps.movie\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovieShowtimes())\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect == true) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n\r\n        const localizer = momentLocalizer(moment)\r\n        let movie = this.state.movie;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {movie ?\r\n                    <div className=\"container\">\r\n                        {this.addShowtime()}\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col\">\r\n                                <h4>{movie.title}</h4>\r\n                            </div>\r\n                            <div className=\"col \">\r\n                                <button type=\"button\" onClick={this.handleShow} className=\"btn btn-dark d-flex float-right\"> New Showtime</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col p-4\">\r\n                                <Calendar\r\n                                    defaultDate={moment().toDate()}\r\n                                    defaultView=\"month\"\r\n                                    events={this.state.events}\r\n                                    localizer={localizer}\r\n                                    onEventDrop={this.onEventDrop}\r\n                                    onEventResize={this.onEventResize}\r\n                                    resizable\r\n                                    style={{ height: \"100vh\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(\"State\", state)\r\n    return {\r\n        showtimes: state.showtime.movieShowtimes,\r\n        postShowtime: state.showtime.showtime\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Showtime);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js",["211","212","213","214","215"],"import React, { Component } from 'react'\r\nimport Header from '../../Header/header'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { getMovieByName, getMovieFromTMDB, addMovieInCinema, clearMovie, clearCinemaMovie } from '../../../actions'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass AddMovie extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        movieInfo: '',\r\n        tmdb: null,\r\n        show: false,\r\n        loading: false,\r\n        searching: false,\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieByName(this.state.name.trim()));\r\n        }\r\n        else {\r\n            this.setState({\r\n                movieInfo: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // console.log(\"Next Props: \", nextProps.movieDetails, \"Prev State\", prevState)\r\n\r\n        if (nextProps.postDetails) {\r\n\r\n            if (nextProps.postDetails.post == true) {\r\n\r\n                return ({\r\n                    redirect: true\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        if (nextProps.movieDetails) {\r\n            if (nextProps.movieDetails.movie) {\r\n                let tmdb = null;\r\n                if (nextProps.movieDetails.tmdb)\r\n                    tmdb = nextProps.movieDetails.tmdb;\r\n\r\n                return {\r\n                    movieInfo: nextProps.movieDetails.movie,\r\n                    notFound: false,\r\n                    searching: false,\r\n                    tmdb: tmdb\r\n                }\r\n            }\r\n            else if (nextProps.movieDetails.found == false) {\r\n                return {\r\n                    movieInfo: '',\r\n                    notFound: true,\r\n                    searching: false,\r\n                    tmdb: null\r\n                }\r\n            }\r\n            else\r\n                return { movieInfo: '', };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n    getVideoId = (url) => {\r\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n\r\n        return (match && match[2].length === 11)\r\n            ? match[2]\r\n            : null;\r\n    }\r\n\r\n    playTrailer = (videos) => {\r\n        if (videos.length > 0) {\r\n            return (\r\n\r\n                <Modal\r\n                    show={this.state.show} onHide={this.handleClose}\r\n                    size=\"xl\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    // className=\"container-fluid\"\r\n\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header className=\"primary\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                            Movie Trailer\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <div className=\"trailer-body m-0 mt-n1 p-0 primary\" >\r\n                        <div className=\"trailer-container\">\r\n                            <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\"\r\n                                src={'https://www.youtube-nocookie.com/embed/' + this.getVideoId(videos[0]) + '?autoplay=1&loop=1&modestbranding=1&playlist=' + this.getVideoId(videos[0])} frameborder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n                                allowfullscreen=\"1\"\r\n                                webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    closeMovie = () => {\r\n        this.props.dispatch(clearMovie())\r\n    }\r\n\r\n    getMovieTMDB = () => {\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieFromTMDB(this.state.name.trim()))\r\n            this.setState({\r\n                searching: true\r\n            })\r\n        }\r\n    }\r\n\r\n    saveMovie = () => {\r\n        if (this.state.movieInfo) {\r\n            let movieData = {\r\n                cinemaID: this.props.match.params.cinemaId,\r\n                movie: this.state.movieInfo,\r\n                tmdb: this.state.tmdb\r\n            }\r\n            this.props.dispatch(addMovieInCinema(movieData))\r\n            this.setState({\r\n                loading: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cinemaId: this.props.match.params.cinemaId\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovie());\r\n        this.props.dispatch(clearCinemaMovie());\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={`/create-showtime/${this.props.match.params.cinemaId}`} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col my-3\">\r\n                            <h3>Add movie</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group col-md-6 col  mb-3 mr-md-5\">\r\n                                <div class=\"input-group-prepend \">\r\n                                    <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                        <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                </div>\r\n                                <input type=\"text\" value={this.state.name} onChange={this.handleInputChange} class=\"form-control\" placeholder=\"Enter Movie Name\"\r\n                                    aria-label=\"Search\" aria-describedby=\"basic-addon1\" required />\r\n                                <button type=\"button\" onClick={this.submitForm} className=\"btn btn-dark mx-3\"> Search </button>\r\n                            </div>\r\n                            {\r\n                                this.state.notFound == true ?\r\n                                    <div className=\"col-md-6 col\">\r\n                                        <Link onClick={this.getMovieTMDB}>Search movie from TMDB.</Link>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row \">\r\n                        {\r\n                            this.state.movieInfo ?\r\n                                <section className=\"col border rounded\" >\r\n                                    {this.playTrailer(this.state.movieInfo.videoLinks)}\r\n                                    <div >\r\n\r\n                                        <div className=\"col-12 m-md-4 m-2\">\r\n                                            <div className=\" mx-1 float-right\">\r\n                                                <button type=\"button\" onClick={this.closeMovie} class=\"close\" aria-label=\"Close\">\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div class=\"media \">\r\n                                                <img id=\"postertest\" className='poster d-flex mr-3 ' src={this.state.movieInfo.poster_url} alt=\"movie-poster\" />\r\n\r\n                                                <div class=\"media-body\">\r\n                                                    <div className=\" d-md-none\">\r\n                                                        <div className=\"movie-details\">\r\n                                                            <h5 className=\"title\">\r\n                                                                {this.state.movieInfo.title}\r\n                                                            </h5>\r\n                                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment></p>\r\n                                                        </div>\r\n                                                        <button className=\" btn  btn-dark mr-2\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"movie-details d-none d-md-block col-lg-8 col-xl-7\">\r\n                                                        <h3 className=\"title\">\r\n                                                            {this.state.movieInfo.title}\r\n                                                        </h3>\r\n                                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                            {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                                return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                            })}\r\n                                                        </p>\r\n                                                        <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span>   <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                                        <h6>Overview</h6>\r\n                                                        <p>{this.state.movieInfo.description}\r\n                                                        </p>\r\n\r\n                                                        <div className=\"d-none d-md-block\">\r\n                                                            <button className=\" btn  btn-dark\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col my-1 mr-4 ml-n3 mx-md-3 p-4'>\r\n                                                <button className=\" btn  btn-dark float-md-right\" onClick={this.saveMovie} disabled={this.state.loading}> Save Movie to Cinema</button>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-12 d-block d-md-none mt-2\">\r\n                                            <h6 className=\"heading\">\r\n                                                Movie Details\r\n                                            </h6>\r\n                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                    return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                })}</p>\r\n                                            <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span> <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                            <h6>Overview</h6>\r\n                                            <p>{this.state.movieInfo.description}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                                : this.state.searching == true ? <div className=\"m-4 p-2\">Searching...</div>\r\n                                    : null\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movieDetails: state.movie.movieDetails,\r\n        postDetails: state.cinema.cinemaMovie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddMovie);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\hoc\\auth.js",["216"],"\r\nimport React, { Component } from 'react';\r\nimport { auth } from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nexport default function (ComposedClass, reload, access) {\r\n    class AuthenticationCheck extends Component {\r\n\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.props.dispatch(auth())\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps(nextProps) {\r\n            this.setState({ loading: false })\r\n\r\n            if (!nextProps.user.login.isAuth) {\r\n                if (reload) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            } else {\r\n\r\n                if (reload === false) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n                if (nextProps.user.login.role !== 'administrator' && access === true) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && access === false) {\r\n                //     this.props.history.push('/orders');\r\n                // }\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && !access) {\r\n                //     this.props.history.push('/404');\r\n                // }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.loading) {\r\n                return null;\r\n            }\r\n            return (\r\n                <ComposedClass {...this.props} user={this.props.user} />\r\n            )\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        console.log(state)\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticationCheck)\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Register\\Register.js",["217","218","219"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {userRegister} from './../../actions/index';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        name:'',\r\n        email: '',\r\n        dob:'',\r\n        password: '',\r\n        confirmPassword:'',\r\n        error: '',\r\n        success: '',\r\n        validated: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({name:event.target.value})\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputDob = (event) => {\r\n        this.setState({dob:event.target.value})\r\n    }\r\n    handleInputPassword= (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    handleInputConfirmPassword = (event) => {\r\n        this.setState({confirmPassword:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.register === false){\r\n            this.setState({error:'Error registering the user, try again'})\r\n        } else{\r\n            this.setState({\r\n                name:'',\r\n                email:'',\r\n                dob:'',\r\n                password: '',\r\n                confirmPassword:'',\r\n                success: 'Registered successfully',\r\n            })\r\n        }\r\n        setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:'', success:''});\r\n        if(this.state.password === this.state.confirmPassword){\r\n            this.props.dispatch(userRegister({\r\n                name:this.state.name,\r\n                email:this.state.email,\r\n                dob:this.state.dob,\r\n                password:this.state.password\r\n            }))\r\n        }\r\n        else{\r\n            this.setState({error:'Password and Confirm pawword do not match', success:''});\r\n            setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Create your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Full Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        placeholder=\"Full Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"dob\">\r\n                                    <Form.Label>Date of Birth</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        min=\"1920-01-01\"\r\n                                        max=\"2010-12-31\"\r\n                                        value={this.state.dob}\r\n                                        onChange={this.handleInputDob}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"cPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.handleInputConfirmPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                                <div className=\"error\">\r\n                                    {this.state.error}\r\n                                </div>\r\n                                <div className=\"success\">\r\n                                    {this.state.success}\r\n                                </div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Already have an account? <Link to=\"login\">Sign In</Link></p>\r\n                                <hr class=\"register-line\" size=\"1\" />\r\n                                <p className=\"input-style\" style={{ fontFamily: 'Roboto', textAlign: 'center' }}>By clicking Sign Up, you agree to you agree to the <Link to=\"#\">Terms</Link> and <Link to=\"#\">Private policy</Link></p>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Login\\Login.js",["220","221","222"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from './../../actions/index';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false,\r\n        validated: false,\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.login.isAuth){\r\n            this.props.history.push('/home')\r\n        }\r\n        else{\r\n            this.setState({error:nextProps.user.login.message})\r\n            setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n        }\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(loginUser(this.state))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Login to your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Link to=\"forgot\"><p className=\"left-margin-text\">Forgot Password?</p></Link>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign In\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Do not have an account? <Link to=\"register\">Create here</Link></p>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Forgot\\forgot.js",["223","224","225","226","227","228"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { forgotPassword } from './../../actions/index';\r\n\r\nclass forgot extends Component {\r\n    state = {\r\n        email: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    sendEmail = (e) => {\r\n      e.preventDefault();\r\n      this.props.dispatch(forgotPassword(this.state.email))\r\n    };\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"recovery email sent\"){\r\n          this.setState({error:'', success:'Recovery Email sent'})\r\n          setTimeout(()=>{this.setState({success:''}) }, 5000);\r\n      }else if(nextProps.user.message == \"email not in db\"){\r\n        this.setState({error:'Email not in db', success:''})\r\n        setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n      else if(nextProps.user.message == \"email required\"){\r\n        this.setState({error:'Email required', success:''})\r\n          setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n    }    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Forgot Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.sendEmail}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Send Reset Link\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(forgot);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Profile\\profile.js",["229","230","231","232","233","234"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {} from './../../actions/index';\r\n\r\n\r\nclass profile extends Component {\r\n    \r\n    render() {\r\n        let user = this.props.user.login;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <h4 className=\"m-3 text-center\">Personal Information</h4>\r\n                    <p>Full Name: {user.name}</p>\r\n                    <p>Email: {user.email}</p>\r\n                    <p>Date of Birth: {user.dob}</p>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(profile);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\reset.js",["235","236","237","238","239"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { resetPassword, updatePasswordEmail } from './../../actions/index';\r\n\r\nclass reset extends Component {\r\n    state = {\r\n        password: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    componentDidMount() {\r\n      console.log(this.props)\r\n      this.props.dispatch(resetPassword(this.props.match.params.id))\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"password reset link is invalid or has expired\"){\r\n          this.setState({error:'Password Reset Link is Invalid or has Expired', success:''})\r\n          setTimeout(()=>{this.setState({success:'',error:''}) }, 5000);\r\n          document.getElementById(\"mybtn\").disabled = true;\r\n      }\r\n      else if(nextProps.user.message.message == \"password updated\"){\r\n        this.setState({success:'Password updated successfully.'})\r\n        setTimeout(()=>{this.setState({success:'',error:''}) }, 5000);\r\n      }\r\n      \r\n    }    \r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    updatePassword = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(updatePasswordEmail(this.props.match.params.id, this.state.password))\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Reset Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.updatePassword}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter new Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"mybtn\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Update Password\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(reset);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\movie_reducer.js",["240"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\cinema_reducer.js",["241"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        // case 'GET_MOVIE_INFO':\r\n        //     return { ...state, movieInfo: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n        case 'ADD_CINEMA':\r\n            return { ...state, cinema: action.payload }\r\n        case 'GET_CINEMAS_LIST':\r\n            return { ...state, cinemaList: action.payload }\r\n        case 'GET_CINEMA_MOVIES':\r\n            return { ...state, cinemaMoviesList: action.payload }\r\n        case 'ADD_MOVIE_IN_CINEMA':\r\n            return { ...state, cinemaMovie: action.payload }\r\n        case 'CLEAR_CINEMA':\r\n            return { ...state, cinema: action.payload, cinemaMovies: action.payload }\r\n        case 'CLEAR_CINEMA_MOVIE':\r\n            return { ...state, cinemaMovie: action.payload, cinemaMoviesList: action.payload }\r\n        case 'GET_CINEMAS_NAME':\r\n            return { ...state, cinemasName: action.payload }\r\n        case 'CINEMAS_PROMOTIONS_EMAILS':\r\n            return { ...state, promotionalMails: action.payload }\r\n        case 'GET_CINEMA_MOVIES_SHOWING':\r\n            return { ...state, cinemaMovies: action.payload }\r\n\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\user_reducer.js",["242"],"export default function(state={},action){\r\n    switch(action.type){\r\n        case 'USER_LOGIN':\r\n            return {...state,login:action.payload}\r\n        case 'USER_AUTH':\r\n            return {...state,login:action.payload}\r\n        // case 'GET_USER_POSTS':\r\n        //     return {...state,userPosts:action.payload}\r\n        // case 'GET_USER':\r\n        //     return {...state,users:action.payload}\r\n        case 'USER_REGISTER':\r\n            return {\r\n                ...state,\r\n                register:action.payload.success\r\n            }\r\n        case 'USER_FORGOT_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_RESET_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_UPDATE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\showtime_reducer.js",["243"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        // case 'GET_MOVIE_INFO':\r\n        //     return { ...state, movieInfo: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n\r\n        case 'ADD_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        case 'GET_CINEMA_MOVIE_SHOWTIMES':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_MOVIE_SHOWTIME':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Footer\\footer.js",["244","245","246","247","248","249","250"],"import React, { Component } from 'react'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer class=\"site-footer mt-2 \">\r\n                <div class=\"container\">\r\n                    <div class=\"row \">\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Cinemas</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><Link to=\"/cinemas/Lahore\">Cinemas in Lahore</Link></li>\r\n                                <li><Link to={`/cinemas/${\"Karachi\"}`}>Cinemas in Karachi</Link></li>\r\n                                <li><Link to=\"/cinemas/Islamabad\">Cinemas in Islamabad</Link></li>\r\n                                <li><Link to=\"/cinemas/Multan\">Cinemas in Multan</Link></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Movies</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Top Movies</a></li>\r\n                                <li><a href=\"#\">Coming Soon</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Subscribe</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Alerts for latest movies</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Contact</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">About Us</a></li>\r\n                                <li><a href=\"#\">Contact Us</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 \">\r\n                            <span className=\"copyright-text offset-lg-2 col-xs-12 my-2 \">Copyright &copy; <Moment format='YYYY'></Moment> Movie Hut. All Rights Reserved.\r\n                            </span>\r\n                            <span className=\"footer-title  col-sm-12 col my-2\"> MOVIE HUT</span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Privacy Policy</a></span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 col my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Terms {'&'} Conditions</a></span>\r\n                        </div>\r\n                        {/* \r\n                        <div class=\"col-md-4 col-sm-6 col-xs-12\">\r\n                            <ul class=\"social-icons\">\r\n                                <li><a class=\"facebook\" href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n                                <li><a class=\"twitter\" href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                                <li><a class=\"dribbble\" href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n                                <li><a class=\"linkedin\" href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                            </ul>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Widgets\\slider.js",["251"],"import React from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst Slider = (props) => {\r\n\r\n    const items = [\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'First slide',\r\n            caption: 'Welcome to Movie Hut',\r\n            text: 'Movie Hut makes it easy to share a single document with others via email or a shared link',\r\n\r\n        },\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'Realtime Editing',\r\n            caption: 'Latest movies in cinemas',\r\n            text: 'Easy for colleagues and other collaborators to jump into one of your documents.',\r\n\r\n        },\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'Third slide',\r\n            caption: 'Export to Dropbox',\r\n            text: 'Whether you need to post your finished product to your blog or attach it to an email, it can be done instantly.',\r\n        }\r\n    ]\r\n\r\n    const showItems = () => (\r\n        props.movies ?\r\n            props.movies.map((item, i) => {\r\n                return (\r\n                    <Carousel.Item key={i} >\r\n                        <img className=\"d-block w-100\"\r\n                            src={item.background_url}\r\n                            alt={item.title}\r\n                            height=\"400px\"\r\n\r\n                        />\r\n                        {/* <Carousel.Caption className=\"mb-4\">\r\n                            <h2>{item.caption}</h2>\r\n                            <p>{item.text}</p>\r\n                        </Carousel.Caption> */}\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n            : null\r\n    )\r\n\r\n    return (\r\n        <Carousel className=\"d-none d-sm-block w-100\" {...props.settings}>\r\n            {showItems()}\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default Slider;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\header.js",["252"],"import React, { Component } from 'react'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap'\r\nimport NavItems from './navItems'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar style={{ background: \"black\" }} variant=\"dark\">\r\n                <Navbar.Brand href=\"/\" className=\"nav-brand\">\r\n                    MOVIE HUT\r\n                </Navbar.Brand>\r\n                {\r\n                    this.props.user ?\r\n                        this.props.user.login.error === true ?\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                                <Nav.Link eventKey={2} href=\"/register\">\r\n                                    Sign Up\r\n                            </Nav.Link>\r\n                            </Nav>\r\n\r\n                            : <Nav className=\"ml-auto mr-3\"><NavItems user={this.props.user.login} /></Nav>\r\n                        : null\r\n                }\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\actions\\index.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\review.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\navItems.js",["253","254","255","256","257","258"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import FontAwesome from 'react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { NavDropdown, Dropdown, NavLink, NavItem } from 'react-bootstrap'\r\n\r\nconst SidenavItems = ({ user }) => {\r\n\r\n    const items = [\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'home',\r\n        //     text:'Home',\r\n        //     link:'/',\r\n        //     restricted:false\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My Profile',\r\n            link: '/profile',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            admin: true,\r\n            // icon:'file-text-o',\r\n            text: 'Admin Panel',\r\n            link: '/admin-panel',\r\n            restricted: true\r\n        },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Add Admins',\r\n        //     link:'/register',\r\n        //     restricted:true\r\n        // },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Login',\r\n        //     link:'/login',\r\n        //     restricted:false,\r\n        //     exclude:true\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My reviews',\r\n            link: '/user/user-reviews',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Add reviews',\r\n            link: '/user/add',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Logout',\r\n            link: '/logout',\r\n            restricted: true\r\n        }\r\n    ]\r\n\r\n    const element = (item, i) => (\r\n        <div key={i} className={item.type + \"ml-n5\"}>\r\n            <NavDropdown.Item href={item.link}>{item.text}</NavDropdown.Item>\r\n        </div>\r\n    )\r\n\r\n    const showItems = () => (\r\n        user.login ?\r\n            items.map((item, i) => {\r\n                if (user.login.isAuth) {\r\n                    if (user.login.role == \"administrator\") {\r\n                        return item.admin ?\r\n                            element(item, i)\r\n                            : element(item, i)\r\n                    }\r\n                    else if (!item.admin)\r\n                        return element(item, i)\r\n                } else {\r\n                    return !item.restricted ?\r\n                        element(item, i)\r\n                        : null\r\n                }\r\n            })\r\n            : null\r\n    )\r\n\r\n    const userDropdown = () => {\r\n        var str = \"\"\r\n        user.login ?\r\n            user.login.isAuth ?\r\n                str = user.login.name\r\n                : str = \"\"\r\n            : str = \"\"\r\n        return str.substr(0, str.indexOf(' '))\r\n    }\r\n    const navDropdownTitle = (<span style={{ color: \"#ffff\" }} className=\"title\"><i className=\"fa fa-user-circle mr-1\"></i> {userDropdown()}</span>);\r\n    return (\r\n        <div>\r\n\r\n            <NavDropdown title={navDropdownTitle} id=\"basic-nav-dropdown\">\r\n                {showItems()}\r\n            </NavDropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SidenavItems)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\expiredPassword.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Promotions\\promotions.js",["259","260"],"import React, { Component } from 'react'\r\nimport Header from '../../Header/header'\r\nimport { connect } from 'react-redux'\r\nimport { getCinemas, sendPropmotionalEmails } from '../../../actions'\r\n\r\nclass Promotions extends Component {\r\n\r\n    state = {\r\n        disabled: false,\r\n        error: false,\r\n        message: '',\r\n        cinemasList: [],\r\n        cinemaSelected: 'All Cinemas',\r\n        audience: 'All Audience'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCinemas())\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps.promotionalEmail) {\r\n            if (nextProps.promotionalEmail.message) {\r\n                return {\r\n                    disabled: false,\r\n                    message: nextProps.promotionalEmail.message\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nextProps.cinemas) {\r\n            if (nextProps.cinemas.cinemasList) {\r\n                return {\r\n                    cinemasList: nextProps.cinemas.cinemasList,\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleInputAudience = (event) => {\r\n        this.setState({ audience: event.target.value })\r\n    }\r\n\r\n    handleInputCinemas = (event) => {\r\n        this.setState({ cinemaSelected: event.target.value })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        this.setState({ disabled: true })\r\n\r\n        if (this.state.cinemaSelected != \"\" && this.state.audience != \"\") {\r\n\r\n            let cinema = '';\r\n            if (this.state.cinemaSelected !== 'All Cinemas') {\r\n                cinema = this.state.cinemaSelected;\r\n            }\r\n            const emailData = {\r\n                audience: this.state.audience,\r\n                cinemas: cinema\r\n            }\r\n            this.props.dispatch(sendPropmotionalEmails(emailData));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col mt-3\">\r\n                            <h3>Promotions</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col mt-5\">\r\n                            <div>\r\n                                <h5>Campaigns</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col\">\r\n                            <div class=\"shadow p-3 mb-5 bg-white rounded\">\r\n                                <div className=\"my-2\">\r\n                                    <span>Campaign # 1</span>\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span>Name: <strong className=\"ml-2\">  Top Picks</strong></span>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"my-4 form-group form-inline\">\r\n                                        <label for=\"staticEmail\" class=\" col-form-label\">Audience: </label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <select class=\"form-control  col-sm-12\" id=\"audience\" onChange={this.handleInputAudience}>\r\n                                                <option value=\"All Audience\">All Audience</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div class=\"my-4 form-group form-inline\">\r\n                                        <label for=\"staticEmail\" class=\" col-form-label\">Cinemas: </label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <select class=\"form-control  col-sm-12\" id=\"audience\" onChange={this.handleInputCinemas}>\r\n                                                {this.state.cinemasList.length > 0 ? <option value=\"All Cinemas\">All Cinemas</option> : null}\r\n                                                {this.state.cinemasList.map((item, key) => {\r\n                                                    return (\r\n                                                        <option value={item._id} key={key} >{item.name}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"float-right\">\r\n                                            {\r\n                                                this.state.disabled ?\r\n                                                    <button type=\"button\" className=\"btn btn-dark\" disabled >Sending</button>\r\n                                                    :\r\n                                                    this.state.cinemasList.length > 0 && this.state.audience ?\r\n                                                        <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-dark\" >Send Email</button>\r\n                                                        : <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-dark\" disabled>Send Email</button>\r\n\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col my-3\">\r\n                                        <div className=\"float-right\">\r\n                                            <span>{this.state.message}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        cinemas: state.cinema.cinemasName,\r\n        promotionalEmail: state.cinema.promotionalMails\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Promotions);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\cinemas.js",["261","262","263"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCinemas } from '../../actions/index'\r\nimport Header from '../Header/header'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../Footer/footer'\r\nclass City extends Component {\r\n\r\n    state = {\r\n        city: \"Lahore\",\r\n        cinemasList: [],\r\n        cachedProps: '',\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({ city: e.target.id })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCinemas())\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps != prevState.cachedProps) {\r\n            let city = prevState.city;\r\n            if (nextProps.match.params.city) {\r\n                if (nextProps.match.params.city !== prevState.city) {\r\n                    const newCity = nextProps.match.params.city;\r\n                    if (city === \"Lahore\" || city === \"Karachi\" || city === \"Islamabad\" || city === \"Multan\") {\r\n                        city = newCity;\r\n                    }\r\n                }\r\n\r\n            }\r\n            if (nextProps.cinemas) {\r\n                if (nextProps.cinemas.cinemasList) {\r\n                    return {\r\n                        cinemasList: nextProps.cinemas.cinemasList,\r\n                        city: city,\r\n                        cachedProps: nextProps\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    showItems = () => {\r\n        return this.state.cinemasList.map((cinema, key) => {\r\n            if (this.state.city === cinema.city) return (<div className=\"col-12 col-md-4 mt-2\">\r\n                <div class=\"card shadow\" styles={{ width: \"9rem\" }}>\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{cinema.name}</h5>\r\n                        <p class=\"card-text\">{cinema.address}</p>\r\n                        <Link to={`/cinemaMovies/${cinema._id}`} class=\"btn btn-dark\">View Info</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n\r\n        })\r\n    }\r\n    checkCity = (value) => {\r\n        if (this.state.city == value) {\r\n            return \"cities-names-active\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                <div className=\"container mb-5\"  >\r\n                    <div className=\"row mt-3 pl-2\">\r\n                        <nav aria-label=\"breadcrumb\" style={{ background: \"white\" }}>\r\n                            <ol class=\"breadcrumb heading\" style={{ background: \"inherit\", color: \"black\" }}>\r\n                                <li class=\"breadcrumb-item\" ><a href=\"/\" style={{ color: \"black\" }}>HOME</a></li>\r\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\">CINEMAS</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"showtime-container ml-xl-1 row mb-5\">\r\n                        <div id=\"Lahore\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Lahore\")} `}>\r\n                            LAHORE\r\n                        </div>\r\n                        <div id=\"Islamabad\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Islamabad\")} `}>\r\n                            ISLAMABAD\r\n                        </div>\r\n                        <div id=\"Karachi\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Karachi\")} `}>\r\n                            KARACHI\r\n                        </div>\r\n                        <div id=\"Multan\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Multan\")} `}>\r\n                            MULTAN\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.showItems()}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"sticky-footer\" >\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemas: state.cinema.cinemasName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(City)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\moviesInCinema.js",["264"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Header from '../Header/header'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../Footer/footer'\r\nimport { getCinemaShowingMovies, clearCinema } from '../../actions'\r\nimport moment from 'moment'\r\n\r\nclass MoviesCinmeas extends Component {\r\n\r\n    state = {\r\n        cinemaId: '',\r\n        current: 'now-showing',\r\n        cinema: '',\r\n        moviesList: [],\r\n        showtimes: [],\r\n        nowShowingList: [],\r\n        comingSoonList: [],\r\n        today: new moment(),\r\n        nowShowingCount: 0,\r\n        comingSoonCount: 0,\r\n        cachedProps: '',\r\n\r\n\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({ current: e.target.id })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cinemaId = this.props.match.params.cinemaId\r\n\r\n        if (!cinemaId) {\r\n            this.props.history.push('/cinemas')\r\n        }\r\n        else {\r\n            this.setState({ cinemaId: cinemaId });\r\n\r\n            this.props.dispatch(getCinemaShowingMovies(cinemaId));\r\n        }\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n\r\n        if (nextProps.data) {\r\n            if (nextProps.data.cinema) {\r\n                const date = moment(prevState.today).add(0, \"days\").toDate();\r\n                let comingSoonList = [], nowShowingList = [];\r\n\r\n                nextProps.data.showData.forEach(show => {\r\n                    if (moment(show.showtimeDate).diff(date, 'days') > 0) {\r\n                        const movie = comingSoonList.find(({ movieId }) => movieId === show.movieId);\r\n                        if (!movie)\r\n                            comingSoonList.push(show)\r\n                    }\r\n                    else {\r\n                        const movie = nowShowingList.find(({ movieId }) => movieId === show.movieId);\r\n                        if (!movie)\r\n                            nowShowingList.push(show)\r\n                    }\r\n                });\r\n\r\n                return {\r\n                    cinema: nextProps.data.cinema,\r\n                    moviesList: nextProps.data.movies,\r\n                    showtimes: nextProps.data.showData,\r\n                    nowShowingList: [...nowShowingList],\r\n                    comingSoonList: [...comingSoonList],\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    showItems = () => {\r\n\r\n\r\n        if (this.state.current === 'now-showing') {\r\n\r\n            return this.state.nowShowingList.map((show, key) => {\r\n                const movie = this.state.moviesList.find(({ _id }) => _id === show.movieId);\r\n\r\n                return (\r\n                    <div className=\" movie-container m-3 \" key={key}>\r\n                        <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                            <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n\r\n            })\r\n\r\n        }\r\n        else if (this.state.current === 'coming-soon') {\r\n            return this.state.comingSoonList.map((show, key) => {\r\n                const movie = this.state.moviesList.find(({ _id }) => _id === show.movieId);\r\n\r\n                return (\r\n                    <div className=\" movie-container m-3 \" key={key}>\r\n                        <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                            <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    checkCity = (value) => {\r\n        if (this.state.current == value) {\r\n            return \"cities-names-active\"\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearCinema());\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-3 pl-2\">\r\n                        <nav aria-label=\"breadcrumb\" style={{ background: \"white\" }}>\r\n                            <ol className=\"breadcrumb heading\" style={{ background: \"inherit\", color: \"black\" }}>\r\n                                <li className=\"breadcrumb-item\" ><Link to=\"/\" style={{ color: \"black\" }}>HOME</Link></li>\r\n                                <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to=\"/cinemas\" style={{ color: \"black\" }}>CINEMAS</Link></li>\r\n                                <li className=\"breadcrumb-item active text-uppercase\" aria-current=\"page\">{this.state.cinema.city}</li>\r\n\r\n                                <li className=\"breadcrumb-item active text-uppercase\" aria-current=\"page\">{this.state.cinema.name}</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"showtime-container ml-xl-1 row my-1\">\r\n                        <div id=\"now-showing\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"now-showing\")} `}>\r\n                            NOW SHOWING\r\n                        </div>\r\n                        <div id=\"coming-soon\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"coming-soon\")} `}>\r\n                            COMING SOON\r\n                        </div>\r\n                        <div id=\"recommended\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"recommended\")} `}>\r\n                            RECOMMENDED\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.showItems()\r\n                        }\r\n                        {this.state.nowShowingList.length === 0 && this.state.current === 'now-showing' ?\r\n                            <div className=\"col m-2 p-3\">\r\n                                <h5 className=\"text-muted\">No movie shows avaiable today.</h5>\r\n                            </div> :\r\n                            this.state.comingSoonList.length === 0 && this.state.current === 'coming-soon' ?\r\n                                <div className=\"col m-2 p-3\">\r\n                                    <h5 className=\"text-muted\">No upcomming shows available.</h5>\r\n                                </div> : null}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"sticky-footer\">\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.cinema.cinemaMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviesCinmeas)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\CreateCinema.js",["265","266","267","268"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addCinema, clearCinema } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CreateCinema extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        city: 'Lahore',\r\n        address: '',\r\n        url: '',\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputCity = (event) => {\r\n        this.setState({ city: event.target.value })\r\n    }\r\n    handleInputAddress = (event) => {\r\n        this.setState({ address: event.target.value })\r\n    }\r\n    handleInputURL = (event) => {\r\n        this.setState({ url: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addCinema({\r\n            name: this.state.name,\r\n            city: this.state.city,\r\n            address: this.state.address,\r\n            url: this.state.url,\r\n        }))\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // console.log(\"Props\", props)\r\n        if (props.cinemapost.cinema) {\r\n            if (props.cinemapost.cinema.post)\r\n                return {\r\n                    redirect: true,\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearCinema());\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user}/>\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Cinema Details</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        required\r\n                                        placeholder=\"Cinema Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style \" controlId=\"city\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <select id=\"city\" name=\"city\" className=\"form-control\" onChange={this.handleInputCity}>\r\n                                        <option value=\"Lahore\">Lahore</option>\r\n                                        <option value=\"Islamabad\">Islamabad</option>\r\n                                        <option value=\"Multan\">Multan</option>\r\n                                        <option value=\"Karachi\">Karachi</option>\r\n                                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"address\">\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleInputAddress}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"url\">\r\n                                    <Form.Label>Website URL</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"URL\"\r\n                                        value={this.state.url}\r\n                                        onChange={this.handleInputURL}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    SAVE\r\n                                </Button>\r\n                            </Form>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemapost: state.cinema\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateCinema)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\CreateReview\\createReview.js",["269","270","271","272","273","274"],{"ruleId":"275","severity":1,"message":"276","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":23},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"275","severity":1,"message":"283","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"284","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":18},{"ruleId":"275","severity":1,"message":"285","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":21},{"ruleId":"275","severity":1,"message":"286","line":15,"column":8,"nodeType":"277","messageId":"278","endLine":15,"endColumn":17},{"ruleId":"275","severity":1,"message":"287","line":18,"column":7,"nodeType":"277","messageId":"278","endLine":18,"endColumn":17},{"ruleId":"275","severity":1,"message":"288","line":24,"column":7,"nodeType":"277","messageId":"278","endLine":24,"endColumn":12},{"ruleId":"289","severity":1,"message":"290","line":25,"column":5,"nodeType":"291","endLine":29,"endColumn":85},{"ruleId":"289","severity":1,"message":"290","line":30,"column":5,"nodeType":"291","endLine":34,"endColumn":85},{"ruleId":"289","severity":1,"message":"290","line":35,"column":5,"nodeType":"291","endLine":39,"endColumn":85},{"ruleId":"289","severity":1,"message":"290","line":40,"column":5,"nodeType":"291","endLine":44,"endColumn":85},{"ruleId":"289","severity":1,"message":"290","line":119,"column":29,"nodeType":"291","endLine":123,"endColumn":109},{"ruleId":"292","severity":1,"message":"293","line":172,"column":57,"nodeType":"294","messageId":"295","endLine":172,"endColumn":59},{"ruleId":"296","severity":1,"message":"297","line":175,"column":43,"nodeType":"298","messageId":"299","endLine":175,"endColumn":45},{"ruleId":"292","severity":1,"message":"293","line":191,"column":93,"nodeType":"294","messageId":"295","endLine":191,"endColumn":95},{"ruleId":"296","severity":1,"message":"297","line":192,"column":68,"nodeType":"298","messageId":"299","endLine":192,"endColumn":70},{"ruleId":"296","severity":1,"message":"297","line":197,"column":121,"nodeType":"298","messageId":"299","endLine":197,"endColumn":123},{"ruleId":"296","severity":1,"message":"297","line":388,"column":97,"nodeType":"298","messageId":"299","endLine":388,"endColumn":99},{"ruleId":"275","severity":1,"message":"300","line":6,"column":9,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"301","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":24},{"ruleId":"275","severity":1,"message":"302","line":7,"column":26,"nodeType":"277","messageId":"278","endLine":7,"endColumn":34},{"ruleId":"275","severity":1,"message":"303","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":2,"column":36,"nodeType":"277","messageId":"278","endLine":2,"endColumn":39},{"ruleId":"275","severity":1,"message":"306","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"279","replacedBy":"307"},{"ruleId":"281","replacedBy":"308"},{"ruleId":"275","severity":1,"message":"303","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"309","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"310","line":2,"column":25,"nodeType":"277","messageId":"278","endLine":2,"endColumn":29},{"ruleId":"275","severity":1,"message":"304","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":2,"column":36,"nodeType":"277","messageId":"278","endLine":2,"endColumn":39},{"ruleId":"275","severity":1,"message":"311","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":21},{"ruleId":"275","severity":1,"message":"312","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":16},{"ruleId":"296","severity":1,"message":"313","line":71,"column":23,"nodeType":"298","messageId":"299","endLine":71,"endColumn":25},{"ruleId":"275","severity":1,"message":"314","line":6,"column":31,"nodeType":"277","messageId":"278","endLine":6,"endColumn":42},{"ruleId":"296","severity":1,"message":"297","line":64,"column":45,"nodeType":"298","messageId":"299","endLine":64,"endColumn":47},{"ruleId":"296","severity":1,"message":"297","line":65,"column":76,"nodeType":"298","messageId":"299","endLine":65,"endColumn":78},{"ruleId":"296","severity":1,"message":"297","line":82,"column":54,"nodeType":"298","messageId":"299","endLine":82,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":298,"column":33,"nodeType":"298","messageId":"299","endLine":298,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":46,"column":44,"nodeType":"298","messageId":"299","endLine":46,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":68,"column":51,"nodeType":"298","messageId":"299","endLine":68,"endColumn":53},{"ruleId":"289","severity":1,"message":"290","line":120,"column":29,"nodeType":"291","endLine":124,"endColumn":109},{"ruleId":"296","severity":1,"message":"297","line":198,"column":53,"nodeType":"298","messageId":"299","endLine":198,"endColumn":55},{"ruleId":"296","severity":1,"message":"297","line":277,"column":56,"nodeType":"298","messageId":"299","endLine":277,"endColumn":58},{"ruleId":"315","severity":1,"message":"316","line":6,"column":1,"nodeType":"317","endLine":63,"endColumn":2},{"ruleId":"275","severity":1,"message":"303","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":3,"column":36,"nodeType":"277","messageId":"278","endLine":3,"endColumn":39},{"ruleId":"275","severity":1,"message":"303","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":3,"column":36,"nodeType":"277","messageId":"278","endLine":3,"endColumn":39},{"ruleId":"275","severity":1,"message":"303","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":4,"column":31,"nodeType":"277","messageId":"278","endLine":4,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":4,"column":36,"nodeType":"277","messageId":"278","endLine":4,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":22,"column":33,"nodeType":"298","messageId":"299","endLine":22,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":25,"column":39,"nodeType":"298","messageId":"299","endLine":25,"endColumn":41},{"ruleId":"296","severity":1,"message":"297","line":29,"column":38,"nodeType":"298","messageId":"299","endLine":29,"endColumn":40},{"ruleId":"275","severity":1,"message":"303","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":15},{"ruleId":"275","severity":1,"message":"309","line":3,"column":17,"nodeType":"277","messageId":"278","endLine":3,"endColumn":23},{"ruleId":"275","severity":1,"message":"310","line":3,"column":25,"nodeType":"277","messageId":"278","endLine":3,"endColumn":29},{"ruleId":"275","severity":1,"message":"304","line":3,"column":31,"nodeType":"277","messageId":"278","endLine":3,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":3,"column":36,"nodeType":"277","messageId":"278","endLine":3,"endColumn":39},{"ruleId":"275","severity":1,"message":"306","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":14},{"ruleId":"275","severity":1,"message":"303","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":4,"column":31,"nodeType":"277","messageId":"278","endLine":4,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":4,"column":36,"nodeType":"277","messageId":"278","endLine":4,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":19,"column":33,"nodeType":"298","messageId":"299","endLine":19,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":24,"column":46,"nodeType":"298","messageId":"299","endLine":24,"endColumn":48},{"ruleId":"315","severity":1,"message":"316","line":1,"column":1,"nodeType":"317","endLine":37,"endColumn":2},{"ruleId":"315","severity":1,"message":"316","line":1,"column":1,"nodeType":"317","endLine":42,"endColumn":2},{"ruleId":"315","severity":1,"message":"316","line":1,"column":1,"nodeType":"317","endLine":34,"endColumn":2},{"ruleId":"315","severity":1,"message":"316","line":1,"column":1,"nodeType":"317","endLine":32,"endColumn":2},{"ruleId":"318","severity":1,"message":"319","line":24,"column":37,"nodeType":"291","endLine":24,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":25,"column":37,"nodeType":"291","endLine":25,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":31,"column":37,"nodeType":"291","endLine":31,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":37,"column":37,"nodeType":"291","endLine":37,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":38,"column":37,"nodeType":"291","endLine":38,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":50,"column":132,"nodeType":"291","endLine":50,"endColumn":144},{"ruleId":"318","severity":1,"message":"319","line":51,"column":136,"nodeType":"291","endLine":51,"endColumn":148},{"ruleId":"275","severity":1,"message":"288","line":6,"column":11,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"320","line":2,"column":18,"nodeType":"277","messageId":"278","endLine":2,"endColumn":29},{"ruleId":"275","severity":1,"message":"306","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"302","line":5,"column":23,"nodeType":"277","messageId":"278","endLine":5,"endColumn":31},{"ruleId":"275","severity":1,"message":"321","line":5,"column":33,"nodeType":"277","messageId":"278","endLine":5,"endColumn":40},{"ruleId":"275","severity":1,"message":"322","line":5,"column":42,"nodeType":"277","messageId":"278","endLine":5,"endColumn":49},{"ruleId":"292","severity":1,"message":"293","line":78,"column":33,"nodeType":"294","messageId":"295","endLine":78,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":80,"column":41,"nodeType":"298","messageId":"299","endLine":80,"endColumn":43},{"ruleId":"296","severity":1,"message":"313","line":56,"column":39,"nodeType":"298","messageId":"299","endLine":56,"endColumn":41},{"ruleId":"296","severity":1,"message":"313","line":56,"column":68,"nodeType":"298","messageId":"299","endLine":56,"endColumn":70},{"ruleId":"296","severity":1,"message":"313","line":25,"column":23,"nodeType":"298","messageId":"299","endLine":25,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":50,"column":57,"nodeType":"294","messageId":"295","endLine":50,"endColumn":59},{"ruleId":"296","severity":1,"message":"297","line":65,"column":29,"nodeType":"298","messageId":"299","endLine":65,"endColumn":31},{"ruleId":"296","severity":1,"message":"297","line":119,"column":32,"nodeType":"298","messageId":"299","endLine":119,"endColumn":34},{"ruleId":"275","severity":1,"message":"303","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"304","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":2,"column":36,"nodeType":"277","messageId":"278","endLine":2,"endColumn":39},{"ruleId":"275","severity":1,"message":"306","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"303","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"309","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"304","line":2,"column":31,"nodeType":"277","messageId":"278","endLine":2,"endColumn":34},{"ruleId":"275","severity":1,"message":"305","line":2,"column":36,"nodeType":"277","messageId":"278","endLine":2,"endColumn":39},{"ruleId":"275","severity":1,"message":"306","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":14},{"ruleId":"296","severity":1,"message":"297","line":29,"column":39,"nodeType":"298","messageId":"299","endLine":29,"endColumn":41},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["323"],"no-negated-in-lhs",["324"],"'Carousel' is defined but never used.","'HomeSlider' is defined but never used.","'AliceCarousel' is defined but never used.","'showtimes' is defined but never used.","'responsive' is assigned a value but never used.","'items' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'request' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.",["323"],["324"],"'Button' is defined but never used.","'Form' is defined but never used.","'addShowtime' is defined but never used.","'Moment' is defined but never used.","Expected '!==' and instead saw '!='.","'ProgressBar' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavDropdown' is defined but never used.","'NavLink' is defined but never used.","'NavItem' is defined but never used.","no-global-assign","no-unsafe-negation"]