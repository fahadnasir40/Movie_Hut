[{"C:\\Projects\\Movie_Hut\\client\\src\\index.js":"1","C:\\Projects\\Movie_Hut\\client\\src\\routes.js":"2","C:\\Projects\\Movie_Hut\\client\\src\\reportWebVitals.js":"3","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\index.js":"4","C:\\Projects\\Movie_Hut\\client\\src\\hoc\\auth.js":"5","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\home.js":"6","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\moviesInCinema.js":"7","C:\\Projects\\Movie_Hut\\client\\src\\components\\Logout\\logout.js":"8","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\cinemas.js":"9","C:\\Projects\\Movie_Hut\\client\\src\\components\\Login\\Login.js":"10","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\edit.js":"11","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\updatePassword.js":"12","C:\\Projects\\Movie_Hut\\client\\src\\components\\Forgot\\forgot.js":"13","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\profile.js":"14","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js":"15","C:\\Projects\\Movie_Hut\\client\\src\\components\\Register\\Register.js":"16","C:\\Projects\\Movie_Hut\\client\\src\\components\\Reset\\reset.js":"17","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Promotions\\promotions.js":"18","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateCinema\\CreateCinema.js":"19","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js":"20","C:\\Projects\\Movie_Hut\\client\\src\\components\\MovieDetails\\details.js":"21","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js":"22","C:\\Projects\\Movie_Hut\\client\\src\\components\\Reset\\expiredPassword.js":"23","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js":"24","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\CreateReview\\createReview.js":"25","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js":"26","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\settings.js":"27","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\cinema_reducer.js":"28","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\movie_reducer.js":"29","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\user_reducer.js":"30","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\showtime_reducer.js":"31","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\review.js":"32","C:\\Projects\\Movie_Hut\\client\\src\\actions\\index.js":"33","C:\\Projects\\Movie_Hut\\client\\src\\components\\Header\\header.js":"34","C:\\Projects\\Movie_Hut\\client\\src\\components\\Footer\\footer.js":"35","C:\\Projects\\Movie_Hut\\client\\src\\components\\Widgets\\slider.js":"36","C:\\Projects\\Movie_Hut\\client\\src\\components\\Header\\navItems.js":"37","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\reviewDescription.js":"38","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Users\\users.js":"39","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\reportReview.js":"40","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\ReviewReports\\reviewreports.js":"41","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\homeMovies.js":"42","C:\\Projects\\Movie_Hut\\client\\src\\components\\Favorites\\favorites.js":"43","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Cinemas\\edit.js":"44","C:\\Projects\\Movie_Hut\\client\\src\\components\\Policy\\privacyPolicy.js":"45","C:\\Projects\\Movie_Hut\\client\\src\\components\\Policy\\terms.js":"46"},{"size":993,"mtime":1618765583326,"results":"47","hashOfConfig":"48"},{"size":4427,"mtime":1627213546945,"results":"49","hashOfConfig":"48"},{"size":375,"mtime":1618765583349,"results":"50","hashOfConfig":"48"},{"size":327,"mtime":1619178880235,"results":"51","hashOfConfig":"48"},{"size":1701,"mtime":1626961549784,"results":"52","hashOfConfig":"48"},{"size":10251,"mtime":1627143787878,"results":"53","hashOfConfig":"48"},{"size":6666,"mtime":1627052336130,"results":"54","hashOfConfig":"48"},{"size":285,"mtime":1622139378989,"results":"55","hashOfConfig":"48"},{"size":5997,"mtime":1626964258805,"results":"56","hashOfConfig":"48"},{"size":4259,"mtime":1622139378989,"results":"57","hashOfConfig":"48"},{"size":5735,"mtime":1627217793746,"results":"58","hashOfConfig":"48"},{"size":4291,"mtime":1622817229495,"results":"59","hashOfConfig":"48"},{"size":3117,"mtime":1622139378984,"results":"60","hashOfConfig":"48"},{"size":2313,"mtime":1622825721697,"results":"61","hashOfConfig":"48"},{"size":12231,"mtime":1622139793063,"results":"62","hashOfConfig":"48"},{"size":8349,"mtime":1627213546943,"results":"63","hashOfConfig":"48"},{"size":3382,"mtime":1622139379017,"results":"64","hashOfConfig":"48"},{"size":6753,"mtime":1622139378982,"results":"65","hashOfConfig":"48"},{"size":5264,"mtime":1622139378976,"results":"66","hashOfConfig":"48"},{"size":6279,"mtime":1627209989696,"results":"67","hashOfConfig":"48"},{"size":27000,"mtime":1627143787880,"results":"68","hashOfConfig":"48"},{"size":13237,"mtime":1619178880219,"results":"69","hashOfConfig":"48"},{"size":386,"mtime":1622139379015,"results":"70","hashOfConfig":"48"},{"size":3093,"mtime":1626966656262,"results":"71","hashOfConfig":"48"},{"size":8012,"mtime":1626961549777,"results":"72","hashOfConfig":"48"},{"size":10905,"mtime":1627213546930,"results":"73","hashOfConfig":"48"},{"size":5478,"mtime":1627206525820,"results":"74","hashOfConfig":"48"},{"size":1962,"mtime":1627212703138,"results":"75","hashOfConfig":"48"},{"size":2185,"mtime":1627143787881,"results":"76","hashOfConfig":"48"},{"size":2100,"mtime":1627145342331,"results":"77","hashOfConfig":"48"},{"size":1150,"mtime":1619178880235,"results":"78","hashOfConfig":"48"},{"size":11781,"mtime":1627215384557,"results":"79","hashOfConfig":"48"},{"size":13380,"mtime":1627212808047,"results":"80","hashOfConfig":"48"},{"size":1084,"mtime":1622139378985,"results":"81","hashOfConfig":"48"},{"size":3913,"mtime":1627213546934,"results":"82","hashOfConfig":"48"},{"size":5597,"mtime":1626961549783,"results":"83","hashOfConfig":"48"},{"size":2924,"mtime":1627143787877,"results":"84","hashOfConfig":"48"},{"size":2234,"mtime":1626961549781,"results":"85","hashOfConfig":"48"},{"size":7491,"mtime":1627145342225,"results":"86","hashOfConfig":"48"},{"size":7615,"mtime":1627216179252,"results":"87","hashOfConfig":"48"},{"size":7977,"mtime":1627145341984,"results":"88","hashOfConfig":"48"},{"size":14264,"mtime":1627052336129,"results":"89","hashOfConfig":"48"},{"size":4319,"mtime":1627213546932,"results":"90","hashOfConfig":"48"},{"size":6574,"mtime":1627215384554,"results":"91","hashOfConfig":"48"},{"size":9398,"mtime":1627213546936,"results":"92","hashOfConfig":"48"},{"size":11432,"mtime":1627213546942,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"e2gpqz",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"97"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"97"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"97"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Movie_Hut\\client\\src\\index.js",["219"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers'\r\nimport Routes from './routes';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={createStoreWithMiddleware(reducers)}>\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["220","221"],"C:\\Projects\\Movie_Hut\\client\\src\\routes.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\reportWebVitals.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\reducers\\index.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\hoc\\auth.js",["222"],"\r\nimport React, { Component } from 'react';\r\nimport { auth } from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nexport default function (ComposedClass, reload, access) {\r\n    class AuthenticationCheck extends Component {\r\n\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.props.dispatch(auth())\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps(nextProps) {\r\n            this.setState({ loading: false })\r\n\r\n            if (!nextProps.user.login.isAuth) {\r\n                if (reload) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            } else {\r\n\r\n                if (reload === false) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n                if (nextProps.user.login.role !== 'administrator' && access === true) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && access === false) {\r\n                //     this.props.history.push('/orders');\r\n                // }\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && !access) {\r\n                //     this.props.history.push('/404');\r\n                // }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.loading) {\r\n                return null;\r\n            }\r\n            return (\r\n                <ComposedClass {...this.props} user={this.props.user} />\r\n            )\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        console.log(state)\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticationCheck)\r\n}","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\home.js",["223","224","225","226","227","228","229","230","231"],"import React, { Component } from 'react'\r\nimport Header from '../Header/header'\r\nimport Footer from '../Footer/footer'\r\nimport HomeSlider from '../Widgets/slider'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getHomeMovies, getRecommendedMovies, getCinemaHomeMovies } from '../../actions'\r\nimport HomeMovies from './homeMovies';\r\nimport _ from 'lodash'\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        movies: [],\r\n        commingSoon: [],\r\n        recommendedMovies: [],\r\n        cinemaMovies: '',\r\n        cachedProps: '',\r\n        active: 'Top Movies',\r\n        activeCinemas: 'Now Showing'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getHomeMovies());\r\n        this.props.dispatch(getCinemaHomeMovies());\r\n        if (this.props.user.login) {\r\n            if (this.props.user.login.isAuth == true) {\r\n                this.props.dispatch(getRecommendedMovies());\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, prevState) {\r\n        console.log(props);\r\n        if (prevState.cachedProps !== props) {\r\n\r\n            if (props.recommendedMovies != prevState.recommendedMovies) {\r\n                return {\r\n                    recommendedMovies: props.recommendedMovies,\r\n                    cachedProps: props,\r\n                }\r\n            }\r\n\r\n            if (props.cinemaMovies != prevState.cinemaMovies) {\r\n                if (props.movies.moviesList) {\r\n                    if (props.movies.moviesList) {\r\n                        if (props.movies.moviesList.length > 0) {\r\n                            return {\r\n                                movies: props.movies.moviesList,\r\n                                commingSoon: props.movies.commingSoon,\r\n                                recommendedMovies: props.recommendedMovies,\r\n                                cinemaMovies: props.cinemaMovies,\r\n                                cachedProps: props,\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    cinemaMovies: props.cinemaMovies,\r\n                    cachedProps: props,\r\n                }\r\n            }\r\n            if (props.movies.moviesList) {\r\n                if (props.movies.moviesList) {\r\n                    if (props.movies.moviesList.length > 0) {\r\n                        return {\r\n                            movies: props.movies.moviesList,\r\n                            commingSoon: props.movies.commingSoon,\r\n                            recommendedMovies: props.recommendedMovies,\r\n                            cinemaMovies: props.cinemaMovies,\r\n                            cachedProps: props,\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkActive = (item) => {\r\n        if (this.state.active === item)\r\n            return 'active';\r\n    }\r\n\r\n    setActive = (item) => {\r\n        this.setState({\r\n            active: item\r\n        })\r\n    }\r\n\r\n    checkActiveCinemas = (item) => {\r\n        if (this.state.activeCinemas === item)\r\n            return 'active';\r\n    }\r\n\r\n    setActiveCinemas = (item) => {\r\n        this.setState({\r\n            activeCinemas: item\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let nowShowing = [];\r\n        let commingSoon = [];\r\n\r\n\r\n        if (this.state.cinemaMovies) {\r\n            if (this.state.cinemaMovies.nowShowing)\r\n                nowShowing = this.state.cinemaMovies.nowShowing;\r\n            if (this.state.cinemaMovies.commingSoon)\r\n                commingSoon = this.state.cinemaMovies.commingSoon;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n                <div className=\"container-fluid sticky-body\">\r\n                    <div className=\"row justify-content-center d-none d-lg-block \" style={{ backgroundColor: 'black' }}>\r\n                        {\r\n                            this.state.movies ?\r\n                                <HomeSlider\r\n                                    settings={{\r\n                                        interval: '10000'\r\n                                    }}\r\n                                    movies={this.state.movies}\r\n                                />\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"container\">\r\n                            {\r\n                                this.state.cinemaMovies ?\r\n                                    nowShowing.length > 0 || commingSoon.length > 0 ?\r\n                                        <div className=\"my-2\">\r\n                                            <div className=\"row mt-3 ml-5\">\r\n                                                <button className={'cbtn  my-1 ' + `${this.checkActiveCinemas(\"Now Showing\")}`} onClick={() => { this.setActiveCinemas(\"Now Showing\") }}>\r\n                                                    NOW SHOWING\r\n                                                </button>\r\n                                                <button className={'cbtn  my-1 ' + `${this.checkActiveCinemas(\"Upcomming Shows\")}`} onClick={() => { this.setActiveCinemas(\"Upcomming Shows\") }}>\r\n                                                    UPCOMMING SHOWS\r\n                                                </button>\r\n                                                <div className=\"col text-right\">\r\n                                                    <div className=\"heading mx-5 my-2\">IN CINEMAS</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {this.state.activeCinemas === 'Now Showing' ?\r\n                                                nowShowing.length > 0 ?\r\n                                                    <HomeMovies\r\n                                                        movies={this.state.cinemaMovies.nowShowing}\r\n                                                        pagination={false}\r\n                                                        filter={false}\r\n                                                    /> : <span className=\"row m-5 nt-3\">No shows available for today</span>\r\n                                                : this.state.activeCinemas === 'Upcomming Shows' ?\r\n                                                    commingSoon.length > 0 ?\r\n                                                        <HomeMovies\r\n                                                            movies={this.state.cinemaMovies.commingSoon}\r\n                                                            pagination={false}\r\n                                                            filter={false}\r\n                                                        /> : <span className=\"row m-5 nt-3\">No upcomming shows available</span>\r\n                                                    : null\r\n\r\n\r\n                                            }\r\n\r\n                                        </div>\r\n                                        : null\r\n                                    : null\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-4 ml-5\">\r\n                                <button className={'cbtn  my-1 ' + `${this.checkActive(\"Top Movies\")}`} onClick={() => { this.setActive(\"Top Movies\") }}>\r\n                                    TOP MOVIES\r\n                                </button>\r\n                                <button className={'cbtn  my-1 ' + `${this.checkActive(\"Comming Soon\")}`} onClick={() => { this.setActive(\"Comming Soon\") }}>\r\n                                    COMING SOON\r\n                                </button>\r\n                                {\r\n                                    this.props.user.login.isAuth ?\r\n                                        <button className={'cbtn  my-1 ' + `${this.checkActive(\"Recommended\")}`} onClick={() => { this.setActive(\"Recommended\") }}>\r\n                                            RECOMMENDED\r\n                                        </button>\r\n\r\n                                        : null\r\n                                }\r\n                                <button className=\"cbtn my-1\">\r\n                                    <Link style={{ color: \"inherit\", textDecoration: \"none\" }} to=\"/cinemas\">CINEMAS</Link>\r\n                                </button>\r\n                            </div>\r\n                            {\r\n                                this.state.active === 'Top Movies' ?\r\n                                    <HomeMovies\r\n                                        movies={this.state.movies}\r\n                                    /> :\r\n                                    this.state.active === 'Comming Soon' ?\r\n                                        this.state.commingSoon.length > 0 ?\r\n                                        <HomeMovies\r\n                                            movies={this.state.commingSoon}\r\n                                        />\r\n                                        : <span className=\"row m-5 nt-3\">No coming soon movies available</span>\r\n                                        : this.state.active === 'Recommended' ?\r\n                                            this.state.recommendedMovies ?\r\n                                                < HomeMovies\r\n                                                    movies={this.state.recommendedMovies}\r\n\r\n                                                />\r\n                                                : <span className=\"row m-5 nt-3\">No recommended movies available</span>\r\n\r\n\r\n                                            : null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer className=\"sticky-footer\" />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        movies: state.movie.moviesList,\r\n        recommendedMovies: state.movie.recommendedMovies,\r\n        cinemaMovies: state.movie.cinemaMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\moviesInCinema.js",["232"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Header from '../Header/header'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../Footer/footer'\r\nimport { getCinemaShowingMovies, clearCinema } from '../../actions'\r\nimport moment from 'moment'\r\n\r\nclass MoviesCinmeas extends Component {\r\n\r\n    state = {\r\n        cinemaId: '',\r\n        current: 'now-showing',\r\n        cinema: '',\r\n        moviesList: [],\r\n        showtimes: [],\r\n        nowShowingList: [],\r\n        comingSoonList: [],\r\n        today: new moment(),\r\n        nowShowingCount: 0,\r\n        comingSoonCount: 0,\r\n        cachedProps: '',\r\n\r\n\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({ current: e.target.id })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cinemaId = this.props.match.params.cinemaId\r\n\r\n        if (!cinemaId) {\r\n            this.props.history.push('/cinemas')\r\n        }\r\n        else {\r\n            this.setState({ cinemaId: cinemaId });\r\n\r\n            this.props.dispatch(getCinemaShowingMovies(cinemaId));\r\n        }\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n\r\n        if (nextProps.data) {\r\n            if (nextProps.data.cinema) {\r\n                const date = moment(prevState.today).add(0, \"days\").toDate();\r\n                let comingSoonList = [], nowShowingList = [];\r\n\r\n                nextProps.data.showData.forEach(show => {\r\n                    if (moment(show.showtimeDate).diff(date, 'days') > 0) {\r\n                        const movie = comingSoonList.find(({ movieId }) => movieId === show.movieId);\r\n                        if (!movie)\r\n                            comingSoonList.push(show)\r\n                    }\r\n                    else {\r\n                        const movie = nowShowingList.find(({ movieId }) => movieId === show.movieId);\r\n                        if (!movie)\r\n                            nowShowingList.push(show)\r\n                    }\r\n                });\r\n\r\n                return {\r\n                    cinema: nextProps.data.cinema,\r\n                    moviesList: nextProps.data.movies,\r\n                    showtimes: nextProps.data.showData,\r\n                    nowShowingList: [...nowShowingList],\r\n                    comingSoonList: [...comingSoonList],\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    showItems = () => {\r\n\r\n\r\n        if (this.state.current === 'now-showing') {\r\n\r\n            return this.state.nowShowingList.map((show, key) => {\r\n                const movie = this.state.moviesList.find(({ _id }) => _id === show.movieId);\r\n\r\n                return (\r\n                    <div className=\" movie-container m-3 \" key={key}>\r\n                        <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                            <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n\r\n            })\r\n\r\n        }\r\n        else if (this.state.current === 'coming-soon') {\r\n            return this.state.comingSoonList.map((show, key) => {\r\n                const movie = this.state.moviesList.find(({ _id }) => _id === show.movieId);\r\n\r\n                return (\r\n                    <div className=\" movie-container m-3 \" key={key}>\r\n                        <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                            <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    checkCity = (value) => {\r\n        if (this.state.current == value) {\r\n            return \"cities-names-active\"\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearCinema());\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-3 pl-2\">\r\n                        <nav aria-label=\"breadcrumb\" style={{ background: \"white\" }}>\r\n                            <ol className=\"breadcrumb heading\" style={{ background: \"inherit\", color: \"black\" }}>\r\n                                <li className=\"breadcrumb-item\" ><Link to=\"/\" style={{ color: \"black\" }}>HOME</Link></li>\r\n                                <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to=\"/cinemas\" style={{ color: \"black\" }}>CINEMAS</Link></li>\r\n                                <li className=\"breadcrumb-item active text-uppercase\" aria-current=\"page\">{this.state.cinema.city}</li>\r\n\r\n                                <li className=\"breadcrumb-item active text-uppercase\" aria-current=\"page\">{this.state.cinema.name}</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"showtime-container ml-xl-1 row my-1\">\r\n                        <div id=\"now-showing\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"now-showing\")} `}>\r\n                            NOW SHOWING\r\n                        </div>\r\n                        <div id=\"coming-soon\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"coming-soon\")} `}>\r\n                            COMING SOON\r\n                        </div>\r\n                        <div id=\"recommended\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"recommended\")} `}>\r\n                            RECOMMENDED\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.showItems()\r\n                        }\r\n                        {this.state.nowShowingList.length === 0 && this.state.current === 'now-showing' ?\r\n                            <div className=\"col m-2 p-3\">\r\n                                <h5 className=\"text-muted\">No movie shows avaiable today.</h5>\r\n                            </div> :\r\n                            this.state.comingSoonList.length === 0 && this.state.current === 'coming-soon' ?\r\n                                <div className=\"col m-2 p-3\">\r\n                                    <h5 className=\"text-muted\">No upcomming shows available.</h5>\r\n                                </div> : null}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"sticky-footer\">\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.cinema.cinemaMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviesCinmeas)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Logout\\logout.js",["233"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logout = (props) => {\r\n\r\n    let request = axios.get(`/api/logout`)\r\n        .then(request => {\r\n            props.history.push('/')\r\n        })\r\n\r\n    return (\r\n        <div > </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\cinemas.js",["234","235","236","237"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCinemas } from '../../actions/index'\r\nimport Header from '../Header/header'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../Footer/footer'\r\nclass City extends Component {\r\n\r\n    state = {\r\n        city: \"Lahore\",\r\n        cinemasList: [],\r\n        cachedProps: '',\r\n        searchTerm: ''\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({ city: e.target.id })\r\n    }\r\n    handleSearchTerm = (e) => {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCinemas())\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps != prevState.cachedProps) {\r\n            let city = prevState.city;\r\n            if (nextProps.match.params.city) {\r\n                if (nextProps.match.params.city !== prevState.city) {\r\n                    const newCity = nextProps.match.params.city;\r\n                    if (city === \"Lahore\" || city === \"Karachi\" || city === \"Islamabad\" || city === \"Multan\") {\r\n                        city = newCity;\r\n                    }\r\n                }\r\n\r\n            }\r\n            if (nextProps.cinemas) {\r\n                if (nextProps.cinemas.cinemasList) {\r\n                    return {\r\n                        cinemasList: nextProps.cinemas.cinemasList,\r\n                        city: city,\r\n                        cachedProps: nextProps\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    showItems = () => {\r\n        return this.state.cinemasList.map((cinema, key) => {\r\n            if (this.state.city === cinema.city && this.state.searchTerm == \"\") return (<div className=\"col-12 col-md-4 mt-2\">\r\n                <div class=\"card shadow\" styles={{ width: \"9rem\" }}>\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{cinema.name}</h5>\r\n                        <p class=\"card-text\">{cinema.address}</p>\r\n                        <Link to={`/cinemaMovies/${cinema._id}`} class=\"btn btn-dark\">View Info</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n            else if (this.state.city === cinema.city && cinema.name.toLowerCase().includes(this.state.searchTerm.toLowerCase())) return (<div className=\"col-12 col-md-4 mt-2\">\r\n            <div class=\"card shadow\" styles={{ width: \"9rem\" }}>\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{cinema.name}</h5>\r\n                    <p class=\"card-text\">{cinema.address}</p>\r\n                    <Link to={`/cinemaMovies/${cinema._id}`} class=\"btn btn-dark\">View Info</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n        })\r\n    }\r\n    checkCity = (value) => {\r\n        if (this.state.city == value) {\r\n            return \"cities-names-active\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                <div className=\"container mb-5\"  >\r\n                    <div className=\"row mt-3 pl-2\">\r\n                        <nav aria-label=\"breadcrumb\" style={{ background: \"white\" }}>\r\n                            <ol class=\"breadcrumb heading\" style={{ background: \"inherit\", color: \"black\" }}>\r\n                                <li class=\"breadcrumb-item\" ><a href=\"/\" style={{ color: \"black\" }}>HOME</a></li>\r\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\">CINEMAS</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"input-group col-md-4 col float-right mb-3\">\r\n\r\n                                    <div class=\"input-group-prepend \">\r\n                                        <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                            <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" onChange={this.handleSearchTerm} class=\"form-control\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"showtime-container ml-xl-1 row mb-5\">\r\n                        <div id=\"Lahore\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Lahore\")} `}>\r\n                            LAHORE\r\n                        </div>\r\n                        <div id=\"Islamabad\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Islamabad\")} `}>\r\n                            ISLAMABAD\r\n                        </div>\r\n                        <div id=\"Karachi\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Karachi\")} `}>\r\n                            KARACHI\r\n                        </div>\r\n                        <div id=\"Multan\" onClick={this.handleClick} className={` my-1 pl-4 pr-4 cities-names ${this.checkCity(\"Multan\")} `}>\r\n                            MULTAN\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        {this.showItems()}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"sticky-footer\" >\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemas: state.cinema.cinemasName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(City)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Login\\Login.js",["238","239","240"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from './../../actions/index';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false,\r\n        validated: false,\r\n        redirect: false\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.user){\r\n            if(this.props.user.login){\r\n                if(this.props.user.login.isAuth){\r\n                    this.props.history.push('/')\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(nextProps, state){\r\n        if(nextProps.user.login.isAuth){\r\n            nextProps.history.push('/')\r\n        }\r\n        else{\r\n            // this.setState({error:nextProps.user.login.message})\r\n            //setTimeout(()=>{this.setState({error:''}) }, 5000)\r\n            return {\r\n                error:nextProps.user.login.message\r\n            };\r\n        }\r\n        return null\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(loginUser(this.state))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Login to your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        maxlength=\"50\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        maxlength=\"20\"\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Link to=\"forgot\"><p className=\"left-margin-text\">Forgot Password?</p></Link>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign In\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Do not have an account? <Link to=\"register\">Create here</Link></p>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\edit.js",["241"],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\updatePassword.js",["242"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport { changePassword, clearUpdatePassword } from './../../actions/index';\r\n\r\nclass updatePassword extends Component {\r\n    state = {\r\n        email: this.props.user.login.email,\r\n        newPassword: '',\r\n        password: '',\r\n        error: '',\r\n        success: '',\r\n        validated: false,\r\n        redirect: false\r\n    }\r\n    handleInputNewPassword = (event) => {\r\n        this.setState({newPassword:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.dispatch(clearUpdatePassword())\r\n    }\r\n    static getDerivedStateFromProps(nextProps, state){\r\n        if(nextProps.user.message){\r\n            // setTimeout(()=>{this.setState({success:''}) }, 5000)\r\n            if(nextProps.user.message.message === \"Current Password is wrong\"){\r\n                return {\r\n                    error:nextProps.user.message.message,\r\n                    success:''\r\n                };\r\n            }\r\n            else if (nextProps.user.message.message === \"Password updated\"){\r\n                nextProps.history.push('/profile')\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(changePassword(this.state))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Change Account Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Current Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Current Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        maxLength=\"20\"\r\n                                        minLength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"New Password\"\r\n                                        value={this.state.newPassword}\r\n                                        onChange={this.handleInputNewPassword}\r\n                                        maxLength=\"20\"\r\n                                        minLength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Update Password\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(updatePassword);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Forgot\\forgot.js",["243","244","245","246","247","248"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { forgotPassword } from './../../actions/index';\r\n\r\nclass forgot extends Component {\r\n    state = {\r\n        email: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    sendEmail = (e) => {\r\n      e.preventDefault();\r\n      this.props.dispatch(forgotPassword(this.state.email))\r\n    };\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"recovery email sent\"){\r\n          this.setState({error:'', success:'Recovery Email sent'})\r\n          setTimeout(()=>{this.setState({success:''}) }, 5000);\r\n      }else if(nextProps.user.message == \"email not in db\"){\r\n        this.setState({error:'Email not in db', success:''})\r\n        setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n      else if(nextProps.user.message == \"email required\"){\r\n        this.setState({error:'Email required', success:''})\r\n          setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n    }    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Forgot Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.sendEmail}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        maxlength=\"50\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Send Reset Link\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(forgot);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\profile.js",["249","250","251","252"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {} from './../../actions/index';\r\n\r\n\r\nclass profile extends Component {\r\n    \r\n    render() {\r\n        let user = this.props.user.login;\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <h4 className=\"m-3 text-center\">Personal Information</h4>\r\n                    <Link to=\"/edit-profile\">\r\n                        <Button  className=\"btn-dark mt-2 mb-3 edit-profile\" style={{ borderRadius: '100px' }}  type=\"submit\">\r\n                            Edit Profile\r\n                        </Button>\r\n                    </Link>\r\n                    <div className=\"edit-profile-hieght\">\r\n                        <p>Full Name:<div  style={{ marginRight: \"2.5em\", display: \"inline\" }}></div> {user.name}</p>\r\n                        <hr />\r\n                        <p>Email:<div  style={{ marginRight: \"4.5em\", display: \"inline\" }}></div> {user.email}</p>\r\n                        <hr />\r\n                        <p>Date of Birth:<div  style={{ marginRight: \"1.3em\", display: \"inline\" }}></div> {user.dob}</p>\r\n                        <hr />\r\n                    </div>\r\n                    <Link to=\"/settings\">\r\n                        <Button className=\"btn-dark mt-2 mb-3 edit-profile\" style={{ borderRadius: '100px' }}  type=\"submit\">\r\n                            Settings\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to=\"/updatePassword\">\r\n                        <Button className=\"btn-dark mt-2 mb-3 mr-2 edit-profile\" style={{ borderRadius: '100px' }}  type=\"submit\">\r\n                            Change Password\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(profile);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js",["253","254","255","256","257","258","259","260"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addShowtime, clearCinemaMovie, clearShowtime, getCinemaMovies } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Moment } from 'react-moment';\r\n\r\nclass CreateShowtime extends Component {\r\n    setDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        return today;\r\n    }\r\n    setDateMax = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 3; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        return today;\r\n    }\r\n    state = {\r\n        // name: '',\r\n        // language: 'English',\r\n        // date: '',\r\n        // time: '',\r\n        // screenType: '',\r\n        moviesList: [],\r\n        dupList: [],\r\n        redirect: false,\r\n        cachedProps: ''\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputLanguage = (event) => {\r\n        this.setState({ language: event.target.value })\r\n    }\r\n    handleInputDate = (event) => {\r\n        this.setState({ date: event.target.value })\r\n    }\r\n    handleInputTime = (event) => {\r\n        this.setState({ time: event.target.value })\r\n    }\r\n    handleInputScreen = (event) => {\r\n        this.setState({ screenType: event.target.value })\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n\r\n        if (nextProps != state.cachedProps) {\r\n            if (nextProps.cinemaInfo) {\r\n                if (nextProps.cinemaInfo.movies) {\r\n                    return {\r\n                        moviesList: nextProps.cinemaInfo.movies.reverse(),\r\n                        dupList: nextProps.cinemaInfo.movies.reverse(),\r\n                        cachedProps: nextProps\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(\"Props\", props)\r\n        // if (props.showtimepost.showtime) {\r\n        //     if (props.showtimepost.showtime.post)\r\n        //         return {\r\n        //             redirect: true,\r\n        //         }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearShowtime());\r\n        this.props.dispatch(clearCinemaMovie());\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.cinemaId;\r\n        this.props.dispatch(getCinemaMovies(id));\r\n        this.setState({\r\n            cinemaId: id\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        // Variable to hold the original version of the list\r\n        let currentList = [];\r\n        // Variable to hold the filtered list before putting into state\r\n        let newList = [];\r\n\r\n        // If the search bar isn't empty\r\n        if (e.target.value !== \"\") {\r\n            // Assign the original list to currentList\r\n            currentList = this.state.moviesList;\r\n\r\n            // Use .filter() to determine which items should be displayed\r\n            // based on the search terms\r\n            newList = currentList.filter(item => {\r\n                // change current item to lowercase\r\n                const lc = item.title.toLowerCase();\r\n                // change search term to lowercase\r\n                const filter = e.target.value.toLowerCase();\r\n                // check to see if the current list item includes the search term\r\n                // If it does, it will be added to newList. Using lowercase eliminates\r\n                // issues with capitalization in search terms and search content\r\n                return lc.includes(filter);\r\n            });\r\n        } else {\r\n            // If the search bar is empty, set newList to original task list\r\n            newList = this.state.moviesList;\r\n        }\r\n        // Set the filtered state based on what our rules added to newList\r\n        this.setState({\r\n            dupList: newList\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col col-md-4 my-4\">\r\n                                <h4>Create new showtime</h4>\r\n                            </div>\r\n                            <div className=\"col my-4 mr-md-5\">\r\n                                <div className=\"float-right mr-md-2\">\r\n                                    <Link to={`/addMovie/${this.state.cinemaId}`} className=\"btn btn-dark\"><i className=\"fa fa-cup\"> </i>  New Movie</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"input-group col-md-4 col float-right  mb-3 mr-md-5\">\r\n\r\n                                    <div class=\"input-group-prepend \">\r\n                                        <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                            <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" onChange={this.handleSearchChange} class=\"form-control\" placeholder=\"Search Movie\" aria-label=\"Search\" aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row d-flex mx-md-5 px-md-5\" style={{ float: \"none\", justifyContent: 'between' }}>\r\n\r\n                        {\r\n                            this.state.dupList.map((movie, key) => {\r\n                                return (\r\n                                    <div key={key} className=' cinema-movie-container  d-flex flex-row my-2 mx-md-4 mx-1 rounded border p-2 display-inline '>\r\n\r\n                                        <div className=\"d-inline\" >\r\n                                            <img id=\"postertest\" className='poster-small d-flex mr-3 ' src={movie.poster_url} alt=\"movie-poster\" />\r\n                                        </div>\r\n                                        <div className=\"d-inline\">\r\n                                            <Link to={`/movie/${movie._id}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'black' }}>\r\n                                                <strong >\r\n                                                    {movie.title}\r\n                                                </strong>\r\n                                            </Link>\r\n\r\n                                            <div>\r\n                                                Release: {movie.releaseDate}\r\n                                            </div>\r\n                                            <div>\r\n                                                Runtime: {movie.runtime} Minutes\r\n                                                </div>\r\n                                            <div>\r\n                                                Rating: {movie.rating}\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <Link to={{\r\n                                                    pathname: `/showtimes`,\r\n                                                    showtimeProps: {\r\n                                                        cinemaId: this.state.cinemaId,\r\n                                                        movie: movie\r\n                                                    }\r\n                                                }} className=\"btn btn-dark my-3\">\r\n                                                    Showtimes\r\n                                                </Link>\r\n                                            </div>\r\n                                            {/* <div>\r\n                                                <button className=\"btn border my-1\">\r\n                                                    Edit Showtime\r\n                                                    </button>\r\n                                            </div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div >\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n/* <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                <Form.Group className=\"input-style\" controlId=\"moviename\">\r\n                    <Form.Label>Movie Name</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        placeholder=\"Movie Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputName}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"language\">\r\n                    <Form.Label>Language</Form.Label>\r\n                    <select id=\"language\" name=\"language\" onChange={this.handleInputLanguage}>\r\n                        <option value=\"english\">English</option>\r\n                        <option value=\"urdu\">Urdu</option>\r\n                    </select>\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"date\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        min={this.setDate()}\r\n                        max={this.setDateMax()}\r\n                        value={this.state.date}\r\n                        onChange={this.handleInputDate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"time\">\r\n                    <Form.Label>Time</Form.Label>\r\n                    <Form.Control\r\n                        type=\"time\"\r\n                        placeholder=\"Time\"\r\n                        value={this.state.time}\r\n                        onChange={this.handleInputTime}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"input-style\" controlId=\"screen\">\r\n                    <Form.Label>Screen type</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Screen Type\"\r\n                        value={this.state.screenType}\r\n                        onChange={this.handleInputScreen}\r\n                    />\r\n                    {/* <select id=\"type\" name=\"type\">\r\n                        <option value=\"gold1\">Gold-1</option>\r\n                        <option value=\"gold2\">Gold-2</option>\r\n                        <option value=\"plat1\">Platinum-1</option>\r\n                        <option value=\"plat2\">Platinum-2</option>\r\n                    </select> */\r\n/* </Form.Group>\r\n                        <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                            SAVE\r\n                                </Button>\r\n                            </Form> */\r\n\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemaInfo: state.cinema.cinemaMoviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateShowtime);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Register\\Register.js",["261","262","263","264"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {userRegister, loginUser} from './../../actions/index';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        name:'',\r\n        email: '',\r\n        dob:'',\r\n        password: '',\r\n        confirmPassword:'',\r\n        error: '',\r\n        success: '',\r\n        validated: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({name:event.target.value})\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputDob = (event) => {\r\n        this.setState({dob:event.target.value})\r\n    }\r\n    handleInputPassword= (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    handleInputConfirmPassword = (event) => {\r\n        this.setState({confirmPassword:event.target.value})\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, state){\r\n        console.log(nextProps)\r\n        if(nextProps.user.register === false){\r\n            return {error:'Error registering the user, try again'}\r\n        }\r\n        if(nextProps.user.login.isAuth){\r\n            nextProps.history.push('/')\r\n        } \r\n        else if(nextProps.user.register === true){{\r\n            \r\n            if(nextProps.user.login.isAuth){\r\n                nextProps.history.push('/')\r\n            } \r\n            \r\n            // if(nextProps.user.login.error){\r\n            //     nextProps.history.push('/login')\r\n            // } \r\n            nextProps.dispatch(loginUser({\r\n                email:state.email,\r\n                password:state.password\r\n            }))\r\n            // this.setState({\r\n            //     name:'',\r\n            //     email:'',\r\n            //     dob:'',\r\n            //     password: '',\r\n            //     confirmPassword:'',\r\n            //     success: 'Registered successfully',\r\n            // })\r\n            \r\n        }\r\n        return null;\r\n        // setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n    }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:'', success:''});\r\n        if(this.state.password === this.state.confirmPassword){\r\n            this.props.dispatch(userRegister({\r\n                name:this.state.name,\r\n                email:this.state.email,\r\n                dob:this.state.dob,\r\n                password:this.state.password\r\n            }))\r\n        }\r\n        else{\r\n            this.setState({error:'Password and Confirm pawword do not match', success:''});\r\n            setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Create your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Full Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        placeholder=\"Full Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                        maxlength=\"100\"\r\n                                        minlength=\"3\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        maxlength=\"50\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"dob\">\r\n                                    <Form.Label>Date of Birth</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        min=\"1920-01-01\"\r\n                                        max=\"2010-12-31\"\r\n                                        value={this.state.dob}\r\n                                        onChange={this.handleInputDob}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        maxlength=\"20\"\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"cPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.handleInputConfirmPassword}\r\n                                        maxlength=\"20\"\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                                <div className=\"error\">\r\n                                    {this.state.error}\r\n                                </div>\r\n                                <div className=\"success\">\r\n                                    {this.state.success}\r\n                                </div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Already have an account? <Link to=\"login\">Sign In</Link></p>\r\n                                <hr class=\"register-line\" size=\"1\" />\r\n                                <p className=\"input-style\" style={{ fontFamily: 'Roboto', textAlign: 'center' }}>By clicking Sign Up, you agree to you agree to the <Link to=\"#\">Terms</Link> and <Link to=\"#\">Private policy</Link></p>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Reset\\reset.js",["265","266","267","268","269"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { resetPassword, updatePasswordEmail } from './../../actions/index';\r\n\r\nclass reset extends Component {\r\n    state = {\r\n        password: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    componentDidMount() {\r\n      console.log(this.props)\r\n      this.props.dispatch(resetPassword(this.props.match.params.id))\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"password reset link is invalid or has expired\"){\r\n            nextProps.history.push(\"/reset-expired\")\r\n        //   this.setState({error:'Password Reset Link is Invalid or has Expired', success:''})\r\n        //   setTimeout(()=>{this.setState({success:'',error:''}) }, 5000);\r\n        //   document.getElementById(\"mybtn\").disabled = true;\r\n      }\r\n      else if(nextProps.user.message.message == \"password updated\"){\r\n        this.setState({success:'Password updated successfully.'})\r\n        setTimeout(()=>{nextProps.history.push(\"/login\") }, 2000);\r\n      }\r\n      \r\n    }    \r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    updatePassword = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(updatePasswordEmail(this.props.match.params.id, this.state.password))\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Reset Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.updatePassword}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter new Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"mybtn\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Update Password\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(reset);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Promotions\\promotions.js",["270","271"],"import React, { Component } from 'react'\r\nimport Header from '../../Header/header'\r\nimport { connect } from 'react-redux'\r\nimport { getCinemas, sendPropmotionalEmails } from '../../../actions'\r\n\r\nclass Promotions extends Component {\r\n\r\n    state = {\r\n        disabled: false,\r\n        error: false,\r\n        message: '',\r\n        cinemasList: [],\r\n        cinemaSelected: 'All Cinemas',\r\n        audience: 'All Audience'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCinemas())\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps.promotionalEmail) {\r\n            if (nextProps.promotionalEmail.message) {\r\n                return {\r\n                    disabled: false,\r\n                    message: nextProps.promotionalEmail.message\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nextProps.cinemas) {\r\n            if (nextProps.cinemas.cinemasList) {\r\n                return {\r\n                    cinemasList: nextProps.cinemas.cinemasList,\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleInputAudience = (event) => {\r\n        this.setState({ audience: event.target.value })\r\n    }\r\n\r\n    handleInputCinemas = (event) => {\r\n        this.setState({ cinemaSelected: event.target.value })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        this.setState({ disabled: true })\r\n\r\n        if (this.state.cinemaSelected != \"\" && this.state.audience != \"\") {\r\n\r\n            let cinema = '';\r\n            if (this.state.cinemaSelected !== 'All Cinemas') {\r\n                cinema = this.state.cinemaSelected;\r\n            }\r\n            const emailData = {\r\n                audience: this.state.audience,\r\n                cinemas: cinema\r\n            }\r\n            this.props.dispatch(sendPropmotionalEmails(emailData));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col mt-3\">\r\n                            <h3>Promotions</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col mt-5\">\r\n                            <div>\r\n                                <h5>Campaigns</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col\">\r\n                            <div class=\"shadow p-3 mb-5 bg-white rounded\">\r\n                                <div className=\"my-2\">\r\n                                    <span>Campaign # 1</span>\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span>Name: <strong className=\"ml-2\">  Top Picks</strong></span>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"my-4 form-group form-inline\">\r\n                                        <label for=\"staticEmail\" class=\" col-form-label\">Audience: </label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <select class=\"form-control  col-sm-12\" id=\"audience\" onChange={this.handleInputAudience}>\r\n                                                <option value=\"All Audience\">All Audience</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div class=\"my-4 form-group form-inline\">\r\n                                        <label for=\"staticEmail\" class=\" col-form-label\">Cinemas: </label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <select class=\"form-control  col-sm-12\" id=\"audience\" onChange={this.handleInputCinemas}>\r\n                                                {this.state.cinemasList.length > 0 ? <option value=\"All Cinemas\">All Cinemas</option> : null}\r\n                                                {this.state.cinemasList.map((item, key) => {\r\n                                                    return (\r\n                                                        <option value={item._id} key={key} >{item.name}</option>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"float-right\">\r\n                                            {\r\n                                                this.state.disabled ?\r\n                                                    <button type=\"button\" className=\"btn btn-dark\" disabled >Sending</button>\r\n                                                    :\r\n                                                    this.state.cinemasList.length > 0 && this.state.audience ?\r\n                                                        <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-dark\" >Send Email</button>\r\n                                                        : <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-dark\" disabled>Send Email</button>\r\n\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col my-3\">\r\n                                        <div className=\"float-right\">\r\n                                            <span>{this.state.message}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        cinemas: state.cinema.cinemasName,\r\n        promotionalEmail: state.cinema.promotionalMails\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Promotions);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateCinema\\CreateCinema.js",["272","273","274","275"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addCinema, clearCinema } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CreateCinema extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        city: 'Lahore',\r\n        address: '',\r\n        url: '',\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputCity = (event) => {\r\n        this.setState({ city: event.target.value })\r\n    }\r\n    handleInputAddress = (event) => {\r\n        this.setState({ address: event.target.value })\r\n    }\r\n    handleInputURL = (event) => {\r\n        this.setState({ url: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addCinema({\r\n            name: this.state.name,\r\n            city: this.state.city,\r\n            address: this.state.address,\r\n            url: this.state.url,\r\n        }))\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // console.log(\"Props\", props)\r\n        if (props.cinemapost.cinema) {\r\n            if (props.cinemapost.cinema.post)\r\n                return {\r\n                    redirect: true,\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearCinema());\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user}/>\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Cinema Details</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        required\r\n                                        placeholder=\"Cinema Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style \" controlId=\"city\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <select id=\"city\" name=\"city\" className=\"form-control\" onChange={this.handleInputCity}>\r\n                                        <option value=\"Lahore\">Lahore</option>\r\n                                        <option value=\"Islamabad\">Islamabad</option>\r\n                                        <option value=\"Multan\">Multan</option>\r\n                                        <option value=\"Karachi\">Karachi</option>\r\n                                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"address\">\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleInputAddress}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"url\">\r\n                                    <Form.Label>Website URL</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"URL\"\r\n                                        value={this.state.url}\r\n                                        onChange={this.handleInputURL}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    SAVE\r\n                                </Button>\r\n                            </Form>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cinemapost: state.cinema\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateCinema)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js",["276","277"],"C:\\Projects\\Movie_Hut\\client\\src\\components\\MovieDetails\\details.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import React, { Component } from 'react';\r\nimport Header from '../Header/header';\r\nimport { Modal } from 'react-bootstrap'\r\nimport Footer from '../Footer/footer'\r\n\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport Review from '../Review/review';\r\n\r\nimport { getMovieInfo, } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\nimport showtimes from '../Admin/CreateShowtime/showtimes';\r\n\r\n\r\nconst responsive = {\r\n    0: { items: 1 },\r\n    568: { items: 2 },\r\n    1024: { items: 3 },\r\n};\r\n\r\nconst items = [\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <div className=\"item\" data-value=\"4\">4</div>,\r\n    <div className=\"item\" data-value=\"5\">5</div>,\r\n];\r\n\r\nclass MovieDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            castToDisplay: 14\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(getMovieInfo(this.props.match.params.movieId));\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.movie.movieInfo) {\r\n            return {\r\n                movieInfo: props.movie.movieInfo.movie,\r\n                showtimeInfo: props.movie.movieInfo.showtime,\r\n                cinemaInfo: props.movie.movieInfo.cinema,\r\n                reviewInfo: props.movie.movieInfo.reviews\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    state = {\r\n        show: false,\r\n        selectedDate: moment()\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n\r\n    getVideoId = (url) => {\r\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n\r\n        return (match && match[2].length === 11)\r\n            ? match[2]\r\n            : null;\r\n    }\r\n\r\n    playTrailer = (videos) => {\r\n        if (videos.length > 0) {\r\n            return (\r\n\r\n                <Modal\r\n                    show={this.state.show} onHide={this.handleClose}\r\n\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    size=\"xl\"\r\n                    dialogClassName=\"modal-90w\"\r\n                    // className=\"container-fluid\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header className=\"primary\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                            Movie Trailer\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <div className=\"trailer-body m-0 mt-n1 p-0 primary\" >\r\n                        <div className=\"trailer-container\">\r\n                            <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\"\r\n                                src={'https://www.youtube-nocookie.com/embed/' + this.getVideoId(videos[0]) + '?autoplay=1&loop=1&modestbranding=1&playlist=' + this.getVideoId(videos[0])} frameborder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n                                allowfullscreen=\"1\"\r\n                                webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    showMore = () => {\r\n        let castLength = this.state.movieInfo.cast.length;\r\n        this.setState({ castToDisplay: castLength });\r\n    }\r\n\r\n    showLess = () => {\r\n        this.setState({ castToDisplay: 12 });\r\n    }\r\n\r\n    handleSelectedDate = (date) => {\r\n        this.setState({\r\n            selectedDate: date\r\n        })\r\n    }\r\n\r\n    getShowtimeDates = () => {\r\n        const today = moment().startOf('day');;\r\n\r\n        const days = [0, 0, 0, 0, 0, 0];\r\n        var i = 0;\r\n        return days.map((d, key) => {\r\n            const date = moment(today).add(i++, \"days\").toDate();\r\n            let c = (moment(this.state.selectedDate).isSame(date, \"date\")) ? 'showtime-date-active' : '';\r\n            return (\r\n                <div className={`showtime-date ${c}`} onClick={() => { return this.handleSelectedDate(date) }}>\r\n                    <div>\r\n                        <Moment date={date} format=\"MMM\" />\r\n                    </div>\r\n                    <div>\r\n                        <Moment date={date} format=\"ddd\" />  <Moment date={date} format=\"DD\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    getScreenPlays = () => {\r\n        if (this.state.cinemaInfo) {\r\n            if (this.state.showtimeInfo.some(item => moment(item.date).isSame(this.state.selectedDate, \"date\"))) {\r\n\r\n                return this.state.cinemaInfo.map(cinema => {\r\n\r\n                    var showtimeCinemas = this.state.showtimeInfo.some(item => {\r\n                        if (item.cinemaId == cinema._id &&\r\n                            moment(item.date).isSame(this.state.selectedDate, \"date\")) return true;\r\n                        else return false\r\n                    });\r\n                    if (showtimeCinemas) {\r\n                        return (\r\n                            <div className=\"row col-12 \">\r\n                                <div className=\"offset-lg-2 offset-xl-2 \">\r\n                                    <div className=\"ml-xl-4  ml-lg-n1 my-3 \">\r\n                                        <div className=\"col-12  my-4\">\r\n                                            <div className=\"cinema-title font-text ml-xs-n2  font-weight-bold\">\r\n                                                {cinema.name} {cinema.address.substring(0, 21)}... {cinema.city}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                this.state.showtimeInfo.map((showtime, key) => {\r\n                                                    if (cinema._id == showtime.cinemaId && moment(showtime.date).isSame(this.state.selectedDate, \"date\")) {\r\n                                                        return (\r\n                                                            <div className=\"col\" key={key}>\r\n                                                                <div className=\" session-container\">\r\n                                                                    <span className=\"text-capitalize session \">\r\n                                                                        Screen {showtime.screenType} {showtime.language == 'Urdu' ? '(Urdu)' : null}\r\n                                                                    </span>\r\n                                                                    <span className=\"attribute ml-2 border\">\r\n                                                                        <Moment date={showtime.date} format=\"hh:mm A\" />\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-8\">\r\n                                    <div className=\"offset-lg-2 offset-xl-4\">\r\n                                        <Link to={{ pathname: `http://${cinema.url}` }} target=\"_blank\" className=\"btn border ml-lg-2 ml-xl-n2 mb-3\"><i className=\"fa fa-send\"></i>  Visit Site</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n                )\r\n            }\r\n            else {\r\n                return <div className=\"row col-12 \">\r\n                    <div className=\"offset-lg-2 offset-xl-2 p-2\">\r\n                        <div className=\"ml-xl-4  ml-lg-n1 my-3 text-muted\"> No showtimes available.  </div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let cast = '';\r\n        if (this.state.movieInfo)\r\n            cast = this.state.movieInfo.cast;\r\n\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n\r\n                {\r\n                    this.state.movieInfo ?\r\n                        <div className=\"container-fluid mt-md-4 mt-3 overflow-hidden\">\r\n                            {this.playTrailer(this.state.movieInfo.videoLinks)}\r\n                            <section className=\"row\">\r\n                                <div className=\"  p-md-2 rounded \">\r\n\r\n                                    <div className=\"col-12 offset-lg-1 offset-xl-2  px-2\">\r\n                                        <div className=\"media p-1\">\r\n\r\n                                            <img id=\"postertest\" className='poster d-flex mr-3 ' src={this.state.movieInfo.poster_url} alt=\"movie-poster\" />\r\n\r\n\r\n                                            <div className=\"media-body\">\r\n\r\n                                                <div className=\" d-md-none\">\r\n                                                    <div className=\"movie-details\">\r\n                                                        <h5 className=\"title\">\r\n                                                            {this.state.movieInfo.title}\r\n                                                        </h5>\r\n                                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment></p>\r\n                                                    </div>\r\n                                                    <button className=\" btn  btn-dark mr-2\" onClick={this.handleShow}><i className=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                    <button className=\" btn-dark btn my-2 d-md-none \" ><i className=\"fa fa-heart\"> Favorite</i></button>\r\n                                                </div>\r\n\r\n                                                <div className=\"movie-details d-none d-md-block col-lg-8 col-xl-7\">\r\n                                                    <h3 className=\"title\">\r\n                                                        {this.state.movieInfo.title}\r\n                                                    </h3>\r\n                                                    <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                        {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                            return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                        })}\r\n                                                    </p>\r\n                                                    <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span>   <i className=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                                    <h6>Overview</h6>\r\n                                                    <p>{this.state.movieInfo.description}\r\n                                                    </p>\r\n\r\n                                                    <div className=\"d-none d-md-block\">\r\n                                                        <button className=\" btn  btn-dark\" onClick={this.handleShow}><i className=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                        <button className=\" btn-dark btn-circle ml-2\" ><i className=\"fa fa-heart\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 d-block d-md-none mt-2\">\r\n                                        <h6 className=\"heading\">\r\n                                            Movie Details\r\n                                    </h6>\r\n                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                            {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                            })}</p>\r\n                                        <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span> <i className=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                        <h6>Overview</h6>\r\n                                        <p>{this.state.movieInfo.description}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <div className=\"row\">\r\n                                <section className=\"col-lg-8  col-12 \" >\r\n                                    {/* ---------Showtimes--------- */}\r\n                                    <div className=\"row col-12  m-0 \">\r\n\r\n                                        <div className=\" offset-lg-2 offset-xl-2 \" >\r\n                                            <div className=\"ml-xl-4 ml-md-3 ml-lg-n1 ml-sm-2 my-3\">\r\n                                                <h5 className=\"heading ml-xl-1  mt-1\">SHOWTIMES</h5>\r\n                                                {/* --------Showtime Dates-------- */}\r\n\r\n                                                <div className=\" showtime-container  ml-xl-1  row  my-3 \">\r\n\r\n                                                    {this.getShowtimeDates()}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* --------Screen Plays-------- */}\r\n                                        {this.getScreenPlays()}\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* Video Slider */}\r\n                                    {/* <div className=\"row col-12 slider-details\">\r\n                                        Slider ///\r\n                                    <div className=\"offset-lg-2 offset-xl-2\">\r\n\r\n                                            <AliceCarousel\r\n                                                mouseTracking\r\n                                                items={items}\r\n                                                responsive={responsive}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"row my-4 order-last\">\r\n                                        <div className=\" col-12 offset-lg-2 offset-xl-2 col-lg-10 \">\r\n                                            <Review {...this.props} movie={this.state.movieInfo} reviews={this.state.reviewInfo} />\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n\r\n                                <section className=\"col-lg-4 col-md-6 col-xl-3 col-sm-9 col-xs-12 mb-3\">\r\n\r\n                                    {/* ---------Cast and Crew--------- */}\r\n                                    <div >\r\n                                        <div className=\"card \">\r\n                                            <div className=\"card-header  heading text-center\" style={{ borderBottom: 'none', background: '#fff' }}>\r\n                                                CAST {'&'} CREW\r\n                                        <hr className=\"mb-1 mt-1 ml-4 mr-4 \" />\r\n                                            </div>\r\n                                            <div className=\"card-body \">\r\n                                                <section>\r\n                                                    <div className=\"row mx-1 mt-n3 mb-2\">\r\n                                                        {\r\n\r\n                                                            cast.slice(0, this.state.castToDisplay).map((cast, i) => {\r\n                                                                return (\r\n                                                                    <div className='col-6 mb-2' key={i} >\r\n                                                                        <div>\r\n                                                                            <span className=\"heading\">{cast.name}</span>\r\n                                                                            <br />\r\n                                                                            <span className=\"font-rc\">{cast.character}</span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    {\r\n                                                        this.state.castToDisplay < cast.length ?\r\n                                                            <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showMore}>SHOW MORE</span></div></div>\r\n                                                            : (cast.length > 12 && (cast.length == this.state.castToDisplay)) ?\r\n                                                                <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showLess}>SHOW LESS</span></div></div>\r\n                                                                : null\r\n                                                    }\r\n                                                </section>\r\n                                                {/* <section>\r\n                                                    <div className=\"row mx-1\"><span className=\"heading col \" >Starring </span></div>\r\n                                                    <div className=\"row mx-1 mt-2 mb-1\">\r\n                                                        <div className=\"col-6 \">\r\n                                                            <div className=\"font-text\">\r\n                                                                <span className=\"heading\">Tom Kenny</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Spongebob Voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='col-6'>\r\n                                                            <div>\r\n                                                                <span className=\"heading\">Roger Bumpass</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Squidward Tentacles voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mx-1 mb-2\">\r\n                                                        <div className=\"col-6 \">\r\n                                                            <div className=\"font-text\">\r\n                                                                <span className=\"heading\">Bill Fagerbakke</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Patrick Star voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"row p-4\">\r\n\r\n                            <h4>Loading</h4>\r\n                        </div>\r\n                }\r\n\r\n                <div className=\" sticky-footer\">\r\n                    <Footer />\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        movie: state.movie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieDetails)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js",["293","294","295","296","297"],"import React, { Component } from 'react'\r\nimport Header from '../../Header/header'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { getMovieByName, getMovieFromTMDB, addMovieInCinema, clearMovie, clearCinemaMovie } from '../../../actions'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass AddMovie extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        movieInfo: '',\r\n        tmdb: null,\r\n        show: false,\r\n        loading: false,\r\n        searching: false,\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieByName(this.state.name.trim()));\r\n        }\r\n        else {\r\n            this.setState({\r\n                movieInfo: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // console.log(\"Next Props: \", nextProps.movieDetails, \"Prev State\", prevState)\r\n\r\n        if (nextProps.postDetails) {\r\n\r\n            if (nextProps.postDetails.post == true) {\r\n\r\n                return ({\r\n                    redirect: true\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        if (nextProps.movieDetails) {\r\n            if (nextProps.movieDetails.movie) {\r\n                let tmdb = null;\r\n                if (nextProps.movieDetails.tmdb)\r\n                    tmdb = nextProps.movieDetails.tmdb;\r\n\r\n                return {\r\n                    movieInfo: nextProps.movieDetails.movie,\r\n                    notFound: false,\r\n                    searching: false,\r\n                    tmdb: tmdb\r\n                }\r\n            }\r\n            else if (nextProps.movieDetails.found == false) {\r\n                return {\r\n                    movieInfo: '',\r\n                    notFound: true,\r\n                    searching: false,\r\n                    tmdb: null\r\n                }\r\n            }\r\n            else\r\n                return { movieInfo: '', };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n    getVideoId = (url) => {\r\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n\r\n        return (match && match[2].length === 11)\r\n            ? match[2]\r\n            : null;\r\n    }\r\n\r\n    playTrailer = (videos) => {\r\n        if (videos.length > 0) {\r\n            return (\r\n\r\n                <Modal\r\n                    show={this.state.show} onHide={this.handleClose}\r\n                    size=\"xl\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    // className=\"container-fluid\"\r\n\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header className=\"primary\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                            Movie Trailer\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <div className=\"trailer-body m-0 mt-n1 p-0 primary\" >\r\n                        <div className=\"trailer-container\">\r\n                            <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\"\r\n                                src={'https://www.youtube-nocookie.com/embed/' + this.getVideoId(videos[0]) + '?autoplay=1&loop=1&modestbranding=1&playlist=' + this.getVideoId(videos[0])} frameborder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n                                allowfullscreen=\"1\"\r\n                                webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    closeMovie = () => {\r\n        this.props.dispatch(clearMovie())\r\n    }\r\n\r\n    getMovieTMDB = () => {\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieFromTMDB(this.state.name.trim()))\r\n            this.setState({\r\n                searching: true\r\n            })\r\n        }\r\n    }\r\n\r\n    saveMovie = () => {\r\n        if (this.state.movieInfo) {\r\n            let movieData = {\r\n                cinemaID: this.props.match.params.cinemaId,\r\n                movie: this.state.movieInfo,\r\n                tmdb: this.state.tmdb\r\n            }\r\n            this.props.dispatch(addMovieInCinema(movieData))\r\n            this.setState({\r\n                loading: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cinemaId: this.props.match.params.cinemaId\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovie());\r\n        this.props.dispatch(clearCinemaMovie());\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={`/create-showtime/${this.props.match.params.cinemaId}`} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col my-3\">\r\n                            <h3>Add movie</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group col-md-6 col  mb-3 mr-md-5\">\r\n                                <div class=\"input-group-prepend \">\r\n                                    <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                        <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                </div>\r\n                                <input type=\"text\" value={this.state.name} onChange={this.handleInputChange} class=\"form-control\" placeholder=\"Enter Movie Name\"\r\n                                    aria-label=\"Search\" aria-describedby=\"basic-addon1\" required />\r\n                                <button type=\"button\" onClick={this.submitForm} className=\"btn btn-dark mx-3\"> Search </button>\r\n                            </div>\r\n                            {\r\n                                this.state.notFound == true ?\r\n                                    <div className=\"col-md-6 col\">\r\n                                        <Link onClick={this.getMovieTMDB}>Search movie from TMDB.</Link>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row \">\r\n                        {\r\n                            this.state.movieInfo ?\r\n                                <section className=\"col border rounded\" >\r\n                                    {this.playTrailer(this.state.movieInfo.videoLinks)}\r\n                                    <div >\r\n\r\n                                        <div className=\"col-12 m-md-4 m-2\">\r\n                                            <div className=\" mx-1 float-right\">\r\n                                                <button type=\"button\" onClick={this.closeMovie} class=\"close\" aria-label=\"Close\">\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div class=\"media \">\r\n                                                <img id=\"postertest\" className='poster d-flex mr-3 ' src={this.state.movieInfo.poster_url} alt=\"movie-poster\" />\r\n\r\n                                                <div class=\"media-body\">\r\n                                                    <div className=\" d-md-none\">\r\n                                                        <div className=\"movie-details\">\r\n                                                            <h5 className=\"title\">\r\n                                                                {this.state.movieInfo.title}\r\n                                                            </h5>\r\n                                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment></p>\r\n                                                        </div>\r\n                                                        <button className=\" btn  btn-dark mr-2\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"movie-details d-none d-md-block col-lg-8 col-xl-7\">\r\n                                                        <h3 className=\"title\">\r\n                                                            {this.state.movieInfo.title}\r\n                                                        </h3>\r\n                                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                            {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                                return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                            })}\r\n                                                        </p>\r\n                                                        <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span>   <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                                        <h6>Overview</h6>\r\n                                                        <p>{this.state.movieInfo.description}\r\n                                                        </p>\r\n\r\n                                                        <div className=\"d-none d-md-block\">\r\n                                                            <button className=\" btn  btn-dark\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col my-1 mr-4 ml-n3 mx-md-3 p-4'>\r\n                                                <button className=\" btn  btn-dark float-md-right\" onClick={this.saveMovie} disabled={this.state.loading}> Save Movie to Cinema</button>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-12 d-block d-md-none mt-2\">\r\n                                            <h6 className=\"heading\">\r\n                                                Movie Details\r\n                                            </h6>\r\n                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                    return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                })}</p>\r\n                                            <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span> <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                            <h6>Overview</h6>\r\n                                            <p>{this.state.movieInfo.description}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                                : this.state.searching == true ? <div className=\"m-4 p-2\">Searching...</div>\r\n                                    : null\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movieDetails: state.movie.movieDetails,\r\n        postDetails: state.cinema.cinemaMovie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddMovie);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Reset\\expiredPassword.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\CreateReview\\createReview.js",["298","299","300","301","302","303"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../../Header/header'\r\nimport Footer from '../../Footer/footer'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { addReview, clearMovieReview } from \"../../../actions\"\r\nimport StarRatings from 'react-star-ratings'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass CreateReview extends Component {\r\n\r\n    state = {\r\n        movie: '',\r\n        rating: 5,\r\n        review: '',\r\n        isSpoiler: false,\r\n        message: '',\r\n        heading: '',\r\n        disabled: false,\r\n        redirect: false\r\n    };\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps.review) {\r\n            if (nextProps.review.post == true) {\r\n                return {\r\n                    disabled: false,\r\n                    redirect: true,\r\n                    message: \"Review added successfully.\"\r\n                }\r\n            }\r\n            else if (nextProps.review.post === false) {\r\n                return {\r\n                    disabled: false,\r\n                    message: \"There is an error adding your review.\"\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    changeRating = (newRating, name) => {\r\n        this.setState({\r\n            rating: newRating\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        if (!this.props.location.movieProps) {\r\n            this.props.history.push('/');\r\n        }\r\n        else {\r\n            this.setState({\r\n                movie: this.props.location.movieProps.movie\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInputHeading = (e) => {\r\n        this.setState({\r\n            heading: e.target.value\r\n        })\r\n    }\r\n\r\n    handleInputReview = (e) => {\r\n        this.setState({\r\n            review: e.target.value\r\n        })\r\n    }\r\n\r\n    handleInputSpoiler = (e) => {\r\n        this.setState({\r\n            isSpoiler: e.target.checked\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.state.review.length > 0 && this.state.heading.length > 0) {\r\n            const review = {\r\n                movieId: this.state.movie._id,\r\n                rating: this.state.rating,\r\n                userId: this.props.user.login.id,\r\n                userName: this.props.user.login.name,\r\n                isSpoiler: this.state.isSpoiler,\r\n                review: this.state.review.trim(),\r\n                heading: this.state.heading.trim()\r\n            }\r\n\r\n            this.props.dispatch(addReview(review));\r\n\r\n            this.setState({\r\n                disabled: true\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovieReview())\r\n    }\r\n\r\n    render() {\r\n        let movie = this.state.movie;\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={`/movie/${movie._id}`} />\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                {\r\n                    movie ?\r\n                        <div>\r\n\r\n                            <div className=\"top-margin-header\"></div>\r\n                            <div className=\"container\">\r\n\r\n                                <div className='d-flex flex-row my-md-2 display-inline '>\r\n                                    <div className=\"d-inline\" >\r\n                                        <img id=\"postertest\" className='poster-small d-flex ' src={movie.poster_url} alt=\"movie-poster\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"d-inline\" >\r\n                                        <h5 className=\" col-12\" >{movie.title}</h5>\r\n                                        <div className=\" col-12\"><span> Release: <Moment date={movie.releaseDate} format={\"YYYY\"} /></span></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <h5 className=\"mt-3\" >Add new review</h5>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div >\r\n\r\n                                    <Form className=\"row\" >\r\n                                        <Form.Group className=\"input-style col-12\" controlId=\"rating\">\r\n                                            <Form.Label><strong></strong>Your Rating </Form.Label>\r\n                                            <span className=\"mx-2\">\r\n\r\n                                                <StarRatings\r\n                                                    rating={this.state.rating}\r\n                                                    starRatedColor=\"black\"\r\n                                                    changeRating={this.changeRating}\r\n                                                    numberOfStars={10}\r\n                                                    starHoverColor=\"black\"\r\n                                                    starDimension=\"24px\"\r\n                                                    name='rating'\r\n                                                />\r\n                                            </span>\r\n                                            <div className=\" heading p-1\">\r\n                                                <strong>{this.state.rating}/10</strong>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group className=\"col-12 col-md-8\" controlId=\"heading\">\r\n                                            <Form.Label>Title</Form.Label>\r\n                                            <Form.Control required type=\"text\" maxLength={100} placeholder={\"Write a small title of your review here\"} value={this.state.heading} onChange={this.handleInputHeading} />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group className=\"col-12 col-md-8\" controlId=\"review\">\r\n                                            <Form.Label>Your review</Form.Label>\r\n                                            <Form.Control required as=\"textarea\" id=\"review-textarea\" rows={12} value={this.state.review} placeholer={\"Your complete review here\"} onChange={this.handleInputReview} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"input-style col-12\" controlId=\"isSpoiler\">\r\n                                            <Form.Label className=\"mr-3\">Mark as Spoiler  </Form.Label>\r\n                                            <input type=\"checkbox\" id=\"isSpoiler\" name=\"isSpoiler\" value={this.state.isSpoiler} onChange={this.handleInputSpoiler} />\r\n                                        </Form.Group>\r\n                                        <button type=\"button\" onClick={this.handleSubmit} className=\"btn btn-dark border-round mb-3 ml-2\" disabled={this.state.disabled}>Save review</button>\r\n                                        <div className=\"col-12\">\r\n                                            <span>{this.state.message}</span>\r\n                                        </div>\r\n                                    </Form>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"bottom-margin-header\"></div>\r\n                            <div className=\"sticky-footer\">\r\n                                <Footer />\r\n                            </div>\r\n                        </div>\r\n                        : null\r\n                }\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        review: state.movie.movieReview\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateReview)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js",["304","305","306","307","308"],"import React, { Component } from 'react';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Header from '../../Header/header'\r\nimport { Modal, Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport { getCinemaMovieShowtimes, addShowtime, clearMovieShowtimes, clearShowtime } from '../../../actions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Showtime extends Component {\r\n\r\n\r\n    state = {\r\n        events: [\r\n            // {\r\n            //     start: moment().toDate(),\r\n            //     end: moment().add(0.4, \"hours\").toDate(),\r\n            //     title: \"Movie 1\",\r\n            // },\r\n            // {\r\n            //     'title': 'Movie 2',\r\n            //     'allDay': true,\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(1, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 3',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(3, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 4',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.5, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 5',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.2, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 7',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(4, \"hours\").toDate(),\r\n            // },\r\n        ],\r\n        title: '',\r\n        language: 'English',\r\n        date: '',\r\n        time: '',\r\n        screenType: '',\r\n        show: false,\r\n        redirect: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        const events = [];\r\n        let show = prevState.show;\r\n\r\n        if (nextProps.postShowtime) {\r\n            if (nextProps.postShowtime.post == true) {\r\n                let language = nextProps.postShowtime.newShowtime.language == 'Urdu' ? ' (Urdu)' : '';\r\n                const event = {\r\n                    title: \"Screen: \" + nextProps.postShowtime.newShowtime.screenType + language,\r\n                    start: moment(nextProps.postShowtime.newShowtime.date).toDate(),\r\n                    end: moment(nextProps.postShowtime.newShowtime.date).add(\"minute\", nextProps.postShowtime.newShowtime.runtime).toDate()\r\n                }\r\n                events.push(event);\r\n                show = !prevState.show;\r\n                nextProps.dispatch(clearShowtime);\r\n            }\r\n        }\r\n\r\n\r\n        if (nextProps.showtimes) {\r\n            if (nextProps.showtimes.showtime) {\r\n                if (prevState.movie) {\r\n                    nextProps.showtimes.showtime.forEach((item => {\r\n                        let language = item.language == 'Urdu' ? ' (Urdu)' : '';\r\n                        const event = {\r\n                            title: \"Screen: \" + item.screenType + language,\r\n                            start: moment(item.date).toDate(),\r\n                            end: moment(item.date).add(\"minute\", item.runtime).toDate()\r\n                        }\r\n                        console.log(\"Event\", event)\r\n                        events.push(event)\r\n                    }))\r\n\r\n\r\n                    return {\r\n                        events: events,\r\n                        show: show\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        this.setState((state) => {\r\n            state.events[0].start = start;\r\n            state.events[0].end = end;\r\n            return { events: [...state.events] };\r\n        });\r\n    };\r\n\r\n    onEventDrop = (data) => {\r\n        // console.log(data);\r\n    };\r\n\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n\r\n\r\n    setDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    setDateMax = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 3; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputLanguage = (event) => {\r\n        this.setState({ language: event.target.value })\r\n    }\r\n    handleInputDate = (event) => {\r\n        this.setState({ date: event.target.value })\r\n    }\r\n    handleInputTime = (event) => {\r\n        this.setState({ time: event.target.value })\r\n    }\r\n    handleInputScreen = (event) => {\r\n        this.setState({ screenType: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addShowtime({\r\n            language: this.state.language,\r\n            date: this.state.date,\r\n            runtime: this.state.movie.runtime,\r\n            screenType: this.state.screenType,\r\n            cinemaId: this.state.cinemaId,\r\n            movieId: this.state.movie._id,\r\n            movieTitle: this.state.movie.title\r\n        }))\r\n    }\r\n\r\n    addShowtime = () => {\r\n        let movie = this.state.movie;\r\n        return (\r\n            <Modal\r\n                show={this.state.show} onHide={this.handleClose}\r\n                size=\"lg\"\r\n                centered\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header className=\"\" closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\" text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                        Add a new showtime\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <div className=\"container\">\r\n                        <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <div className=\"input-style my-2\" >\r\n                                    <div className=\"d-flex float-right\">\r\n                                        <strong>  Showtime: {movie.runtime} Minutes</strong>\r\n                                    </div>\r\n                                    <Form.Label><strong>{movie.title}</strong></Form.Label>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <Form.Group className=\"input-style\" controlId=\"language\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <select id=\"language\" name=\"language\" className=\"form-control\" onChange={this.handleInputLanguage}>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"Urdu\">Urdu</option>\r\n                                </select>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"input-style\" controlId=\"date\">\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"datetime-local\"\r\n                                    min={this.setDate()}\r\n                                    max={this.setDateMax()}\r\n                                    value={this.state.date}\r\n                                    onChange={this.handleInputDate}\r\n                                />\r\n                            </Form.Group>\r\n                            {/* <Form.Group className=\"input-style\" controlId=\"time\">\r\n                                <Form.Label>Time</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"time\"\r\n                                    placeholder=\"Time\"\r\n                                    value={this.state.time}\r\n                                    onChange={this.handleInputTime}\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Form.Group className=\"input-style\" controlId=\"screen\">\r\n                                <Form.Label>Screen type</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Screen Type\"\r\n                                    value={this.state.screenType}\r\n                                    onChange={this.handleInputScreen}\r\n                                />\r\n                                {/* <select id=\"type\" name=\"type\">\r\n                                    <option value=\"gold1\">Gold-1</option>\r\n                                    <option value=\"gold2\">Gold-2</option>\r\n                                    <option value=\"plat1\">Platinum-1</option>\r\n                                    <option value=\"plat2\">Platinum-2</option>\r\n                                </select> */}\r\n                            </Form.Group>\r\n                            <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                SAVE\r\n                                </Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.location.showtimeProps) {\r\n            let id = this.props.location.showtimeProps.cinemaId;\r\n            let movieId = this.props.location.showtimeProps.movie._id;\r\n\r\n            this.props.dispatch(getCinemaMovieShowtimes(id, movieId));\r\n            this.setState({\r\n                cinemaId: id,\r\n                movie: this.props.location.showtimeProps.movie\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovieShowtimes())\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect == true) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n\r\n        const localizer = momentLocalizer(moment)\r\n        let movie = this.state.movie;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {movie ?\r\n                    <div className=\"container\">\r\n                        {this.addShowtime()}\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col\">\r\n                                <h4>{movie.title}</h4>\r\n                            </div>\r\n                            <div className=\"col \">\r\n                                <button type=\"button\" onClick={this.handleShow} className=\"btn btn-dark d-flex float-right\"> New Showtime</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col p-4\">\r\n                                <Calendar\r\n                                    defaultDate={moment().toDate()}\r\n                                    defaultView=\"month\"\r\n                                    events={this.state.events}\r\n                                    localizer={localizer}\r\n                                    onEventDrop={this.onEventDrop}\r\n                                    onEventResize={this.onEventResize}\r\n                                    resizable\r\n                                    style={{ height: \"100vh\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(\"State\", state)\r\n    return {\r\n        showtimes: state.showtime.movieShowtimes,\r\n        postShowtime: state.showtime.showtime\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Showtime);","C:\\Projects\\Movie_Hut\\client\\src\\components\\Profile\\settings.js",["309"],"C:\\Projects\\Movie_Hut\\client\\src\\reducers\\cinema_reducer.js",["310"],"C:\\Projects\\Movie_Hut\\client\\src\\reducers\\movie_reducer.js",["311"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        case 'GET_MOVIE_INFO':\r\n            return { ...state, movieInfo: action.payload }\r\n        case 'GET_MOVIE_BY_NAME':\r\n            return { ...state, movieDetails: action.payload }\r\n        case 'GET_MOVIE_FROM_TMDB':\r\n            return { ...state, movieDetails: action.payload }\r\n        case 'GET_HOME_MOVIES':\r\n            return { ...state, moviesList: action.payload }\r\n        case 'GET_HOME_RECEOMMENDED_MOVIES':\r\n            return { ...state, recommendedMovies: action.payload }\r\n        case 'GET_HOME_CINEMA_MOVIES':\r\n            return { ...state, cinemaMovies: action.payload }\r\n        case 'VOTE_REVIEW':\r\n            return { ...state, votedReview: action.payload }\r\n        case 'ADD_MOVIE_TO_FAVORITES':\r\n            return { ...state, favoriteAdded: action.payload }\r\n        case 'REPORT_MOVIE_REVIEW':\r\n            return { ...state, reportReview: action.payload }\r\n        case 'CLEAR_MOVIE':\r\n            return { ...state, movieDetails: action.payload, favoriteAdded: action.payload }\r\n        case 'CLEAR_MOVIE_REVIEW':\r\n            return { ...state, movieReview: action.payload }\r\n        case 'CLEAR_REVIEW_REPORT':\r\n            return { ...state, reportReview: action.payload }\r\n\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n        case 'ADD_MOVIE_REVIEW':\r\n            return { ...state, movieReview: action.payload }\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\user_reducer.js",["312"],"export default function(state={},action){\r\n    switch(action.type){\r\n        case 'USER_LOGIN':\r\n            return {...state,login:action.payload}\r\n        case 'USER_AUTH':\r\n            return {...state,login:action.payload}\r\n        // case 'GET_USER_POSTS':\r\n        //     return {...state,userPosts:action.payload}\r\n        case 'GET_USER':\r\n            return {...state,user:action.payload}\r\n        case 'UPDATE_USER':\r\n            return {...state,user:action.payload}\r\n        case 'SUSPEND_USER':\r\n            return {...state,user:action.payload}\r\n        case 'UNSUSPEND_USER':\r\n            return {...state,user:action.payload}\r\n        case 'USER_REGISTER':\r\n            return {\r\n                ...state,\r\n                register:action.payload.success\r\n            }\r\n        case 'USER_FORGOT_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_RESET_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_UPDATE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'CHANGE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n\r\n        case 'GET_USERS':\r\n            return { ...state, userList: action.payload }\r\n        case 'GET_REPORTS':\r\n            return { ...state, reportList: action.payload.reportList, reviewList: action.payload.reviewList }\r\n        case 'DELETE_REVIEW':\r\n            return { ...state, reportedDeleted: action.payload }\r\n        case 'RESOLVE_REPORT':\r\n            return { ...state, reportedResolved: action.payload }\r\n        case 'CLEAR_USER':\r\n            return {\r\n                ...state,\r\n                user:action.payload\r\n            }\r\n        case 'CLEAR_UPDATE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Projects\\Movie_Hut\\client\\src\\reducers\\showtime_reducer.js",["313"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        // case 'GET_MOVIE_INFO':\r\n        //     return { ...state, movieInfo: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n\r\n        case 'ADD_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        case 'GET_CINEMA_MOVIE_SHOWTIMES':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_MOVIE_SHOWTIME':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\review.js",["314","315"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { Tooltip, OverlayTrigger, Button } from 'react-bootstrap'\r\nimport ReviewDescription from './reviewDescription'\r\nclass Review extends Component {\r\n\r\n    state = {\r\n        reviewsToShow: 5\r\n    }\r\n\r\n\r\n    showMore = () => {\r\n        this.setState({\r\n            reviewsToShow: this.state.reviewsToShow + 5\r\n        })\r\n    }\r\n\r\n    showLess = () => {\r\n        this.setState({\r\n            reviewsToShow: 5\r\n        })\r\n    }\r\n\r\n    filterProfanity = (comment) => {\r\n        var Filter = require('bad-words');\r\n        var customFilter = new Filter({ placeHolder: '*' });\r\n\r\n        var newBadWords = ['gandu', 'bsdk', 'bullshit'];  //add as many bad words to this list\r\n        let removeWords = ['sexy', '']; //add bad words to remove\r\n\r\n        customFilter.addWords(...newBadWords);\r\n        customFilter.removeWords(...removeWords);\r\n\r\n        return customFilter.clean(comment);\r\n    }\r\n\r\n    render() {\r\n        let reviews = this.props.reviews;\r\n\r\n        return (\r\n            <div className=\"container m-0\">\r\n                <div className=\"card p-2 \">\r\n                    <div className=\"card-header bg-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 m-0 \">\r\n                                <h5 className=\"heading text-capitalize\">   User reviews</h5>\r\n                            </div>\r\n                            <div className=\"col-6 text-right \">\r\n                                <small className=\"font-text font-weight-normal\" >\r\n\r\n                                    <i class=\"fa fa-thumbs-up  \"></i> 90% positive reivews\r\n                                </small>\r\n                                <span className=\"border border-dark rounded p-1 px-2  mx-2 text-nowrap \">\r\n                                    <Link to={{\r\n                                        pathname: `/create-review`,\r\n                                        movieProps: {\r\n                                            movie: this.props.movie\r\n                                        }\r\n                                    }}\r\n                                        style={{ textDecoration: 'none', color: 'black' }}>Write a review</Link>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            reviews.length > 0 ?\r\n                                <span >\r\n                                    {\r\n                                        reviews.slice(0, this.state.reviewsToShow).map((review, key) => (\r\n\r\n                                            <section key={key}>\r\n\r\n                                                < div className=\"row font-text review \">\r\n                                                    <div className=\"col-9\">\r\n                                                        <h6 className=\"m-0\">{this.filterProfanity(review.heading)}</h6>\r\n                                                        <div className=\"p-0 m-0 text-nowrap\">\r\n                                                            <small>added by <span className=\"font-weight-bold\">{review.userName}</span> on <Moment date={review.createdAt} format=\"MMM DD, YYYY\" />\r\n                                                                {\r\n                                                                    review.isSpoiler ?\r\n                                                                        <span className=\"ml-2\">\r\n                                                                            <OverlayTrigger\r\n                                                                                key={key}\r\n                                                                                placement={'top'}\r\n                                                                                overlay={\r\n                                                                                    <Tooltip id={`tooltip-top`}>\r\n                                                                                        This review is marked as spoiler by the author.\r\n                                                                                    </Tooltip>\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <span className=\"text-danger\"><i class=\"fa fa-info-circle \" > </i>  Spoiler</span>\r\n                                                                            </OverlayTrigger>\r\n                                                                        </span>\r\n                                                                        : null\r\n                                                                }\r\n                                                            </small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-3 text-right \">\r\n                                                        <small className=\"font-text m-1 font-weight-bold\">Rated {review.rating}/10</small>\r\n                                                    </div>\r\n                                                    <div className=\"col-12 mt-2 pr-5\">\r\n                                                        <span className='text-justify font-text font-weight-regular mt-3 ' style={{ fontSize: '16px', fontWeight: 400 }}>\r\n                                                            {\r\n                                                                <ReviewDescription review={review} filterProfanity={this.filterProfanity} />\r\n                                                            }\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <small className=\"col-12 text-right m-0 \">Report review</small>\r\n                                                    <hr className=\"border col-10 border-light m-0 my-2\" />\r\n                                                </div >\r\n                                            </section>\r\n                                        ))}\r\n                                    {this.state.reviewsToShow < reviews.length ?\r\n                                        <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showMore}>SHOW MORE</span></div></div>\r\n                                        : (reviews.length > 5 || (reviews.length == this.state.reviewsToShow && reviews.length > 5)) ?\r\n                                            <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showLess}>SHOW LESS</span></div></div>\r\n                                            : null}\r\n                                </span>\r\n                                : <div>\r\n                                    No reviews available\r\n                            </div>\r\n\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Review)","C:\\Projects\\Movie_Hut\\client\\src\\actions\\index.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Header\\header.js",["316"],"import React, { Component } from 'react'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap'\r\nimport NavItems from './navItems'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar style={{ background: \"black\" }} variant=\"dark\">\r\n                <Navbar.Brand href=\"/\" className=\"nav-brand\">\r\n                    MOVIE HUT\r\n                </Navbar.Brand>\r\n                {\r\n                    this.props.user ?\r\n                        this.props.user.login.error === true ?\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                                <Nav.Link eventKey={2} href=\"/register\">\r\n                                    Sign Up\r\n                            </Nav.Link>\r\n                            </Nav>\r\n\r\n                            : <Nav className=\"ml-auto mr-3\"><NavItems user={this.props.user.login} /></Nav>\r\n                        : null\r\n                }\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Projects\\Movie_Hut\\client\\src\\components\\Footer\\footer.js",["317","318","319","320","321","322","323"],"import React, { Component } from 'react'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer class=\"site-footer mt-2 \">\r\n                <div class=\"container\">\r\n                    <div class=\"row \">\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Cinemas</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><Link to=\"/cinemas/Lahore\">Cinemas in Lahore</Link></li>\r\n                                <li><Link to={`/cinemas/${\"Karachi\"}`}>Cinemas in Karachi</Link></li>\r\n                                <li><Link to=\"/cinemas/Islamabad\">Cinemas in Islamabad</Link></li>\r\n                                <li><Link to=\"/cinemas/Multan\">Cinemas in Multan</Link></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Movies</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Top Movies</a></li>\r\n                                <li><a href=\"#\">Coming Soon</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Subscribe</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Alerts for latest movies</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Contact</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">About Us</a></li>\r\n                                <li><a href=\"#\">Contact Us</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 \">\r\n                            <span className=\"copyright-text offset-lg-2 col-xs-12 my-2 \">Copyright &copy; <Moment format='YYYY'></Moment> Movie Hut. All Rights Reserved.\r\n                            </span>\r\n                            <span className=\"footer-title  col-sm-12 col my-2\"> MOVIE HUT</span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Privacy Policy</a></span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 col my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Terms {'&'} Conditions</a></span>\r\n                        </div>\r\n                        {/* \r\n                        <div class=\"col-md-4 col-sm-6 col-xs-12\">\r\n                            <ul class=\"social-icons\">\r\n                                <li><a class=\"facebook\" href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n                                <li><a class=\"twitter\" href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                                <li><a class=\"dribbble\" href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n                                <li><a class=\"linkedin\" href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                            </ul>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","C:\\Projects\\Movie_Hut\\client\\src\\components\\Widgets\\slider.js",["324","325","326","327","328","329"],"import React, { Component } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport Coverflow from \"reactjs-coverflow\";\r\nimport Page1 from \"./page/page1\";\r\n\r\n\r\nclass Slider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            position: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const { coverflow } = this.refs;\r\n        this.setState({\r\n            position: (coverflow && coverflow.getPosition()) || 0\r\n        });\r\n    }\r\n    handleMarginChange(e) {\r\n        e.preventDefault();\r\n        this.setState({ margin: parseFloat(e.currentTarget.value) });\r\n    }\r\n    prev(e) {\r\n        e.preventDefault();\r\n        this.refs.coverflow.previous();\r\n    }\r\n    next(e) {\r\n        e.preventDefault();\r\n        this.refs.coverflow.next();\r\n        this.setState({});\r\n    }\r\n    onChange(position) {\r\n        console.log(`New position: ${position}`);\r\n\r\n        // To test the issue of infinite callback, see https://github.com/Bastorx/reactjs-coverflow/issues/18\r\n        this.setState({ position });\r\n    }\r\n    getPosition(e) {\r\n        e.preventDefault();\r\n        console.log(this.refs.coverflow.getPosition());\r\n    }\r\n    goAt(num, e) {\r\n        e.preventDefault();\r\n        this.refs.coverflow.goAt(4);\r\n    }\r\n    getPage(num) {\r\n        switch (num) {\r\n            case 1:\r\n                return Page1;\r\n                break;\r\n            // case 2:\r\n            //     return Page2;\r\n            //     break;\r\n            // case 3:\r\n            //     return Page3;\r\n            //     break;\r\n            // case 4:\r\n            //     return Page4;\r\n            //     break;\r\n        }\r\n    }\r\n    changePage(page) {\r\n        this.setState({ page }, function () {\r\n            this.setState({\r\n                position: this.refs.coverflow.getPosition()\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const { page, position } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <img className=\"d -block\"\r\n                        src=\"https://image.tmdb.org/t/p/w1280/9QusGjxcYvfPD1THg6oW3RLeNn7.jpg\"\r\n                        width=\"400px\"\r\n                        height=\"400px\"\r\n\r\n                    />\r\n                    <img className=\"d -block \"\r\n                        src=\"https://image.tmdb.org/t/p/w1280/9QusGjxcYvfPD1THg6oW3RLeNn7.jpg\"\r\n\r\n                        height=\"400px\"\r\n\r\n                    />\r\n                    <img className=\"d -block \"\r\n                        src=\"https://image.tmdb.org/t/p/w1280/9QusGjxcYvfPD1THg6oW3RLeNn7.jpg\"\r\n                        width=\"400px\"\r\n                        height=\"400px\"\r\n\r\n                    />\r\n\r\n                </div> */}\r\n                {/* \r\n                <Coverflow\r\n                    ref=\"coverflow \"\r\n                    style={{ width: \"100vw\", height: \"400px\", padding: \"0\" }}\r\n                    startPosition={2}\r\n                    enableScroll={false}\r\n\r\n                    animationSpeed={0.6}\r\n                    rotate={0}\r\n                    onChange={position => this.onChange(position)}\r\n                >\r\n                    {this.getPage(this.state.page)}\r\n                </Coverflow> */}\r\n                {/* <Carousel className=\"w-100\">{this.showItems()}</Carousel> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showItems = () => (\r\n        this.props.movies ?\r\n            this.props.movies.map((item, i) => {\r\n                return (\r\n                    <Carousel.Item key={i} >\r\n\r\n                        <img className=\"d-block w-100\"\r\n                            src={item.background_url}\r\n                            alt={item.title}\r\n                            height=\"400px\"\r\n\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>First slide label</h3>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n\r\n                        {/* <Carousel.Caption className=\"mb-4\">\r\n                                <h2>{item.caption}</h2>\r\n                                <p>{item.text}</p>\r\n                            </Carousel.Caption> */}\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n            : null\r\n    )\r\n\r\n}\r\n{/* <Carousel className=\"d-none d-sm-block w-100\" {...this.props.settings}>\r\n                    {this.showItems()}\r\n                </Carousel> */}\r\nexport default Slider;","C:\\Projects\\Movie_Hut\\client\\src\\components\\Header\\navItems.js",["330","331","332","333","334","335"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import FontAwesome from 'react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { NavDropdown, Dropdown, NavLink, NavItem } from 'react-bootstrap'\r\n\r\nconst SidenavItems = ({ user }) => {\r\n\r\n    const items = [\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'home',\r\n        //     text:'Home',\r\n        //     link:'/',\r\n        //     restricted:false\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My Profile',\r\n            link: '/profile',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            admin: true,\r\n            // icon:'file-text-o',\r\n            text: 'Admin Panel',\r\n            link: '/admin-panel',\r\n            restricted: true\r\n        },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Add Admins',\r\n        //     link:'/register',\r\n        //     restricted:true\r\n        // },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Login',\r\n        //     link:'/login',\r\n        //     restricted:false,\r\n        //     exclude:true\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Favorites',\r\n            link: '/favorites',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My reviews',\r\n            link: '/user/user-reviews',\r\n            restricted: true\r\n        },\r\n        // {\r\n        //     type: 'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text: 'Add reviews',\r\n        //     link: '/create-review',\r\n        //     restricted: true\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Logout',\r\n            link: '/logout',\r\n            restricted: true\r\n        }\r\n    ]\r\n\r\n    const element = (item, i) => (\r\n        <div key={i} className={item.type + \"ml-n5\"}>\r\n            <NavDropdown.Item href={item.link}>{item.text}</NavDropdown.Item>\r\n        </div>\r\n    )\r\n\r\n    const showItems = () => (\r\n        user.login ?\r\n            items.map((item, i) => {\r\n                if (user.login.isAuth) {\r\n                    if (user.login.role == \"administrator\") {\r\n                        return item.admin ?\r\n                            element(item, i)\r\n                            : element(item, i)\r\n                    }\r\n                    else if (!item.admin)\r\n                        return element(item, i)\r\n                } else {\r\n                    return !item.restricted ?\r\n                        element(item, i)\r\n                        : null\r\n                }\r\n            })\r\n            : null\r\n    )\r\n\r\n    const userDropdown = () => {\r\n        var str = \"\"\r\n        user.login ?\r\n            user.login.isAuth ?\r\n                str = user.login.name\r\n                : str = \"\"\r\n            : str = \"\"\r\n        \r\n        if (str.substr(0, str.indexOf(' ')) === \"\")\r\n            return str\r\n        return str.substr(0, str.indexOf(' '))\r\n    }\r\n    const navDropdownTitle = (<span style={{ color: \"#ffff\" }} className=\"title\"><i className=\"fa fa-user-circle mr-1\"></i> {userDropdown()}</span>);\r\n    return (\r\n        <div>\r\n\r\n            <NavDropdown title={navDropdownTitle} id=\"basic-nav-dropdown\">\r\n                {showItems()}\r\n            </NavDropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SidenavItems)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\reviewDescription.js",["336"],"import React, { Component } from 'react'\r\n\r\nclass ReviewDescription extends Component {\r\n\r\n    state = {\r\n        textCutLength: 770,\r\n        textToDisplay: 770,\r\n        hideSpoiler: true\r\n    }\r\n\r\n    showMore = (review) => {\r\n        this.setState({\r\n            textToDisplay: review.length\r\n        })\r\n    }\r\n\r\n    showLess = () => {\r\n        this.setState({\r\n            textToDisplay: this.state.textCutLength\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    showReviewDescription = (reviewDescription) => {\r\n        return (\r\n\r\n            this.state.textToDisplay < reviewDescription.length ?\r\n                <span>\r\n                    {reviewDescription.slice(0, this.state.textToDisplay)}... <span className=\"showmore text-inline \" onClick={() => { this.showMore(reviewDescription) }}><strong>Show More</strong></span>\r\n                    <div className=\"row\" > <div className=\"col fw-500 showmore text-center\"></div>\r\n                    </div>\r\n                </span>\r\n                : (reviewDescription.length > this.state.textCutLength && (reviewDescription.length == this.state.textToDisplay)) ?\r\n                    <span>\r\n                        {reviewDescription} <span className=\"showmore text-inline \" onClick={this.showLess}><strong>Show Less</strong></span>\r\n                    </span>\r\n\r\n                    : <span>{reviewDescription}</span>\r\n\r\n        )\r\n    }\r\n\r\n    showSpoiler = () => {\r\n        this.setState({\r\n            hideSpoiler: false\r\n        })\r\n    }\r\n\r\n    getReview = (review) => {\r\n        const reviewDescription = this.props.filterProfanity(review.review);\r\n\r\n\r\n        if (review.isSpoiler) {\r\n\r\n            return (\r\n                <span>\r\n                    {\r\n                        this.state.hideSpoiler ?\r\n                            <div className=\" btn btn-sm btn-outline-dark \" onClick={this.showSpoiler}>Show review</div>\r\n\r\n                            : this.showReviewDescription(reviewDescription)\r\n                    }\r\n\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return this.showReviewDescription(reviewDescription);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return this.getReview(this.props.review);\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ReviewDescription","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Users\\users.js",["337","338","339","340","341","342"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../Header/header'\r\nimport DataTable from 'react-data-table-component'\r\nimport { getUsers, suspendUser, unSuspendUser } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\r\nclass User extends Component {\r\n    state = {\r\n        userList: [],\r\n        search: ''\r\n    }\r\n    handleInputSearch = (event) => {\r\n        this.setState({search:event.target.value})\r\n    }\r\n    handleSuspend = (e) => {\r\n        // console.log(e)\r\n        this.props.dispatch(suspendUser(e))\r\n        window.location.reload();\r\n    }\r\n    handleUnSuspend = (e) => {\r\n        // console.log(e)\r\n        this.props.dispatch(unSuspendUser(e))\r\n        window.location.reload();\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getUsers())\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log(props)\r\n        if (props.userList) {\r\n            if (props.userList.length > 0) {\r\n                return {\r\n                    userList: props.userList\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span >\r\n                    <strong>{row.name}</strong>\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'status',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'City',\r\n            selector: 'city',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'DOB',\r\n            selector: 'dob',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span>\r\n                    {row.dob ? row.dob : 'N/A'}\r\n                </span>\r\n            )\r\n        },\r\n        // {\r\n        //     name: 'Showtimes',\r\n        //     sortable: true,\r\n        //     cell: row => (\r\n        //         <span className=\"p-2\">\r\n        //             {/* <button className='btn btn-outline-dark'>View </button> */}\r\n        //             <Link to={`/create-showtime/${row._id}`} className='btn btn-outline-dark'>View showtimes </Link>\r\n\r\n        //         </span>\r\n        //     )\r\n        // },\r\n\r\n        {\r\n            name: 'Action',\r\n            hide: 'md',\r\n            cell: row => (\r\n                // <span><strong>...</strong></span>\r\n                <DropdownButton id=\"dropdown-basic-button\" variant=\"light\" title=\"\">\r\n                    {row.status == \"active\" ? \r\n                    <Dropdown.Item onClick={()=>{this.handleSuspend(row._id)}}>Suspend</Dropdown.Item> :\r\n                    <Dropdown.Item onClick={()=>{this.handleUnSuspend(row._id)}}>Un-suspend</Dropdown.Item>\r\n                } \r\n                    \r\n                </DropdownButton>\r\n                // <div className=\"nk-tb-col nk-tb-col-tools\">\r\n                //     <ul className=\"nk-tb-actions gx-1 my-n1\">\r\n                //         <li className=\"mr-n1\">\r\n                //             <div className=\"dropdown\">\r\n                //                 <a href=\"#\" className=\"dropdown-toggle btn btn-icon btn-trigger\" data-toggle=\"dropdown\"><em className=\"icon ni ni-more-h\"></em></a>\r\n                //                 <div className=\"dropdown-menu dropdown-menu-right\">\r\n                //                     <ul className=\"link-list-opt no-bdr\">\r\n                //                         <li><Link to={{\r\n                //                             pathname: \"/editProduct\",\r\n                //                             state: {\r\n                //                                 productInfo: row\r\n                //                             }\r\n                //                         }}>\r\n                //                             <em className=\"icon ni ni-pen\"></em><span>Edit Product</span></Link></li>\r\n                //                         <li><a onClick={() => { this.showData(row) }}><em className=\"icon ni ni-eye\"></em><span>View Product</span></a></li>\r\n                //                         {\r\n                //                             row.status === \"active\" ?\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em className=\"icon ni ni-na\"></em><span style={{ cursor: \"pointer\" }} className=\"text-danger\">Change Status</span>\r\n                //                                 </a></li>\r\n                //                                 :\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em class=\"icon ni ni-check-thick\"></em><span style={{ cursor: \"pointer\" }}>Change Status</span>\r\n                //                                 </a></li>\r\n                //                         }\r\n                //                     </ul>\r\n                //                 </div>\r\n                //             </div>\r\n                //         </li>\r\n                //     </ul>\r\n                // </div>\r\n            ),\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className='row mt-2'>\r\n                        <div className='col-12 col-md-4 mt-2'>\r\n                            <h2>Users</h2>\r\n                        </div>\r\n                        <div className='col-12 col-md-4 mt-2'>\r\n                            <input type='text' className=' float-right form-control' placeholder=\"Search user by Name\" onChange={this.handleInputSearch}/>\r\n                        </div>\r\n                        {/* <div className='col-12 col-md-4 mt-2'>\r\n                            <Link to='/register' className=' float-right btn btn-dark'>Add User</Link>\r\n                        </div> */}\r\n                    </div>\r\n                    <div>\r\n                        <DataTable\r\n                            columns={this.columns}\r\n                            data={ this.state.userList.filter((val)=>{\r\n                                if(this.state.search == \"\" && val.role == \"user\"){\r\n                                    return val;\r\n                                }\r\n                                else if(val.name.toLowerCase().includes(this.state.search.toLowerCase()) && val.role == \"user\"){\r\n                                    return val;\r\n                                }\r\n                            })}\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            pagination\r\n                            // onRowClicked={(data) => { this.showData(data) }}\r\n                            paginationPerPage={10}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// (this.state.userList.filter(user => user.role == \"user\"))\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userList: state.user.userList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(User)\r\n","C:\\Projects\\Movie_Hut\\client\\src\\components\\Review\\reportReview.js",["343","344","345","346","347","348"],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\ReviewReports\\reviewreports.js",["349","350","351","352","353","354","355","356"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../Header/header'\r\nimport DataTable from 'react-data-table-component'\r\nimport { getReports, deleteReview, resolveReport } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nclass ReviewReports extends Component {\r\n    state = {\r\n        reportList: [],\r\n        reviewList: [],\r\n        search: ''\r\n    }\r\n    handleInputSearch = (event) => {\r\n        this.setState({search:event.target.value})\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getReports())\r\n    }\r\n    deleteReportFromDB = (event) => {\r\n        // console.log(\"delete\", event[0]._id)\r\n        this.props.dispatch(deleteReview(event[0]._id))\r\n        window.location.reload();\r\n    }\r\n    resolveReport = (event) => {\r\n        // console.log(\"resolve\", event)\r\n        this.props.dispatch(resolveReport(event))\r\n        window.location.reload();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        // console.log(\"NEW PROPS\", props)\r\n        if (props.reportList) {\r\n            if (props.reportList.length > 0) {\r\n                return {\r\n                    reportList: props.reportList,\r\n                    reviewList: props.reviewList\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    columns = [\r\n        // {\r\n        //     name: 'Name',\r\n        //     selector: 'name',\r\n        //     sortable: true,\r\n        //     cell: row => (\r\n        //         <span >\r\n        //             <strong>{row.name}</strong>\r\n        //         </span>\r\n        //     )\r\n        // },\r\n        {\r\n            name: 'Reason',\r\n            selector: 'reasons',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span>\r\n                    {row.reasons.map(r => r + \", \")}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'status',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'reasonDescription',\r\n            sortable: true,\r\n            cell: row => (\r\n                <span>\r\n                    {row.reasonDescription ? row.reasonDescription : 'N/A'}\r\n                </span>\r\n            )\r\n        },\r\n        // {\r\n        //     name: 'Showtimes',\r\n        //     sortable: true,\r\n        //     cell: row => (\r\n        //         <span className=\"p-2\">\r\n        //             {/* <button className='btn btn-outline-dark'>View </button> */}\r\n        //             <Link to={`/create-showtime/${row._id}`} className='btn btn-outline-dark'>View showtimes </Link>\r\n\r\n        //         </span>\r\n        //     )\r\n        // },\r\n\r\n        {\r\n            name: 'Action',\r\n            hide: 'md',\r\n            cell: row => (\r\n                // <span>\r\n                //     <button className=\"btn btn-primary\">Resolve</button>\r\n                //     <button className=\"btn btn-danger\">Delete</button>\r\n                // </span>\r\n                <DropdownButton id=\"dropdown-basic-button\" variant=\"light\" title=\"\">\r\n                    <Dropdown.Item onClick={()=>{this.resolveReport(row._id)}}>Resolve</Dropdown.Item>\r\n                    <Dropdown.Item onClick={()=>{this.deleteReportFromDB(this.state.reviewList.filter((review) => {if(review._id == row.reviewId){return row.reviewId}}))}}>Delete</Dropdown.Item>\r\n                </DropdownButton>\r\n                // <div className=\"nk-tb-col nk-tb-col-tools\">\r\n                //     <ul className=\"nk-tb-actions gx-1 my-n1\">\r\n                //         <li className=\"mr-n1\">\r\n                //             <div className=\"dropdown\">\r\n                //                 <a href=\"#\" className=\"dropdown-toggle btn btn-icon btn-trigger\" data-toggle=\"dropdown\"><em className=\"icon ni ni-more-h\"></em></a>\r\n                //                 <div className=\"dropdown-menu dropdown-menu-right\">\r\n                //                     <ul className=\"link-list-opt no-bdr\">\r\n                //                         <li><Link to={{\r\n                //                             pathname: \"/editProduct\",\r\n                //                             state: {\r\n                //                                 productInfo: row\r\n                //                             }\r\n                //                         }}>\r\n                //                             <em className=\"icon ni ni-pen\"></em><span>Edit Product</span></Link></li>\r\n                //                         <li><a onClick={() => { this.showData(row) }}><em className=\"icon ni ni-eye\"></em><span>View Product</span></a></li>\r\n                //                         {\r\n                //                             row.status === \"active\" ?\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em className=\"icon ni ni-na\"></em><span style={{ cursor: \"pointer\" }} className=\"text-danger\">Change Status</span>\r\n                //                                 </a></li>\r\n                //                                 :\r\n                //                                 <li><a onClick={() => { this.props.changeStatus(row) }}>\r\n                //                                     <em class=\"icon ni ni-check-thick\"></em><span style={{ cursor: \"pointer\" }}>Change Status</span>\r\n                //                                 </a></li>\r\n                //                         }\r\n                //                     </ul>\r\n                //                 </div>\r\n                //             </div>\r\n                //         </li>\r\n                //     </ul>\r\n                // </div>\r\n            ),\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    SampleExpandedComponent = ({ data }) => {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <p>{this.state.reviewList.map((review) => {if(review._id == data.reviewId){return review.review}}) != '' ? \r\n                this.state.reviewList.map((review) => {if(review._id == data.reviewId){return review.review}}) : 'N/A'}</p>\r\n            </div>\r\n        )\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className='row mt-2'>\r\n                        <div className='col-12 col-md-4 mt-2'>\r\n                            <h2>Reports</h2>\r\n                        </div>\r\n                        {/* <div className='col-12 col-md-4 mt-2'>\r\n                            <input type='text' className=' float-right form-control' placeholder=\"Search user by Name\" onChange={this.handleInputSearch}/>\r\n                        </div> */}\r\n                    </div>\r\n                    <div>\r\n                        <DataTable\r\n                            columns={this.columns}\r\n                            data={ this.state.reportList}\r\n                            // data2={ this.state.reviewList}\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            pagination\r\n                            // onRowClicked={(data) => { this.showData(data) }}\r\n                            paginationPerPage={10}\r\n                            expandableRows={true}\r\n                            expandableRowsComponent={<this.SampleExpandedComponent />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// (this.state.userList.filter(user => user.role == \"user\"))\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        reportList: state.user.reportList,\r\n        reviewList: state.user.reviewList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReviewReports)\r\n","C:\\Projects\\Movie_Hut\\client\\src\\components\\Home\\homeMovies.js",["357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Modal } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\n\r\nclass HomeMovies extends Component {\r\n\r\n    state = {\r\n        movies: [],\r\n        filterModal: true,\r\n        filter: {\r\n            genres: [],\r\n            ratings: [],\r\n        },\r\n        savedFilter: {\r\n            genres: [],\r\n            ratings: []\r\n        },\r\n        movieFiltered: false,\r\n        currentPage: 0,\r\n    }\r\n\r\n    PER_PAGE = 12;\r\n\r\n    componentDidMount() {\r\n        if (this.props.movies) {\r\n            this.setState({\r\n                movies: this.props.movies,\r\n                filteredMovies: this.props.movies,\r\n                filterModal: false,\r\n                currentPage: 0,\r\n                filter: {\r\n                    genres: [],\r\n                    ratings: [],\r\n                },\r\n                savedFilter: {\r\n                    genres: [],\r\n                    ratings: []\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (state.cachedProps !== props) {\r\n            if (props.movies) {\r\n                if (props.movies.length > 0) {\r\n                    return {\r\n                        movies: props.movies,\r\n                        filteredMovies: props.movies,\r\n                        currentPage: 0,\r\n                        cachedProps: props,\r\n                        filter: {\r\n                            genres: [],\r\n                            ratings: [],\r\n                        },\r\n                        savedFilter: {\r\n                            genres: [],\r\n                            ratings: []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            filterModal: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setShow(false);\r\n        if ((this.state.filter !== this.state.savedFilter)) {\r\n            this.clearFilter();\r\n        }\r\n    };\r\n\r\n    handleShow = () => {\r\n        this.setShow(true);\r\n        if (this.state.savedFilter.genres.length > 0 || this.state.savedFilter.ratings.length > 0) {\r\n            var copyFilter = _.cloneDeep(this.state.savedFilter);\r\n            this.setState({\r\n                filter: copyFilter\r\n            })\r\n        }\r\n    }\r\n\r\n    addGenreFilter = (genre) => {\r\n        const checkFound = this.state.filter.genres.find(item => item == genre);\r\n        let filter = this.state.filter;\r\n\r\n        if (checkFound == null) {\r\n            filter.genres.push(genre);\r\n            this.setState({\r\n                filter: filter\r\n            })\r\n        }\r\n        else {\r\n            const index = filter.genres.indexOf(genre);\r\n            filter.genres.splice(index, 1);\r\n            this.setState({\r\n                filter: filter\r\n            })\r\n        }\r\n    }\r\n\r\n    checkActiveGenre = (genre) => {\r\n        if (this.state.filter) {\r\n            const found = this.state.filter.genres.find(item => item == genre);\r\n            if (found)\r\n                return 'btn-dark active'\r\n            return '';\r\n\r\n        }\r\n    }\r\n\r\n    addRatingFilter = (rating) => {\r\n        const checkFound = this.state.filter.ratings.find(item => item == rating);\r\n        let filter = this.state.filter;\r\n\r\n        if (checkFound == null) {\r\n            filter.ratings.push(rating);\r\n            this.setState({\r\n                filter: filter\r\n            })\r\n        }\r\n        else {\r\n            const index = filter.ratings.indexOf(rating);\r\n            filter.ratings.splice(index, 1);\r\n            this.setState({\r\n                filter: filter\r\n            })\r\n        }\r\n    }\r\n\r\n    checkActiveRating = (rating) => {\r\n        if (this.state.filter) {\r\n            const found = this.state.filter.ratings.find(item => item == rating);\r\n            if (found)\r\n                return 'btn-dark active'\r\n            return '';\r\n\r\n        }\r\n    }\r\n\r\n\r\n    clearFilter = () => {\r\n        if (this.state.filter) {\r\n            let clearFilter = this.state.filter;\r\n            clearFilter.genres = [];\r\n            clearFilter.ratings = [];\r\n            this.setState({\r\n                filter: clearFilter,\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    submitFilter = () => {\r\n        var copyFilter = _.cloneDeep(this.state.filter);\r\n        this.setState({\r\n            savedFilter: copyFilter,\r\n            movieFiltered: true\r\n        })\r\n        this.handleClose();\r\n    }\r\n\r\n    filterMoviesModal = () => (\r\n\r\n        <Modal\r\n            show={this.state.filterModal} onHide={this.handleClose}\r\n            size=\"lg\"\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header className=\"primary\" closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                    Filter Movies\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <strong className=\"heading\">Genres</strong>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Action')}`} onClick={() => { this.addGenreFilter('Action') }}>Action</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Adventure')}`} onClick={() => { this.addGenreFilter('Adventure') }}>Adventure</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Animation')}`} onClick={() => { this.addGenreFilter('Animation') }}>Animation</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Comedy')}`} onClick={() => { this.addGenreFilter('Comedy') }}>Comedy</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Crime')}`} onClick={() => { this.addGenreFilter('Crime') }}>Crime</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Drama')}`} onClick={() => { this.addGenreFilter('Drama') }}>Drama</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Fantasy')}`} onClick={() => { this.addGenreFilter('Fantasy') }}>Fantasy</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Family')}`} onClick={() => { this.addGenreFilter('Family') }}>Family</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Horror')}`} onClick={() => { this.addGenreFilter('Horror') }}>Horror</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Mystery')}`} onClick={() => { this.addGenreFilter('Mystery') }}>Mystery</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Romance')}`} onClick={() => { this.addGenreFilter('Romance') }}>Romance</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Science Fiction')}`} onClick={() => { this.addGenreFilter('Science Fiction') }}>Science Fiction</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveGenre('Thriller')}`} onClick={() => { this.addGenreFilter('Thriller') }}>Thriller</div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <strong className=\"heading\">MPAA Rating</strong>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('G')}`} onClick={() => { this.addRatingFilter('G') }}>G</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('PG')}`} onClick={() => { this.addRatingFilter('PG') }}>PG</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('PG-13')}`} onClick={() => { this.addRatingFilter('PG-13') }}>PG-13</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('R')}`} onClick={() => { this.addRatingFilter('R') }}>R</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('NC-17')}`} onClick={() => { this.addRatingFilter('NC-17') }}>NC-17</div>\r\n                        <div className={'btn btn-sm genreItem ' + `${this.checkActiveRating('Not Rated')}`} onClick={() => { this.addRatingFilter('Not Rated') }}>Not Rated</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-5\">\r\n                    <span className=\"col-12 text-center\">\r\n                        <div className=\"btn btn-light mr-4\" onClick={this.clearFilter}>Clear</div>\r\n                        <div className=\"btn btn-dark\" onClick={this.submitFilter}>Save</div>\r\n                    </span>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n\r\n\r\n    getFilterCheck = () => {\r\n        if (this.state.savedFilter) {\r\n            if (this.state.savedFilter.genres.length > 0 || this.state.savedFilter.ratings.length > 0)\r\n                return ('btn-dark');\r\n        }\r\n        return ('btn-dark-outlined');\r\n    }\r\n\r\n    filterMovies = () => {\r\n        if (this.state.movies) {\r\n            const movies = this.state.movies;\r\n            const savedFilter = this.state.savedFilter;\r\n            let filteredMovies = movies.filter(function (movie) {\r\n                if (savedFilter.ratings.includes(movie.certification))\r\n                    return true;\r\n                else if (movie.certification === null && savedFilter.ratings.includes('Not Rated'))\r\n                    return true;\r\n\r\n                if (movie.genreList != null) {\r\n                    for (var i = 0; i < savedFilter.genres.length; i++) {\r\n                        if (movie.genreList.includes(savedFilter.genres[i]) == true)\r\n                            return true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (this.state.savedFilter.genres.length == 0 && this.state.savedFilter.ratings.length == 0) {\r\n                this.setState({\r\n                    filteredMovies: this.state.movies,\r\n                    movieFiltered: false,\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    filteredMovies: filteredMovies,\r\n                    movieFiltered: false,\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handlePageClick = ({ selected: selectedPage }) => {\r\n        this.setState({\r\n            currentPage: selectedPage\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.movieFiltered == true) {\r\n            this.filterMovies();\r\n        }\r\n\r\n        let offset = this.state.currentPage * this.PER_PAGE;\r\n        let movies = this.state.filteredMovies;\r\n        let moviesLength = 0;\r\n        if (movies) { moviesLength = movies.length }\r\n        let pageCount = Math.ceil(moviesLength / this.PER_PAGE)\r\n\r\n        if (movies) {\r\n            movies = this.state.filteredMovies.slice(offset, offset + this.PER_PAGE).map((movie, key) => {\r\n                return (\r\n                    <div className=\" movie-container \" key={key}>\r\n                        <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                            <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n\r\n                        </Link>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                {this.filterMoviesModal()}\r\n                <div className=\"row px-5 mr-md-5\">\r\n                    <div className={'btn btn-sm  ml-auto my-1 mr-md-5 ' + `${this.getFilterCheck()}`} onClick={this.handleShow}>\r\n                        <i class=\"fas fa-filter\" style={{ opacity: '0.8' }}></i>  Filter\r\n                    </div>\r\n                </div>\r\n                <div className=\"row px-5\">\r\n\r\n                    {\r\n                        movies\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"row mt-3 px-5\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <ReactPaginate\r\n                            previousLabel={\"← Previous\"}\r\n                            nextLabel={\"Next →\"}\r\n                            pageCount={pageCount}\r\n                            onPageChange={this.handlePageClick}\r\n                            containerClassName={\"pagination\"}\r\n                            previousLinkClassName={\"pagination__link\"}\r\n                            nextLinkClassName={\"pagination__link\"}\r\n                            disabledClassName={\"pagination__link--disabled\"}\r\n                            activeClassName={\"pagination__link--active\"}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeMovies;","C:\\Projects\\Movie_Hut\\client\\src\\components\\Favorites\\favorites.js",["386","387"],"import React, { Component } from 'react'\r\nimport Header from '../Header/header'\r\nimport Footer from '../Footer/footer'\r\nimport { connect } from 'react-redux'\r\nimport { getFavoriteMovies } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Favorites extends Component {\r\n\r\n    state = {\r\n        moviesList: [],\r\n        cachedProps: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getFavoriteMovies())\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, prevState) {\r\n\r\n        if (props != prevState.cachedProps) {\r\n            if (props.favoriteMovies) {\r\n                if (props.favoriteMovies.length > 0) {\r\n                    return {\r\n                        moviesList: props.favoriteMovies,\r\n                        cachedProps: props\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sticky-body\">\r\n                <Header user={this.props.user} />\r\n                <div className=\"container mb-5\"  >\r\n                    <div className=\"row mt-3 pl-2\">\r\n                        <nav aria-label=\"breadcrumb\" style={{ background: \"white\" }}>\r\n                            <ol class=\"breadcrumb heading\" style={{ background: \"inherit\", color: \"black\" }}>\r\n                                <li class=\"breadcrumb-item\" ><a href=\"/\" style={{ color: \"black\" }}>HOME</a></li>\r\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\">FAVORITES</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div class=\"row d-flex p-2\" style={{ float: \"none\", justifyContent: 'between' }}>\r\n\r\n                            {\r\n                                this.state.moviesList.map((movie, key) => {\r\n                                    return (\r\n                                        <div key={key} className=' cinema-movie-container  d-flex flex-row my-2 mx-md-4 mx-1 rounded border p-2 display-inline '>\r\n\r\n                                            <div className=\"d-inline\" >\r\n                                                <img id=\"postertest\" className='poster-small d-flex mr-3' src={movie.poster_url} alt=\"movie-poster\" />\r\n                                            </div>\r\n                                            <div className=\"d-inline\">\r\n                                                <Link to={`/movie/${movie._id}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'black' }}>\r\n                                                    <strong >\r\n                                                        {movie.title}\r\n                                                    </strong>\r\n                                                </Link>\r\n\r\n                                                <div>\r\n                                                    Release: {movie.releaseDate}\r\n                                                </div>\r\n                                                <div>\r\n                                                    Runtime: {movie.runtime} Minutes\r\n                                                </div>\r\n                                                <div>\r\n                                                    Rating: {movie.rating}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {this.state.moviesList.length == 0 ? <span className=\"m-5 text-muted\">No favorite movies added yet. </span> : null\r\n                            }\r\n                        </div >\r\n                    </div>\r\n                </div>\r\n                <div className=\"sticky-footer\" >\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        favoriteMovies: state.movie.favoriteMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Favorites)","C:\\Projects\\Movie_Hut\\client\\src\\components\\Admin\\Cinemas\\edit.js",["388"],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Policy\\privacyPolicy.js",[],"C:\\Projects\\Movie_Hut\\client\\src\\components\\Policy\\terms.js",[],{"ruleId":"389","severity":1,"message":"390","line":10,"column":8,"nodeType":"391","messageId":"392","endLine":10,"endColumn":23},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":6,"column":1,"nodeType":"399","endLine":63,"endColumn":2},{"ruleId":"389","severity":1,"message":"400","line":9,"column":8,"nodeType":"391","messageId":"392","endLine":9,"endColumn":9},{"ruleId":"401","severity":1,"message":"402","line":26,"column":46,"nodeType":"403","messageId":"404","endLine":26,"endColumn":48},{"ruleId":"401","severity":1,"message":"405","line":36,"column":41,"nodeType":"403","messageId":"404","endLine":36,"endColumn":43},{"ruleId":"401","severity":1,"message":"405","line":43,"column":36,"nodeType":"403","messageId":"404","endLine":43,"endColumn":38},{"ruleId":"406","severity":1,"message":"407","line":139,"column":82,"nodeType":"403","messageId":"408","endLine":139,"endColumn":83},{"ruleId":"406","severity":1,"message":"407","line":142,"column":82,"nodeType":"403","messageId":"408","endLine":142,"endColumn":83},{"ruleId":"406","severity":1,"message":"407","line":176,"column":66,"nodeType":"403","messageId":"408","endLine":176,"endColumn":67},{"ruleId":"406","severity":1,"message":"407","line":179,"column":66,"nodeType":"403","messageId":"408","endLine":179,"endColumn":67},{"ruleId":"406","severity":1,"message":"407","line":184,"column":74,"nodeType":"403","messageId":"408","endLine":184,"endColumn":75},{"ruleId":"401","severity":1,"message":"402","line":119,"column":32,"nodeType":"403","messageId":"404","endLine":119,"endColumn":34},{"ruleId":"389","severity":1,"message":"409","line":6,"column":9,"nodeType":"391","messageId":"392","endLine":6,"endColumn":16},{"ruleId":"401","severity":1,"message":"405","line":29,"column":23,"nodeType":"403","messageId":"404","endLine":29,"endColumn":25},{"ruleId":"410","severity":1,"message":"411","line":54,"column":57,"nodeType":"412","messageId":"413","endLine":54,"endColumn":59},{"ruleId":"401","severity":1,"message":"402","line":55,"column":74,"nodeType":"403","messageId":"404","endLine":55,"endColumn":76},{"ruleId":"401","severity":1,"message":"402","line":79,"column":29,"nodeType":"403","messageId":"404","endLine":79,"endColumn":31},{"ruleId":"389","severity":1,"message":"414","line":3,"column":10,"nodeType":"391","messageId":"392","endLine":3,"endColumn":15},{"ruleId":"389","severity":1,"message":"415","line":3,"column":31,"nodeType":"391","messageId":"392","endLine":3,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":3,"column":36,"nodeType":"391","messageId":"392","endLine":3,"endColumn":39},{"ruleId":"389","severity":1,"message":"417","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"417","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"414","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":15},{"ruleId":"389","severity":1,"message":"415","line":4,"column":31,"nodeType":"391","messageId":"392","endLine":4,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":4,"column":36,"nodeType":"391","messageId":"392","endLine":4,"endColumn":39},{"ruleId":"401","severity":1,"message":"402","line":22,"column":33,"nodeType":"403","messageId":"404","endLine":22,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":25,"column":39,"nodeType":"403","messageId":"404","endLine":25,"endColumn":41},{"ruleId":"401","severity":1,"message":"402","line":29,"column":38,"nodeType":"403","messageId":"404","endLine":29,"endColumn":40},{"ruleId":"389","severity":1,"message":"414","line":3,"column":10,"nodeType":"391","messageId":"392","endLine":3,"endColumn":15},{"ruleId":"389","severity":1,"message":"418","line":3,"column":25,"nodeType":"391","messageId":"392","endLine":3,"endColumn":29},{"ruleId":"389","severity":1,"message":"415","line":3,"column":31,"nodeType":"391","messageId":"392","endLine":3,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":3,"column":36,"nodeType":"391","messageId":"392","endLine":3,"endColumn":39},{"ruleId":"389","severity":1,"message":"414","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":15},{"ruleId":"389","severity":1,"message":"419","line":2,"column":17,"nodeType":"391","messageId":"392","endLine":2,"endColumn":23},{"ruleId":"389","severity":1,"message":"418","line":2,"column":25,"nodeType":"391","messageId":"392","endLine":2,"endColumn":29},{"ruleId":"389","severity":1,"message":"415","line":2,"column":31,"nodeType":"391","messageId":"392","endLine":2,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":2,"column":36,"nodeType":"391","messageId":"392","endLine":2,"endColumn":39},{"ruleId":"389","severity":1,"message":"420","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":21},{"ruleId":"389","severity":1,"message":"421","line":7,"column":10,"nodeType":"391","messageId":"392","endLine":7,"endColumn":16},{"ruleId":"401","severity":1,"message":"405","line":71,"column":23,"nodeType":"403","messageId":"404","endLine":71,"endColumn":25},{"ruleId":"389","severity":1,"message":"414","line":3,"column":10,"nodeType":"391","messageId":"392","endLine":3,"endColumn":15},{"ruleId":"389","severity":1,"message":"415","line":3,"column":31,"nodeType":"391","messageId":"392","endLine":3,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":3,"column":36,"nodeType":"391","messageId":"392","endLine":3,"endColumn":39},{"ruleId":"422","severity":1,"message":"423","line":45,"column":51,"nodeType":"424","messageId":"425","endLine":67,"endColumn":10},{"ruleId":"389","severity":1,"message":"414","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":15},{"ruleId":"389","severity":1,"message":"415","line":4,"column":31,"nodeType":"391","messageId":"392","endLine":4,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":4,"column":36,"nodeType":"391","messageId":"392","endLine":4,"endColumn":39},{"ruleId":"401","severity":1,"message":"402","line":19,"column":33,"nodeType":"403","messageId":"404","endLine":19,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":25,"column":46,"nodeType":"403","messageId":"404","endLine":25,"endColumn":48},{"ruleId":"401","severity":1,"message":"405","line":56,"column":39,"nodeType":"403","messageId":"404","endLine":56,"endColumn":41},{"ruleId":"401","severity":1,"message":"405","line":56,"column":68,"nodeType":"403","messageId":"404","endLine":56,"endColumn":70},{"ruleId":"389","severity":1,"message":"414","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":15},{"ruleId":"389","severity":1,"message":"415","line":2,"column":31,"nodeType":"391","messageId":"392","endLine":2,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":2,"column":36,"nodeType":"391","messageId":"392","endLine":2,"endColumn":39},{"ruleId":"389","severity":1,"message":"417","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":14},{"ruleId":"389","severity":1,"message":"426","line":7,"column":10,"nodeType":"391","messageId":"392","endLine":7,"endColumn":24},{"ruleId":"389","severity":1,"message":"427","line":7,"column":26,"nodeType":"391","messageId":"392","endLine":7,"endColumn":34},{"ruleId":"389","severity":1,"message":"428","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":21},{"ruleId":"389","severity":1,"message":"429","line":15,"column":8,"nodeType":"391","messageId":"392","endLine":15,"endColumn":17},{"ruleId":"389","severity":1,"message":"430","line":18,"column":7,"nodeType":"391","messageId":"392","endLine":18,"endColumn":17},{"ruleId":"389","severity":1,"message":"431","line":24,"column":7,"nodeType":"391","messageId":"392","endLine":24,"endColumn":12},{"ruleId":"432","severity":1,"message":"433","line":25,"column":5,"nodeType":"434","endLine":29,"endColumn":85},{"ruleId":"432","severity":1,"message":"433","line":30,"column":5,"nodeType":"434","endLine":34,"endColumn":85},{"ruleId":"432","severity":1,"message":"433","line":35,"column":5,"nodeType":"434","endLine":39,"endColumn":85},{"ruleId":"432","severity":1,"message":"433","line":40,"column":5,"nodeType":"434","endLine":44,"endColumn":85},{"ruleId":"432","severity":1,"message":"433","line":119,"column":29,"nodeType":"434","endLine":123,"endColumn":109},{"ruleId":"410","severity":1,"message":"411","line":172,"column":57,"nodeType":"412","messageId":"413","endLine":172,"endColumn":59},{"ruleId":"401","severity":1,"message":"402","line":175,"column":43,"nodeType":"403","messageId":"404","endLine":175,"endColumn":45},{"ruleId":"410","severity":1,"message":"411","line":191,"column":93,"nodeType":"412","messageId":"413","endLine":191,"endColumn":95},{"ruleId":"401","severity":1,"message":"402","line":192,"column":68,"nodeType":"403","messageId":"404","endLine":192,"endColumn":70},{"ruleId":"401","severity":1,"message":"402","line":197,"column":121,"nodeType":"403","messageId":"404","endLine":197,"endColumn":123},{"ruleId":"401","severity":1,"message":"402","line":388,"column":97,"nodeType":"403","messageId":"404","endLine":388,"endColumn":99},{"ruleId":"401","severity":1,"message":"402","line":46,"column":44,"nodeType":"403","messageId":"404","endLine":46,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":68,"column":51,"nodeType":"403","messageId":"404","endLine":68,"endColumn":53},{"ruleId":"432","severity":1,"message":"433","line":120,"column":29,"nodeType":"434","endLine":124,"endColumn":109},{"ruleId":"401","severity":1,"message":"402","line":198,"column":53,"nodeType":"403","messageId":"404","endLine":198,"endColumn":55},{"ruleId":"401","severity":1,"message":"402","line":277,"column":56,"nodeType":"403","messageId":"404","endLine":277,"endColumn":58},{"ruleId":"389","severity":1,"message":"414","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":15},{"ruleId":"389","severity":1,"message":"419","line":2,"column":17,"nodeType":"391","messageId":"392","endLine":2,"endColumn":23},{"ruleId":"389","severity":1,"message":"415","line":2,"column":31,"nodeType":"391","messageId":"392","endLine":2,"endColumn":34},{"ruleId":"389","severity":1,"message":"416","line":2,"column":36,"nodeType":"391","messageId":"392","endLine":2,"endColumn":39},{"ruleId":"389","severity":1,"message":"417","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"401","severity":1,"message":"402","line":29,"column":39,"nodeType":"403","messageId":"404","endLine":29,"endColumn":41},{"ruleId":"389","severity":1,"message":"435","line":6,"column":31,"nodeType":"391","messageId":"392","endLine":6,"endColumn":42},{"ruleId":"401","severity":1,"message":"402","line":64,"column":45,"nodeType":"403","messageId":"404","endLine":64,"endColumn":47},{"ruleId":"401","severity":1,"message":"402","line":65,"column":76,"nodeType":"403","messageId":"404","endLine":65,"endColumn":78},{"ruleId":"401","severity":1,"message":"402","line":82,"column":54,"nodeType":"403","messageId":"404","endLine":82,"endColumn":56},{"ruleId":"401","severity":1,"message":"402","line":298,"column":33,"nodeType":"403","messageId":"404","endLine":298,"endColumn":35},{"ruleId":"389","severity":1,"message":"417","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"397","severity":1,"message":"398","line":1,"column":1,"nodeType":"399","endLine":48,"endColumn":2},{"ruleId":"397","severity":1,"message":"398","line":1,"column":1,"nodeType":"399","endLine":48,"endColumn":2},{"ruleId":"397","severity":1,"message":"398","line":1,"column":1,"nodeType":"399","endLine":64,"endColumn":2},{"ruleId":"397","severity":1,"message":"398","line":1,"column":1,"nodeType":"399","endLine":32,"endColumn":2},{"ruleId":"389","severity":1,"message":"419","line":5,"column":35,"nodeType":"391","messageId":"392","endLine":5,"endColumn":41},{"ruleId":"401","severity":1,"message":"402","line":119,"column":82,"nodeType":"403","messageId":"404","endLine":119,"endColumn":84},{"ruleId":"389","severity":1,"message":"436","line":2,"column":18,"nodeType":"391","messageId":"392","endLine":2,"endColumn":29},{"ruleId":"437","severity":1,"message":"438","line":24,"column":37,"nodeType":"434","endLine":24,"endColumn":49},{"ruleId":"437","severity":1,"message":"438","line":25,"column":37,"nodeType":"434","endLine":25,"endColumn":49},{"ruleId":"437","severity":1,"message":"438","line":31,"column":37,"nodeType":"434","endLine":31,"endColumn":49},{"ruleId":"437","severity":1,"message":"438","line":37,"column":37,"nodeType":"434","endLine":37,"endColumn":49},{"ruleId":"437","severity":1,"message":"438","line":38,"column":37,"nodeType":"434","endLine":38,"endColumn":49},{"ruleId":"437","severity":1,"message":"438","line":50,"column":132,"nodeType":"434","endLine":50,"endColumn":144},{"ruleId":"437","severity":1,"message":"438","line":51,"column":136,"nodeType":"434","endLine":51,"endColumn":148},{"ruleId":"389","severity":1,"message":"439","line":3,"column":8,"nodeType":"391","messageId":"392","endLine":3,"endColumn":17},{"ruleId":"440","severity":1,"message":"441","line":49,"column":9,"nodeType":"442","messageId":"443","endLine":62,"endColumn":10},{"ruleId":"444","severity":1,"message":"445","line":52,"column":17,"nodeType":"446","messageId":"447","endLine":52,"endColumn":23},{"ruleId":"389","severity":1,"message":"448","line":72,"column":17,"nodeType":"391","messageId":"392","endLine":72,"endColumn":21},{"ruleId":"389","severity":1,"message":"449","line":72,"column":23,"nodeType":"391","messageId":"392","endLine":72,"endColumn":31},{"ruleId":"422","severity":1,"message":"450","line":144,"column":1,"nodeType":"424","messageId":"451","endLine":146,"endColumn":32},{"ruleId":"389","severity":1,"message":"417","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":14},{"ruleId":"389","severity":1,"message":"427","line":5,"column":23,"nodeType":"391","messageId":"392","endLine":5,"endColumn":31},{"ruleId":"389","severity":1,"message":"452","line":5,"column":33,"nodeType":"391","messageId":"392","endLine":5,"endColumn":40},{"ruleId":"389","severity":1,"message":"453","line":5,"column":42,"nodeType":"391","messageId":"392","endLine":5,"endColumn":49},{"ruleId":"410","severity":1,"message":"411","line":85,"column":33,"nodeType":"412","messageId":"413","endLine":85,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":87,"column":41,"nodeType":"403","messageId":"404","endLine":87,"endColumn":43},{"ruleId":"401","severity":1,"message":"402","line":35,"column":101,"nodeType":"403","messageId":"404","endLine":35,"endColumn":103},{"ruleId":"389","severity":1,"message":"417","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":14},{"ruleId":"401","severity":1,"message":"402","line":95,"column":33,"nodeType":"403","messageId":"404","endLine":95,"endColumn":35},{"ruleId":"410","severity":1,"message":"454","line":158,"column":68,"nodeType":"412","messageId":"413","endLine":158,"endColumn":70},{"ruleId":"401","severity":1,"message":"402","line":159,"column":54,"nodeType":"403","messageId":"404","endLine":159,"endColumn":56},{"ruleId":"401","severity":1,"message":"402","line":159,"column":72,"nodeType":"403","messageId":"404","endLine":159,"endColumn":74},{"ruleId":"401","severity":1,"message":"402","line":162,"column":118,"nodeType":"403","messageId":"404","endLine":162,"endColumn":120},{"ruleId":"401","severity":1,"message":"405","line":30,"column":35,"nodeType":"403","messageId":"404","endLine":30,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":33,"column":53,"nodeType":"403","messageId":"404","endLine":33,"endColumn":55},{"ruleId":"401","severity":1,"message":"402","line":34,"column":53,"nodeType":"403","messageId":"404","endLine":34,"endColumn":55},{"ruleId":"401","severity":1,"message":"402","line":41,"column":58,"nodeType":"403","messageId":"404","endLine":41,"endColumn":60},{"ruleId":"401","severity":1,"message":"402","line":74,"column":33,"nodeType":"403","messageId":"404","endLine":74,"endColumn":35},{"ruleId":"455","severity":1,"message":"456","line":113,"column":27,"nodeType":"457","messageId":"458","endLine":113,"endColumn":38},{"ruleId":"389","severity":1,"message":"417","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"454","line":101,"column":112,"nodeType":"412","messageId":"413","endLine":101,"endColumn":114},{"ruleId":"401","severity":1,"message":"402","line":101,"column":130,"nodeType":"403","messageId":"404","endLine":101,"endColumn":132},{"ruleId":"410","severity":1,"message":"411","line":143,"column":56,"nodeType":"412","messageId":"413","endLine":143,"endColumn":58},{"ruleId":"401","severity":1,"message":"402","line":143,"column":74,"nodeType":"403","messageId":"404","endLine":143,"endColumn":76},{"ruleId":"401","severity":1,"message":"405","line":143,"column":116,"nodeType":"403","messageId":"404","endLine":143,"endColumn":118},{"ruleId":"410","severity":1,"message":"411","line":144,"column":52,"nodeType":"412","messageId":"413","endLine":144,"endColumn":54},{"ruleId":"401","severity":1,"message":"402","line":144,"column":70,"nodeType":"403","messageId":"404","endLine":144,"endColumn":72},{"ruleId":"401","severity":1,"message":"402","line":96,"column":71,"nodeType":"403","messageId":"404","endLine":96,"endColumn":73},{"ruleId":"401","severity":1,"message":"402","line":116,"column":70,"nodeType":"403","messageId":"404","endLine":116,"endColumn":72},{"ruleId":"401","severity":1,"message":"402","line":125,"column":72,"nodeType":"403","messageId":"404","endLine":125,"endColumn":74},{"ruleId":"401","severity":1,"message":"402","line":145,"column":71,"nodeType":"403","messageId":"404","endLine":145,"endColumn":73},{"ruleId":"406","severity":1,"message":"407","line":194,"column":65,"nodeType":"403","messageId":"408","endLine":194,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":195,"column":65,"nodeType":"403","messageId":"408","endLine":195,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":196,"column":65,"nodeType":"403","messageId":"408","endLine":196,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":197,"column":65,"nodeType":"403","messageId":"408","endLine":197,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":198,"column":65,"nodeType":"403","messageId":"408","endLine":198,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":199,"column":65,"nodeType":"403","messageId":"408","endLine":199,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":200,"column":65,"nodeType":"403","messageId":"408","endLine":200,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":201,"column":65,"nodeType":"403","messageId":"408","endLine":201,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":202,"column":65,"nodeType":"403","messageId":"408","endLine":202,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":203,"column":65,"nodeType":"403","messageId":"408","endLine":203,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":204,"column":65,"nodeType":"403","messageId":"408","endLine":204,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":205,"column":65,"nodeType":"403","messageId":"408","endLine":205,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":206,"column":65,"nodeType":"403","messageId":"408","endLine":206,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":215,"column":65,"nodeType":"403","messageId":"408","endLine":215,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":216,"column":65,"nodeType":"403","messageId":"408","endLine":216,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":217,"column":65,"nodeType":"403","messageId":"408","endLine":217,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":218,"column":65,"nodeType":"403","messageId":"408","endLine":218,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":219,"column":65,"nodeType":"403","messageId":"408","endLine":219,"endColumn":66},{"ruleId":"406","severity":1,"message":"407","line":220,"column":65,"nodeType":"403","messageId":"408","endLine":220,"endColumn":66},{"ruleId":"410","severity":1,"message":"459","line":247,"column":48,"nodeType":"460","messageId":"413","endLine":247,"endColumn":57},{"ruleId":"401","severity":1,"message":"402","line":255,"column":77,"nodeType":"403","messageId":"404","endLine":255,"endColumn":79},{"ruleId":"401","severity":1,"message":"402","line":261,"column":54,"nodeType":"403","messageId":"404","endLine":261,"endColumn":56},{"ruleId":"401","severity":1,"message":"402","line":261,"column":100,"nodeType":"403","messageId":"404","endLine":261,"endColumn":102},{"ruleId":"401","severity":1,"message":"402","line":285,"column":38,"nodeType":"403","messageId":"404","endLine":285,"endColumn":40},{"ruleId":"406","severity":1,"message":"407","line":313,"column":73,"nodeType":"403","messageId":"408","endLine":313,"endColumn":74},{"ruleId":"401","severity":1,"message":"405","line":21,"column":19,"nodeType":"403","messageId":"404","endLine":21,"endColumn":21},{"ruleId":"401","severity":1,"message":"402","line":81,"column":59,"nodeType":"403","messageId":"404","endLine":81,"endColumn":61},{"ruleId":"389","severity":1,"message":"417","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["461"],"no-negated-in-lhs",["462"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'_' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'request' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Modal' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'addShowtime' is defined but never used.","'Moment' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'AliceCarousel' is defined but never used.","'showtimes' is defined but never used.","'responsive' is assigned a value but never used.","'items' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ProgressBar' is defined but never used.","'NavDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Coverflow' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'page' is assigned a value but never used.","'position' is assigned a value but never used.","Block is redundant.","redundantBlock","'NavLink' is defined but never used.","'NavItem' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","no-global-assign","no-unsafe-negation"]