[{"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\index.js":"1","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\routes.js":"3","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\index.js":"4","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\home.js":"5","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\MovieDetails\\details.js":"6","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Logout\\logout.js":"7","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js":"8","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js":"9","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\CreateReview\\createReview.js":"10","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\createCinema.js":"11","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js":"12","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js":"13","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js":"14","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\hoc\\auth.js":"15","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Register\\Register.js":"16","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Login\\Login.js":"17","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Forgot\\forgot.js":"18","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Profile\\profile.js":"19","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\reset.js":"20","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\movie_reducer.js":"21","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\cinema_reducer.js":"22","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\user_reducer.js":"23","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\showtime_reducer.js":"24","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Footer\\footer.js":"25","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Widgets\\slider.js":"26","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\header.js":"27","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\actions\\index.js":"28","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\review.js":"29","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\navItems.js":"30","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\expiredPassword.js":"31"},{"size":993,"mtime":1610045243871,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2640,"mtime":1620150795599,"results":"35","hashOfConfig":"33"},{"size":327,"mtime":1618946145422,"results":"36","hashOfConfig":"33"},{"size":5897,"mtime":1620043007338,"results":"37","hashOfConfig":"33"},{"size":23610,"mtime":1620058769120,"results":"38","hashOfConfig":"33"},{"size":285,"mtime":1620059099863,"results":"39","hashOfConfig":"33"},{"size":2480,"mtime":1620151043552,"results":"40","hashOfConfig":"33"},{"size":6147,"mtime":1620156117881,"results":"41","hashOfConfig":"33"},{"size":4886,"mtime":1617389372629,"results":"42","hashOfConfig":"33"},{"size":5248,"mtime":1620151230171,"results":"43","hashOfConfig":"33"},{"size":12066,"mtime":1620158263874,"results":"44","hashOfConfig":"33"},{"size":12734,"mtime":1620071164276,"results":"45","hashOfConfig":"33"},{"size":13237,"mtime":1618852757582,"results":"46","hashOfConfig":"33"},{"size":1729,"mtime":1620060053805,"results":"47","hashOfConfig":"33"},{"size":8225,"mtime":1620071235538,"results":"48","hashOfConfig":"33"},{"size":4259,"mtime":1620071235519,"results":"49","hashOfConfig":"33"},{"size":3117,"mtime":1620071235516,"results":"50","hashOfConfig":"33"},{"size":1038,"mtime":1619555709071,"results":"51","hashOfConfig":"33"},{"size":3382,"mtime":1620071235540,"results":"52","hashOfConfig":"33"},{"size":1236,"mtime":1618321988354,"results":"53","hashOfConfig":"33"},{"size":1358,"mtime":1618486150630,"results":"54","hashOfConfig":"33"},{"size":1028,"mtime":1619555709086,"results":"55","hashOfConfig":"33"},{"size":1150,"mtime":1618855843021,"results":"56","hashOfConfig":"33"},{"size":3746,"mtime":1617395569268,"results":"57","hashOfConfig":"33"},{"size":1988,"mtime":1618342537853,"results":"58","hashOfConfig":"33"},{"size":1084,"mtime":1620059011701,"results":"59","hashOfConfig":"33"},{"size":6834,"mtime":1619555709065,"results":"60","hashOfConfig":"33"},{"size":4423,"mtime":1610045243870,"results":"61","hashOfConfig":"33"},{"size":3761,"mtime":1620071235517,"results":"62","hashOfConfig":"33"},{"size":386,"mtime":1620071235539,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"1l405pi",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"67"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"67"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\index.js",["148"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers'\r\nimport Routes from './routes';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={createStoreWithMiddleware(reducers)}>\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["149","150"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\routes.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\index.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Home\\home.js",["151","152"],"import React, { Component } from 'react'\r\nimport Header from '../Header/header'\r\nimport Footer from '../Footer/footer'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport HomeSlider from '../Widgets/slider'\r\nimport { connect } from 'react-redux'\r\nimport { getHomeMovies } from '../../actions'\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    state = {\r\n        movies: ''\r\n    }\r\n\r\n    responsive = {\r\n        desktop: {\r\n            breakpoint: { max: 3000, min: 1024 },\r\n            items: 3,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }\r\n    };\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    handleSelect = (selectedIndex, e) => {\r\n        this.setState({ index: selectedIndex })\r\n    };\r\n\r\n    slideImages = [\r\n        './assets/images/lionkingbackdrop.jpg',\r\n        './assets/images/lionkingbackdrop.jpg',\r\n        './assets/images/lionkingbackdrop.jpg'\r\n    ];\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.dispatch(getHomeMovies());\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.movies) {\r\n            if (props.movies.length > 0) {\r\n                return {\r\n                    movies: props.movies\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let movies = this.state.movies;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        {/* <HomeSlider\r\n                            settings={{\r\n                                interval: '500'\r\n                            }}\r\n                            movies={movies}\r\n                        /> */}\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"container\">\r\n                            <div className=\"row mt-5 ml-5\">\r\n                                <button className=\"cbtn active my-1\">\r\n                                    NOW SHOWING\r\n                                </button>\r\n                                <button className=\"cbtn my-1\">\r\n                                    COMING SOON\r\n                                </button>\r\n                                <button className=\"cbtn my-1\">\r\n                                    CINEMAS\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"row mt-3 px-5\">\r\n                                {\r\n                                    movies ?\r\n                                        movies.map((movie, key) => {\r\n                                            return (\r\n                                                <div className=\" movie-container \" key={key}>\r\n                                                    <Link class=\"p-1\" to={`/movie/${movie._id}`}>\r\n                                                        <img id=\"postertest\" className='movie-poster d-flex ' src={movie.poster_url} alt={movie.title} />\r\n\r\n                                                    </Link>\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                        : null\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {/* <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={\"holder.js/800x400?text=First slide&bg=373940\"}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>First slide label</h3>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n                            alt=\"Second slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Second slide label</h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Third slide label</h3>\r\n                            <p>\r\n                                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n          </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel> */}\r\n\r\n                <Footer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        movies: state.movie.moviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\MovieDetails\\details.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import React, { Component } from 'react';\r\nimport Header from '../Header/header';\r\nimport { Modal } from 'react-bootstrap'\r\nimport Footer from '../Footer/footer'\r\n\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport Review from '../Review/review';\r\n\r\nimport { getMovieInfo, } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\nimport showtimes from '../Admin/CreateShowtime/showtimes';\r\n\r\n\r\nconst responsive = {\r\n    0: { items: 1 },\r\n    568: { items: 2 },\r\n    1024: { items: 3 },\r\n};\r\n\r\nconst items = [\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <iframe className=\"player item\" type=\"text/html\" width=\"300px\" height=\"300px\"\r\n        src={'https://www.youtube-nocookie.com/embed/HfiH_526qhY'} frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n        allowfullscreen=\"1\"\r\n        webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>,\r\n    <div className=\"item\" data-value=\"4\">4</div>,\r\n    <div className=\"item\" data-value=\"5\">5</div>,\r\n];\r\n\r\nclass MovieDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            castToDisplay: 14\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(getMovieInfo(this.props.match.params.movieId));\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.movie.movieInfo) {\r\n            return {\r\n                movieInfo: props.movie.movieInfo.movie,\r\n                showtimeInfo: props.movie.movieInfo.showtime,\r\n                cinemaInfo: props.movie.movieInfo.cinema\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    state = {\r\n        show: false,\r\n        selectedDate: moment()\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n\r\n    getVideoId = (url) => {\r\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n\r\n        return (match && match[2].length === 11)\r\n            ? match[2]\r\n            : null;\r\n    }\r\n\r\n    playTrailer = (videos) => {\r\n        if (videos.length > 0) {\r\n            return (\r\n\r\n                <Modal\r\n                    show={this.state.show} onHide={this.handleClose}\r\n\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    size=\"xl\"\r\n                    dialogClassName=\"modal-90w\"\r\n                    // className=\"container-fluid\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header className=\"primary\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                            Movie Trailer\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <div className=\"trailer-body m-0 mt-n1 p-0 primary\" >\r\n                        <div className=\"trailer-container\">\r\n                            <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\"\r\n                                src={'https://www.youtube-nocookie.com/embed/' + this.getVideoId(videos[0]) + '?autoplay=1&loop=1&modestbranding=1&playlist=' + this.getVideoId(videos[0])} frameborder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n                                allowfullscreen=\"1\"\r\n                                webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    showMore = () => {\r\n        let castLength = this.state.movieInfo.cast.length;\r\n        this.setState({ castToDisplay: castLength });\r\n    }\r\n\r\n    showLess = () => {\r\n        this.setState({ castToDisplay: 12 });\r\n    }\r\n\r\n    handleSelectedDate = (date) => {\r\n        this.setState({\r\n            selectedDate: date\r\n        })\r\n    }\r\n\r\n    getShowtimeDates = () => {\r\n        const today = moment().startOf('day');;\r\n\r\n        const days = [0, 0, 0, 0, 0, 0];\r\n        var i = 0;\r\n        return days.map((d, key) => {\r\n            const date = moment(today).add(i++, \"days\").toDate();\r\n            let c = (moment(this.state.selectedDate).isSame(date, \"date\")) ? 'showtime-date-active' : '';\r\n            return (\r\n                <div className={`showtime-date ${c}`} onClick={() => { return this.handleSelectedDate(date) }}>\r\n                    <div>\r\n                        <Moment date={date} format=\"MMM\" />\r\n                    </div>\r\n                    <div>\r\n                        <Moment date={date} format=\"ddd\" />  <Moment date={date} format=\"DD\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    getScreenPlays = () => {\r\n        if (this.state.cinemaInfo) {\r\n            if (this.state.showtimeInfo.some(item => moment(item.date).isSame(this.state.selectedDate, \"date\"))) {\r\n\r\n                return this.state.cinemaInfo.map(cinema => {\r\n\r\n                    var showtimeCinemas = this.state.showtimeInfo.some(item => {\r\n                        if (item.cinemaId == cinema._id &&\r\n                            moment(item.date).isSame(this.state.selectedDate, \"date\")) return true;\r\n                        else return false\r\n                    });\r\n                    if (showtimeCinemas) {\r\n                        return (\r\n                            <div className=\"row col-12 \">\r\n                                <div className=\"offset-lg-2 offset-xl-2 \">\r\n                                    <div className=\"ml-xl-4  ml-lg-n1 my-3 \">\r\n                                        <div className=\"col-12  my-4\">\r\n                                            <div className=\"cinema-title font-text ml-xs-n2  font-weight-bold\">\r\n                                                {cinema.name} {cinema.address}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                this.state.showtimeInfo.map((showtime, key) => {\r\n                                                    if (cinema._id == showtime.cinemaId && moment(showtime.date).isSame(this.state.selectedDate, \"date\")) {\r\n                                                        return (\r\n                                                            <div className=\"col\" key={key}>\r\n                                                                <div className=\" session-container\">\r\n                                                                    <span className=\"text-capitalize session \">\r\n                                                                        Screen {showtime.screenType} {showtime.language == 'Urdu' ? '(Urdu)' : null}\r\n                                                                    </span>\r\n                                                                    <span className=\"attribute ml-2 border\">\r\n                                                                        <Moment date={showtime.date} format=\"hh:mm A\" />\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-8\">\r\n                                    <div className=\"offset-lg-2 offset-xl-4\">\r\n                                        <Link to={{ pathname: `http://${cinema.url}` }} target=\"_blank\" className=\"btn border ml-lg-2 ml-xl-n2 mb-3\"><i className=\"fa fa-send\"></i>  Visit Site</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n                )\r\n            }\r\n            else {\r\n                return <div className=\"row col-12 \">\r\n                    <div className=\"offset-lg-2 offset-xl-2 p-2\">\r\n                        <div className=\"ml-xl-4  ml-lg-n1 my-3 text-muted\"> No showtimes available.  </div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let cast = '';\r\n        if (this.state.movieInfo)\r\n            cast = this.state.movieInfo.cast;\r\n\r\n        return (\r\n            <div>\r\n                <Header user={this.props.user} />\r\n\r\n                {\r\n                    this.state.movieInfo ?\r\n                        <div className=\"container-fluid mt-md-4 mt-3 overflow-hidden\">\r\n                            {this.playTrailer(this.state.movieInfo.videoLinks)}\r\n                            <section className=\"row\">\r\n                                <div className=\"  p-md-2 rounded \">\r\n\r\n                                    <div className=\"col-12 offset-lg-1 offset-xl-2  px-2\">\r\n                                        <div className=\"media p-1\">\r\n\r\n                                            <img id=\"postertest\" className='poster d-flex mr-3 ' src={this.state.movieInfo.poster_url} alt=\"movie-poster\" />\r\n\r\n\r\n                                            <div className=\"media-body\">\r\n\r\n                                                <div className=\" d-md-none\">\r\n                                                    <div className=\"movie-details\">\r\n                                                        <h5 className=\"title\">\r\n                                                            {this.state.movieInfo.title}\r\n                                                        </h5>\r\n                                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment></p>\r\n                                                    </div>\r\n                                                    <button className=\" btn  btn-dark mr-2\" onClick={this.handleShow}><i className=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                    <button className=\" btn-dark btn my-2 d-md-none \" ><i className=\"fa fa-heart\"> Favorite</i></button>\r\n                                                </div>\r\n\r\n                                                <div className=\"movie-details d-none d-md-block col-lg-8 col-xl-7\">\r\n                                                    <h3 className=\"title\">\r\n                                                        {this.state.movieInfo.title}\r\n                                                    </h3>\r\n                                                    <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                        {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                            return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                        })}\r\n                                                    </p>\r\n                                                    <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span>   <i className=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                                    <h6>Overview</h6>\r\n                                                    <p>{this.state.movieInfo.description}\r\n                                                    </p>\r\n\r\n                                                    <div className=\"d-none d-md-block\">\r\n                                                        <button className=\" btn  btn-dark\" onClick={this.handleShow}><i className=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                        <button className=\" btn-dark btn-circle ml-2\" ><i className=\"fa fa-heart\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 d-block d-md-none mt-2\">\r\n                                        <h6 className=\"heading\">\r\n                                            Movie Details\r\n                                    </h6>\r\n                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                            {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                            })}</p>\r\n                                        <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span> <i className=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                        <h6>Overview</h6>\r\n                                        <p>{this.state.movieInfo.description}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <div className=\"row\">\r\n                                <section className=\"col-lg-8  col-12 \" >\r\n                                    {/* ---------Showtimes--------- */}\r\n                                    <div className=\"row col-12  m-0 \">\r\n\r\n                                        <div className=\" offset-lg-2 offset-xl-2 \" >\r\n                                            <div className=\"ml-xl-4 ml-md-3 ml-lg-n1 ml-sm-2 my-3\">\r\n                                                <h5 className=\"heading ml-xl-1  mt-1\">SHOWTIMES</h5>\r\n                                                {/* --------Showtime Dates-------- */}\r\n\r\n                                                <div className=\" showtime-container  ml-xl-1  row  my-3 \">\r\n\r\n                                                    {this.getShowtimeDates()}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* --------Screen Plays-------- */}\r\n                                        {this.getScreenPlays()}\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* Video Slider */}\r\n                                    {/* <div className=\"row col-12 slider-details\">\r\n                                        Slider ///\r\n                                    <div className=\"offset-lg-2 offset-xl-2\">\r\n\r\n                                            <AliceCarousel\r\n                                                mouseTracking\r\n                                                items={items}\r\n                                                responsive={responsive}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"row my-4 order-last\">\r\n                                        <div className=\" col-12 offset-lg-2 offset-xl-2 col-lg-10 \">\r\n                                            <Review />\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n\r\n                                <section className=\"col-lg-4 col-md-6 col-xl-3 col-sm-9 col-xs-12 mb-3\">\r\n\r\n                                    {/* ---------Cast and Crew--------- */}\r\n                                    <div >\r\n                                        <div className=\"card \">\r\n                                            <div className=\"card-header  heading text-center\" style={{ borderBottom: 'none', background: '#fff' }}>\r\n                                                CAST {'&'} CREW\r\n                                        <hr className=\"mb-1 mt-1 ml-4 mr-4 \" />\r\n                                            </div>\r\n                                            <div className=\"card-body \">\r\n                                                <section>\r\n                                                    <div className=\"row mx-1 mt-n3 mb-2\">\r\n                                                        {\r\n\r\n                                                            cast.slice(0, this.state.castToDisplay).map((cast, i) => {\r\n                                                                return (\r\n                                                                    <div className='col-6 mb-2' key={i} >\r\n                                                                        <div>\r\n                                                                            <span className=\"heading\">{cast.name}</span>\r\n                                                                            <br />\r\n                                                                            <span className=\"font-rc\">{cast.character}</span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    {\r\n                                                        this.state.castToDisplay < cast.length ?\r\n                                                            <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showMore}>SHOW MORE</span></div></div>\r\n                                                            : (cast.length > 12 && (cast.length == this.state.castToDisplay)) ?\r\n                                                                <div className=\"row\"><div className=\"col fw-500 showmore text-center\"><span onClick={this.showLess}>SHOW LESS</span></div></div>\r\n                                                                : null\r\n                                                    }\r\n                                                </section>\r\n                                                {/* <section>\r\n                                                    <div className=\"row mx-1\"><span className=\"heading col \" >Starring </span></div>\r\n                                                    <div className=\"row mx-1 mt-2 mb-1\">\r\n                                                        <div className=\"col-6 \">\r\n                                                            <div className=\"font-text\">\r\n                                                                <span className=\"heading\">Tom Kenny</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Spongebob Voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='col-6'>\r\n                                                            <div>\r\n                                                                <span className=\"heading\">Roger Bumpass</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Squidward Tentacles voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mx-1 mb-2\">\r\n                                                        <div className=\"col-6 \">\r\n                                                            <div className=\"font-text\">\r\n                                                                <span className=\"heading\">Bill Fagerbakke</span>\r\n                                                                <br />\r\n                                                                <span className=\"font-rc\">Patrick Star voice</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        : <div>\r\n\r\n                            <h2>Loading</h2>\r\n                        </div>\r\n                }\r\n\r\n\r\n                <Footer />\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movie: state.movie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieDetails)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Logout\\logout.js",["168"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logout = (props) => {\r\n\r\n    let request = axios.get(`/api/logout`)\r\n        .then(request => {\r\n            props.history.push('/')\r\n        })\r\n\r\n    return (\r\n        <div > </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Dashboard\\dashboard.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\Cinemas\\cinemas.js",["169","170"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\CreateReview\\createReview.js",["171","172","173","174","175"],"import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../Header/header'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery';\r\n\r\n\r\nclass CreateReview extends Component {\r\n    // state = {\r\n    //     email: '',\r\n    //     password: '',\r\n    //     error: '',\r\n    //     success: false,\r\n    //     validated: false,\r\n    // }\r\n    componentDidMount() {\r\n       \r\n        $(function() {\r\n\t\r\n            $(document).on({\r\n                mouseover: function(event) {\r\n                    $(this).find('.fa').addClass('star-over');\r\n                    $(this).prevAll().find('.fa').addClass('star-over');\r\n                },\r\n                mouseleave: function(event) {\r\n                    $(this).find('.fa').removeClass('star-over');\r\n                    $(this).prevAll().find('.fa').removeClass('star-over');\r\n                }\r\n            }, '.rate');\r\n        \r\n        \r\n            $(document).on('click', '.rate', function() {\r\n                if ( !$(this).find('.star').hasClass('rate-active') ) {\r\n                    $(this).siblings().find('.star').addClass('fa').removeClass('fa rate-active');\r\n                    $(this).find('.star').addClass('rate-active fas').removeClass('fa star-over');\r\n                    $(this).prevAll().find('.star').addClass('fas').removeClass('fa star-over');\r\n                } else {\r\n                    console.log('has');\r\n                }\r\n            });\r\n            \r\n        });\r\n        \r\n        \r\n            \r\n\r\n    }\r\n    render() {\r\n        \r\n        \r\n        \r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n        return (\r\n           \r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Add Review</h4>\r\n                            <div className=\"row\">\r\n                                <h4 className=\"my-3 col-12\" >The SpongeBob Movie: Sponge on the Run</h4>\r\n                                <div className=\"my-3 col-12\"><span>Movie Id: #44</span></div>\r\n                            </div>\r\n                            <Form className=\"mt-3\" action='/movie'>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Your Rating</Form.Label>\r\n                                    <div>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star checked\"></span>\r\n                                        <span class=\"fa fa-star\"></span>\r\n                                        <span class=\"fa fa-star\"></span>\r\n                                    </div>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Your Review</Form.Label>\r\n                                    <div>\r\n                                        <textarea  rows=\"15\" cols=\"80\"></textarea>\r\n                                    </div>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label className=\"mr-3\">Mark as Spoiler  </Form.Label>\r\n                                    <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/>\r\n                                </Form.Group>\r\n                                \r\n                                <div className=\"col-4\">\r\n                                    <Button block className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                        Add Review\r\n                                    </Button>\r\n                                </div>\r\n                                \r\n                                </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CreateReview;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateCinema\\createCinema.js",["176","177","178","179"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\createShowtime.js",["180","181","182","183","184","185","186"],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\CreateShowtime\\showtimes.js",["187","188","189","190","191"],"import React, { Component } from 'react';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Header from '../../Header/header'\r\nimport { Modal, Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport { getCinemaMovieShowtimes, addShowtime, clearMovieShowtimes, clearShowtime } from '../../../actions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Showtime extends Component {\r\n\r\n\r\n    state = {\r\n        events: [\r\n            // {\r\n            //     start: moment().toDate(),\r\n            //     end: moment().add(0.4, \"hours\").toDate(),\r\n            //     title: \"Movie 1\",\r\n            // },\r\n            // {\r\n            //     'title': 'Movie 2',\r\n            //     'allDay': true,\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(1, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 3',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(3, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 4',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.5, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 5',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(0.2, \"hours\").toDate(),\r\n            // }, {\r\n            //     'title': 'Movie 7',\r\n\r\n            //     'start': moment().toDate(),\r\n            //     'end': moment().add(4, \"hours\").toDate(),\r\n            // },\r\n        ],\r\n        title: '',\r\n        language: 'English',\r\n        date: '',\r\n        time: '',\r\n        screenType: '',\r\n        show: false,\r\n        redirect: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        const events = [];\r\n        let show = prevState.show;\r\n\r\n        if (nextProps.postShowtime) {\r\n            if (nextProps.postShowtime.post == true) {\r\n                let language = nextProps.postShowtime.newShowtime.language == 'Urdu' ? ' (Urdu)' : '';\r\n                const event = {\r\n                    title: \"Screen: \" + nextProps.postShowtime.newShowtime.screenType + language,\r\n                    start: moment(nextProps.postShowtime.newShowtime.date).toDate(),\r\n                    end: moment(nextProps.postShowtime.newShowtime.date).add(\"minute\", nextProps.postShowtime.newShowtime.runtime).toDate()\r\n                }\r\n                events.push(event);\r\n                show = !prevState.show;\r\n                nextProps.dispatch(clearShowtime);\r\n            }\r\n        }\r\n\r\n\r\n        if (nextProps.showtimes) {\r\n            if (nextProps.showtimes.showtime) {\r\n                if (prevState.movie) {\r\n                    nextProps.showtimes.showtime.forEach((item => {\r\n                        let language = item.language == 'Urdu' ? ' (Urdu)' : '';\r\n                        const event = {\r\n                            title: \"Screen: \" + item.screenType + language,\r\n                            start: moment(item.date).toDate(),\r\n                            end: moment(item.date).add(\"minute\", item.runtime).toDate()\r\n                        }\r\n                        console.log(\"Event\", event)\r\n                        events.push(event)\r\n                    }))\r\n\r\n\r\n                    return {\r\n                        events: events,\r\n                        show: show\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        this.setState((state) => {\r\n            state.events[0].start = start;\r\n            state.events[0].end = end;\r\n            return { events: [...state.events] };\r\n        });\r\n    };\r\n\r\n    onEventDrop = (data) => {\r\n        // console.log(data);\r\n    };\r\n\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n\r\n\r\n    setDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    setDateMax = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 3; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        // console.log(today)\r\n        return today;\r\n    }\r\n    handleInputName = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    handleInputLanguage = (event) => {\r\n        this.setState({ language: event.target.value })\r\n    }\r\n    handleInputDate = (event) => {\r\n        this.setState({ date: event.target.value })\r\n    }\r\n    handleInputTime = (event) => {\r\n        this.setState({ time: event.target.value })\r\n    }\r\n    handleInputScreen = (event) => {\r\n        this.setState({ screenType: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // console.log(\"Inside handle submit\")\r\n        event.preventDefault();\r\n        this.props.dispatch(addShowtime({\r\n            language: this.state.language,\r\n            date: this.state.date,\r\n            runtime: this.state.movie.runtime,\r\n            screenType: this.state.screenType,\r\n            cinemaId: this.state.cinemaId,\r\n            movieId: this.state.movie._id\r\n        }))\r\n    }\r\n\r\n    addShowtime = () => {\r\n        let movie = this.state.movie;\r\n        return (\r\n            <Modal\r\n                show={this.state.show} onHide={this.handleClose}\r\n                size=\"lg\"\r\n                centered\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header className=\"\" closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\" text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                        Add a new showtime\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <div className=\"container\">\r\n                        <Form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <div className=\"input-style my-2\" >\r\n                                    <div className=\"d-flex float-right\">\r\n                                        <strong>  Showtime: {movie.runtime} Minutes</strong>\r\n                                    </div>\r\n                                    <Form.Label><strong>{movie.title}</strong></Form.Label>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <Form.Group className=\"input-style\" controlId=\"language\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <select id=\"language\" name=\"language\" className=\"form-control\" onChange={this.handleInputLanguage}>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"Urdu\">Urdu</option>\r\n                                </select>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"input-style\" controlId=\"date\">\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"datetime-local\"\r\n                                    min={this.setDate()}\r\n                                    max={this.setDateMax()}\r\n                                    value={this.state.date}\r\n                                    onChange={this.handleInputDate}\r\n                                />\r\n                            </Form.Group>\r\n                            {/* <Form.Group className=\"input-style\" controlId=\"time\">\r\n                                <Form.Label>Time</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"time\"\r\n                                    placeholder=\"Time\"\r\n                                    value={this.state.time}\r\n                                    onChange={this.handleInputTime}\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Form.Group className=\"input-style\" controlId=\"screen\">\r\n                                <Form.Label>Screen type</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Screen Type\"\r\n                                    value={this.state.screenType}\r\n                                    onChange={this.handleInputScreen}\r\n                                />\r\n                                {/* <select id=\"type\" name=\"type\">\r\n                                    <option value=\"gold1\">Gold-1</option>\r\n                                    <option value=\"gold2\">Gold-2</option>\r\n                                    <option value=\"plat1\">Platinum-1</option>\r\n                                    <option value=\"plat2\">Platinum-2</option>\r\n                                </select> */}\r\n                            </Form.Group>\r\n                            <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                SAVE\r\n                                </Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.location.showtimeProps) {\r\n            let id = this.props.location.showtimeProps.cinemaId;\r\n            let movieId = this.props.location.showtimeProps.movie._id;\r\n\r\n            this.props.dispatch(getCinemaMovieShowtimes(id, movieId));\r\n            this.setState({\r\n                cinemaId: id,\r\n                movie: this.props.location.showtimeProps.movie\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovieShowtimes())\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect == true) {\r\n            return <Redirect to=\"/admin-cinemas\" />\r\n        }\r\n\r\n        const localizer = momentLocalizer(moment)\r\n        let movie = this.state.movie;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {movie ?\r\n                    <div className=\"container\">\r\n                        {this.addShowtime()}\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col\">\r\n                                <h4>{movie.title}</h4>\r\n                            </div>\r\n                            <div className=\"col \">\r\n                                <button type=\"button\" onClick={this.handleShow} className=\"btn btn-dark d-flex float-right\"> New Showtime</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col p-4\">\r\n                                <Calendar\r\n                                    defaultDate={moment().toDate()}\r\n                                    defaultView=\"month\"\r\n                                    events={this.state.events}\r\n                                    localizer={localizer}\r\n                                    onEventDrop={this.onEventDrop}\r\n                                    onEventResize={this.onEventResize}\r\n                                    resizable\r\n                                    style={{ height: \"100vh\" }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(\"State\", state)\r\n    return {\r\n        showtimes: state.showtime.movieShowtimes,\r\n        postShowtime: state.showtime.showtime\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Showtime);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Admin\\AddMovie\\addMovie.js",["192","193","194","195","196"],"import React, { Component } from 'react'\r\nimport Header from '../../Header/header'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { getMovieByName, getMovieFromTMDB, addMovieInCinema, clearMovie, clearCinemaMovie } from '../../../actions'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass AddMovie extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        movieInfo: '',\r\n        tmdb: null,\r\n        show: false,\r\n        loading: false,\r\n        searching: false,\r\n        redirect: false,\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieByName(this.state.name.trim()));\r\n        }\r\n        else {\r\n            this.setState({\r\n                movieInfo: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // console.log(\"Next Props: \", nextProps.movieDetails, \"Prev State\", prevState)\r\n\r\n        if (nextProps.postDetails) {\r\n\r\n            if (nextProps.postDetails.post == true) {\r\n\r\n                return ({\r\n                    redirect: true\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        if (nextProps.movieDetails) {\r\n            if (nextProps.movieDetails.movie) {\r\n                let tmdb = null;\r\n                if (nextProps.movieDetails.tmdb)\r\n                    tmdb = nextProps.movieDetails.tmdb;\r\n\r\n                return {\r\n                    movieInfo: nextProps.movieDetails.movie,\r\n                    notFound: false,\r\n                    searching: false,\r\n                    tmdb: tmdb\r\n                }\r\n            }\r\n            else if (nextProps.movieDetails.found == false) {\r\n                return {\r\n                    movieInfo: '',\r\n                    notFound: true,\r\n                    searching: false,\r\n                    tmdb: null\r\n                }\r\n            }\r\n            else\r\n                return { movieInfo: '', };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({\r\n            show: value\r\n        })\r\n    }\r\n\r\n    handleClose = () => this.setShow(false);\r\n    handleShow = () => this.setShow(true);\r\n    getVideoId = (url) => {\r\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n\r\n        return (match && match[2].length === 11)\r\n            ? match[2]\r\n            : null;\r\n    }\r\n\r\n    playTrailer = (videos) => {\r\n        if (videos.length > 0) {\r\n            return (\r\n\r\n                <Modal\r\n                    show={this.state.show} onHide={this.handleClose}\r\n                    size=\"xl\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    // className=\"container-fluid\"\r\n\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header className=\"primary\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"heading text-center\" style={{ opacity: '0.8', fontSize: '18px' }}>\r\n                            Movie Trailer\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <div className=\"trailer-body m-0 mt-n1 p-0 primary\" >\r\n                        <div className=\"trailer-container\">\r\n                            <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\"\r\n                                src={'https://www.youtube-nocookie.com/embed/' + this.getVideoId(videos[0]) + '?autoplay=1&loop=1&modestbranding=1&playlist=' + this.getVideoId(videos[0])} frameborder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; \"\r\n                                allowfullscreen=\"1\"\r\n                                webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    closeMovie = () => {\r\n        this.props.dispatch(clearMovie())\r\n    }\r\n\r\n    getMovieTMDB = () => {\r\n        if (this.state.name) {\r\n            this.props.dispatch(getMovieFromTMDB(this.state.name.trim()))\r\n            this.setState({\r\n                searching: true\r\n            })\r\n        }\r\n    }\r\n\r\n    saveMovie = () => {\r\n        if (this.state.movieInfo) {\r\n            let movieData = {\r\n                cinemaID: this.props.match.params.cinemaId,\r\n                movie: this.state.movieInfo,\r\n                tmdb: this.state.tmdb\r\n            }\r\n            this.props.dispatch(addMovieInCinema(movieData))\r\n            this.setState({\r\n                loading: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cinemaId: this.props.match.params.cinemaId\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearMovie());\r\n        this.props.dispatch(clearCinemaMovie());\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={`/create-showtime/${this.props.match.params.cinemaId}`} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col my-3\">\r\n                            <h3>Add movie</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group col-md-6 col  mb-3 mr-md-5\">\r\n                                <div class=\"input-group-prepend \">\r\n                                    <span class=\"input-group-text \" style={{ backgroundColor: \"black\" }} id=\"basic-addon1\">\r\n                                        <i className=\"fa fa-search\" style={{ color: '#ffff' }}></i></span>\r\n                                </div>\r\n                                <input type=\"text\" value={this.state.name} onChange={this.handleInputChange} class=\"form-control\" placeholder=\"Enter Movie Name\"\r\n                                    aria-label=\"Search\" aria-describedby=\"basic-addon1\" required />\r\n                                <button type=\"button\" onClick={this.submitForm} className=\"btn btn-dark mx-3\"> Search </button>\r\n                            </div>\r\n                            {\r\n                                this.state.notFound == true ?\r\n                                    <div className=\"col-md-6 col\">\r\n                                        <Link onClick={this.getMovieTMDB}>Search movie from TMDB.</Link>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row \">\r\n                        {\r\n                            this.state.movieInfo ?\r\n                                <section className=\"col border rounded\" >\r\n                                    {this.playTrailer(this.state.movieInfo.videoLinks)}\r\n                                    <div >\r\n\r\n                                        <div className=\"col-12 m-md-4 m-2\">\r\n                                            <div className=\" mx-1 float-right\">\r\n                                                <button type=\"button\" onClick={this.closeMovie} class=\"close\" aria-label=\"Close\">\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div class=\"media \">\r\n                                                <img id=\"postertest\" className='poster d-flex mr-3 ' src={this.state.movieInfo.poster_url} alt=\"movie-poster\" />\r\n\r\n                                                <div class=\"media-body\">\r\n                                                    <div className=\" d-md-none\">\r\n                                                        <div className=\"movie-details\">\r\n                                                            <h5 className=\"title\">\r\n                                                                {this.state.movieInfo.title}\r\n                                                            </h5>\r\n                                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment></p>\r\n                                                        </div>\r\n                                                        <button className=\" btn  btn-dark mr-2\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"movie-details d-none d-md-block col-lg-8 col-xl-7\">\r\n                                                        <h3 className=\"title\">\r\n                                                            {this.state.movieInfo.title}\r\n                                                        </h3>\r\n                                                        <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                            {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                                return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                            })}\r\n                                                        </p>\r\n                                                        <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span>   <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                                        <h6>Overview</h6>\r\n                                                        <p>{this.state.movieInfo.description}\r\n                                                        </p>\r\n\r\n                                                        <div className=\"d-none d-md-block\">\r\n                                                            <button className=\" btn  btn-dark\" onClick={this.handleShow}><i class=\"fa fa-play\"></i> Play Trailer</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col my-1 mr-4 ml-n3 mx-md-3 p-4'>\r\n                                                <button className=\" btn  btn-dark float-md-right\" onClick={this.saveMovie} disabled={this.state.loading}> Save Movie to Cinema</button>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-12 d-block d-md-none mt-2\">\r\n                                            <h6 className=\"heading\">\r\n                                                Movie Details\r\n                                            </h6>\r\n                                            <p><Moment format=\"DD/MM/YYYY\">{this.state.movieInfo.releaseDate}</Moment>\r\n                                                {this.state.movieInfo.genreList.map((genre, i) => {\r\n                                                    return (<span key={i} > {(i ? ', ' : '') + genre}</span>)\r\n                                                })}</p>\r\n                                            <p><span className=\"border border-dark rounded px-1 mx-1 \">{this.state.movieInfo.certification ? this.state.movieInfo.certification : 'N/A'}</span> <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style={{ color: \"#212121\", opacity: '0.9' }}></i> {this.state.movieInfo.runtime} Minutes</p>\r\n\r\n                                            <h6>Overview</h6>\r\n                                            <p>{this.state.movieInfo.description}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                                : this.state.searching == true ? <div className=\"m-4 p-2\">Searching...</div>\r\n                                    : null\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movieDetails: state.movie.movieDetails,\r\n        postDetails: state.cinema.cinemaMovie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddMovie);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\hoc\\auth.js",["197"],"\r\nimport React, { Component } from 'react';\r\nimport { auth } from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nexport default function (ComposedClass, reload, access) {\r\n    class AuthenticationCheck extends Component {\r\n\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.props.dispatch(auth())\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps(nextProps) {\r\n            this.setState({ loading: false })\r\n\r\n            if (!nextProps.user.login.isAuth) {\r\n                if (reload) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            } else {\r\n\r\n                if (reload === false) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n                if (nextProps.user.login.role !== 'administrator' && access === true) {\r\n                    this.props.history.push('/')\r\n                }\r\n\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && access === false) {\r\n                //     this.props.history.push('/orders');\r\n                // }\r\n\r\n                // else if (nextProps.user.login.role === 'worker' && !access) {\r\n                //     this.props.history.push('/404');\r\n                // }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.loading) {\r\n                return null;\r\n            }\r\n            return (\r\n                <ComposedClass {...this.props} user={this.props.user} />\r\n            )\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        console.log(state)\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticationCheck)\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Register\\Register.js",["198","199","200"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {userRegister} from './../../actions/index';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        name:'',\r\n        email: '',\r\n        dob:'',\r\n        password: '',\r\n        confirmPassword:'',\r\n        error: '',\r\n        success: '',\r\n        validated: false,\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState({name:event.target.value})\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputDob = (event) => {\r\n        this.setState({dob:event.target.value})\r\n    }\r\n    handleInputPassword= (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    handleInputConfirmPassword = (event) => {\r\n        this.setState({confirmPassword:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.register === false){\r\n            this.setState({error:'Error registering the user, try again'})\r\n        } else{\r\n            this.setState({\r\n                name:'',\r\n                email:'',\r\n                dob:'',\r\n                password: '',\r\n                confirmPassword:'',\r\n                success: 'Registered successfully',\r\n            })\r\n        }\r\n        setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:'', success:''});\r\n        if(this.state.password === this.state.confirmPassword){\r\n            this.props.dispatch(userRegister({\r\n                name:this.state.name,\r\n                email:this.state.email,\r\n                dob:this.state.dob,\r\n                password:this.state.password\r\n            }))\r\n        }\r\n        else{\r\n            this.setState({error:'Password and Confirm pawword do not match', success:''});\r\n            setTimeout(()=>{this.setState({error:'', success: ''}) }, 5000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Create your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"name\">\r\n                                    <Form.Label>Full Name</Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        placeholder=\"Full Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleInputName}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"dob\">\r\n                                    <Form.Label>Date of Birth</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        min=\"1920-01-01\"\r\n                                        max=\"2010-12-31\"\r\n                                        value={this.state.dob}\r\n                                        onChange={this.handleInputDob}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"cPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.handleInputConfirmPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                                <div className=\"error\">\r\n                                    {this.state.error}\r\n                                </div>\r\n                                <div className=\"success\">\r\n                                    {this.state.success}\r\n                                </div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Already have an account? <Link to=\"login\">Sign In</Link></p>\r\n                                <hr class=\"register-line\" size=\"1\" />\r\n                                <p className=\"input-style\" style={{ fontFamily: 'Roboto', textAlign: 'center' }}>By clicking Sign Up, you agree to you agree to the <Link to=\"#\">Terms</Link> and <Link to=\"#\">Private policy</Link></p>\r\n                                \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Login\\Login.js",["201","202","203"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from './../../actions/index';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false,\r\n        validated: false,\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user.login.isAuth){\r\n            this.props.history.push('/home')\r\n        }\r\n        else{\r\n            this.setState({error:nextProps.user.login.message})\r\n            setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n        }\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(loginUser(this.state))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Login to your Account</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.submitForm}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"input-style\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Link to=\"forgot\"><p className=\"left-margin-text\">Forgot Password?</p></Link>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                    Sign In\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <p style={{ fontFamily: 'Roboto', textAlign: 'center' }}>Do not have an account? <Link to=\"register\">Create here</Link></p>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Forgot\\forgot.js",["204","205","206","207","208","209"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { forgotPassword } from './../../actions/index';\r\n\r\nclass forgot extends Component {\r\n    state = {\r\n        email: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({email:event.target.value})\r\n    }\r\n    sendEmail = (e) => {\r\n      e.preventDefault();\r\n      this.props.dispatch(forgotPassword(this.state.email))\r\n    };\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"recovery email sent\"){\r\n          this.setState({error:'', success:'Recovery Email sent'})\r\n          setTimeout(()=>{this.setState({success:''}) }, 5000);\r\n      }else if(nextProps.user.message == \"email not in db\"){\r\n        this.setState({error:'Email not in db', success:''})\r\n        setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n      else if(nextProps.user.message == \"email required\"){\r\n        this.setState({error:'Email required', success:''})\r\n          setTimeout(()=>{this.setState({error:''}) }, 5000);\r\n      }\r\n    }    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Forgot Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.sendEmail}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputEmail}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"btn-size\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Send Reset Link\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(forgot);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Profile\\profile.js",["210","211","212","213","214","215"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport Header from '../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport {} from './../../actions/index';\r\n\r\n\r\nclass profile extends Component {\r\n    \r\n    render() {\r\n        let user = this.props.user.login;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <h4 className=\"m-3 text-center\">Personal Information</h4>\r\n                    <p>Full Name: {user.name}</p>\r\n                    <p>Email: {user.email}</p>\r\n                    <p>Date of Birth: {user.dob}</p>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(profile);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\reset.js",["216","217","218","219","220"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/header';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport { resetPassword, updatePasswordEmail } from './../../actions/index';\r\n\r\nclass reset extends Component {\r\n    state = {\r\n        password: '',\r\n        error: '',\r\n        success: ''\r\n    }\r\n    componentDidMount() {\r\n      console.log(this.props)\r\n      this.props.dispatch(resetPassword(this.props.match.params.id))\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n      console.log(nextProps)\r\n      if(nextProps.user.message == \"password reset link is invalid or has expired\"){\r\n          this.setState({error:'Password Reset Link is Invalid or has Expired', success:''})\r\n          setTimeout(()=>{this.setState({success:'',error:''}) }, 5000);\r\n          document.getElementById(\"mybtn\").disabled = true;\r\n      }\r\n      else if(nextProps.user.message.message == \"password updated\"){\r\n        this.setState({success:'Password updated successfully.'})\r\n        setTimeout(()=>{this.setState({success:'',error:''}) }, 5000);\r\n      }\r\n      \r\n    }    \r\n    handleInputPassword = (event) => {\r\n        this.setState({password:event.target.value})\r\n    }\r\n    updatePassword = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(updatePasswordEmail(this.props.match.params.id, this.state.password))\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"top-margin-header\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"Login\">\r\n                        <div className=\"card font-text\">\r\n                            <h4 className=\"m-3 text-center\" >Reset Password</h4>\r\n                            <Form className=\"mt-3\" onSubmit={this.updatePassword}>\r\n                                <Form.Group className=\"input-style\" controlId=\"email\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter new Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleInputPassword}\r\n                                        minlength=\"6\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button block id=\"mybtn\" className=\"btn-dark mt-4 mb-3\" style={{ borderRadius: '100px' }} size=\"lg\" type=\"submit\">\r\n                                Update Password\r\n                                </Button>\r\n                                <div className=\"error\">{this.state.error}</div>\r\n                                <div className=\"success\">{this.state.success}</div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-margin-header\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(reset);","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\movie_reducer.js",["221"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        case 'GET_MOVIE_INFO':\r\n            return { ...state, movieInfo: action.payload }\r\n        case 'GET_MOVIE_BY_NAME':\r\n            return { ...state, movieDetails: action.payload }\r\n        case 'GET_MOVIE_FROM_TMDB':\r\n            return { ...state, movieDetails: action.payload }\r\n        case 'GET_HOME_MOVIES':\r\n            return { ...state, moviesList: action.payload.moviesList }\r\n        case 'CLEAR_MOVIE':\r\n            return { ...state, movieDetails: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n        // case 'ADD_DOCUMENT':\r\n        //     return {...state,document:action.payload}\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\cinema_reducer.js",["222"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        // case 'GET_MOVIE_INFO':\r\n        //     return { ...state, movieInfo: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n        case 'ADD_CINEMA':\r\n            return { ...state, cinema: action.payload }\r\n        case 'GET_CINEMAS_LIST':\r\n            return { ...state, cinemaList: action.payload }\r\n        case 'GET_CINEMA_MOVIES':\r\n            return { ...state, cinemaMoviesList: action.payload }\r\n        case 'ADD_MOVIE_IN_CINEMA':\r\n            return { ...state, cinemaMovie: action.payload }\r\n        case 'CLEAR_CINEMA':\r\n            return { ...state, cinema: action.payload }\r\n        case 'CLEAR_CINEMA_MOVIE':\r\n            return { ...state, cinemaMovie: action.payload, cinemaMoviesList: action.payload }\r\n\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\user_reducer.js",["223"],"export default function(state={},action){\r\n    switch(action.type){\r\n        case 'USER_LOGIN':\r\n            return {...state,login:action.payload}\r\n        case 'USER_AUTH':\r\n            return {...state,login:action.payload}\r\n        // case 'GET_USER_POSTS':\r\n        //     return {...state,userPosts:action.payload}\r\n        // case 'GET_USER':\r\n        //     return {...state,users:action.payload}\r\n        case 'USER_REGISTER':\r\n            return {\r\n                ...state,\r\n                register:action.payload.success\r\n            }\r\n        case 'USER_FORGOT_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_RESET_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        case 'USER_UPDATE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                message:action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\reducers\\showtime_reducer.js",["224"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        // case 'GET_MOVIE_INFO':\r\n        //     return { ...state, movieInfo: action.payload }\r\n        // case 'GET_SHARED_DOCUMENT':\r\n        //     return { ...state, sharedDocument: action.payload }\r\n        // case 'UPDATE_DOCUMENT':\r\n        //     return {\r\n        //         ...state,\r\n        //         documentUpdated:action.payload.success,\r\n        //         newDocument:action.payload.doc\r\n        //     }\r\n\r\n        case 'ADD_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        case 'GET_CINEMA_MOVIE_SHOWTIMES':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_MOVIE_SHOWTIME':\r\n            return { ...state, movieShowtimes: action.payload }\r\n        case 'CLEAR_SHOWTIME':\r\n            return { ...state, showtime: action.payload }\r\n        // case 'DOWNLOAD_DOCUMENT':\r\n        //     return {...state,downloadStatus:action.payload}\r\n\r\n        // case 'INVITE_USER':\r\n        //     return {...state,userInvited:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Footer\\footer.js",["225","226","227","228","229","230","231","232","233","234","235"],"import React, { Component } from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer class=\"site-footer mt-2 \">\r\n                <div class=\"container\">\r\n                    <div class=\"row \">\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Cinemas</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Cinemas in Lahore</a></li>\r\n                                <li><a href=\"#\">Cinemas in Karachi</a></li>\r\n                                <li><a href=\"#\">Cinemas in Islamabad</a></li>\r\n                                <li><a href=\"#\">Cinemas in Multan</a></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Movies</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Top Movies</a></li>\r\n                                <li><a href=\"#\">Coming Soon</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Subscribe</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">Alerts for latest movies</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-xs-6 col-md-3\">\r\n                            <h6 className=\"heading\" style={{ color: '#d0d0d0' }}>Contact</h6>\r\n                            <ul class=\"footer-links font-text\">\r\n                                <li><a href=\"#\">About Us</a></li>\r\n                                <li><a href=\"#\">Contact Us</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 \">\r\n                            <span className=\"copyright-text offset-lg-2 col-xs-12 my-2 \">Copyright &copy; <Moment format='YYYY'></Moment> Movie Hut. All Rights Reserved.\r\n                            </span>\r\n                            <span className=\"footer-title  col-sm-12 col my-2\"> MOVIE HUT</span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Privacy Policy</a></span>\r\n                            <span className=\" font-rc font-weight-bold  col-xs-12 col my-2\" style={{ opacity: '0.5', color: '#fff' }}> <a href=\"#\"> Terms {'&'} Conditions</a></span>\r\n                        </div>\r\n                        {/* \r\n                        <div class=\"col-md-4 col-sm-6 col-xs-12\">\r\n                            <ul class=\"social-icons\">\r\n                                <li><a class=\"facebook\" href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n                                <li><a class=\"twitter\" href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                                <li><a class=\"dribbble\" href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n                                <li><a class=\"linkedin\" href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                            </ul>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Widgets\\slider.js",["236"],"import React from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst Slider = (props) => {\r\n\r\n    const items = [\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'First slide',\r\n            caption: 'Welcome to Movie Hut',\r\n            text: 'Movie Hut makes it easy to share a single document with others via email or a shared link',\r\n\r\n        },\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'Realtime Editing',\r\n            caption: 'Latest movies in cinemas',\r\n            text: 'Easy for colleagues and other collaborators to jump into one of your documents.',\r\n\r\n        },\r\n        {\r\n            type: 'home-slider',\r\n            image: 'assets/images/lionkingbackdrop.jpg',\r\n            image_text: 'Third slide',\r\n            caption: 'Export to Dropbox',\r\n            text: 'Whether you need to post your finished product to your blog or attach it to an email, it can be done instantly.',\r\n        }\r\n    ]\r\n\r\n    const showItems = () => (\r\n        props.movies ?\r\n            props.movies.map((item, i) => {\r\n                return (\r\n                    <Carousel.Item key={i} >\r\n                        <img className=\"d-block w-100\"\r\n                            src={item.background_url}\r\n                            alt={item.title}\r\n                            height=\"400px\"\r\n\r\n                        />\r\n                        {/* <Carousel.Caption className=\"mb-4\">\r\n                            <h2>{item.caption}</h2>\r\n                            <p>{item.text}</p>\r\n                        </Carousel.Caption> */}\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n            : null\r\n    )\r\n\r\n    return (\r\n        <Carousel className=\"d-none d-sm-block w-100\" {...props.settings}>\r\n            {showItems()}\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default Slider;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\header.js",["237"],"import React, { Component } from 'react'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap'\r\nimport NavItems from './navItems'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar style={{ background: \"black\" }} variant=\"dark\">\r\n                <Navbar.Brand href=\"/\" className=\"nav-brand\">\r\n                    MOVIE HUT\r\n                </Navbar.Brand>\r\n                {\r\n                    this.props.user ?\r\n                        this.props.user.login.error === true ?\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                                <Nav.Link eventKey={2} href=\"/register\">\r\n                                    Sign Up\r\n                            </Nav.Link>\r\n                            </Nav>\r\n\r\n                            : <Nav className=\"ml-auto mr-3\"><NavItems user={this.props.user.login} /></Nav>\r\n                        : null\r\n                }\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\actions\\index.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Review\\review.js",[],"D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Header\\navItems.js",["238","239","240","241","242","243"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import FontAwesome from 'react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { NavDropdown, Dropdown, NavLink, NavItem } from 'react-bootstrap'\r\n\r\nconst SidenavItems = ({ user }) => {\r\n\r\n    const items = [\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'home',\r\n        //     text:'Home',\r\n        //     link:'/',\r\n        //     restricted:false\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My Profile',\r\n            link: '/profile',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            admin: true,\r\n            // icon:'file-text-o',\r\n            text: 'Admin Panel',\r\n            link: '/admin-panel',\r\n            restricted: true\r\n        },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Add Admins',\r\n        //     link:'/register',\r\n        //     restricted:true\r\n        // },\r\n        // {\r\n        //     type:'navItem',\r\n        //     // icon:'file-text-o',\r\n        //     text:'Login',\r\n        //     link:'/login',\r\n        //     restricted:false,\r\n        //     exclude:true\r\n        // },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'My reviews',\r\n            link: '/user/user-reviews',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Add reviews',\r\n            link: '/user/add',\r\n            restricted: true\r\n        },\r\n        {\r\n            type: 'navItem',\r\n            // icon:'file-text-o',\r\n            text: 'Logout',\r\n            link: '/logout',\r\n            restricted: true\r\n        }\r\n    ]\r\n\r\n    const element = (item, i) => (\r\n        <div key={i} className={item.type + \"ml-n5\"}>\r\n            <NavDropdown.Item href={item.link}>{item.text}</NavDropdown.Item>\r\n        </div>\r\n    )\r\n\r\n    const showItems = () => (\r\n        user.login ?\r\n            items.map((item, i) => {\r\n                if (user.login.isAuth) {\r\n                    if (user.login.role == \"administrator\") {\r\n                        return item.admin ?\r\n                            element(item, i)\r\n                            : element(item, i)\r\n                    }\r\n                    else if (!item.admin)\r\n                        return element(item, i)\r\n                } else {\r\n                    return !item.restricted ?\r\n                        element(item, i)\r\n                        : null\r\n                }\r\n            })\r\n            : null\r\n    )\r\n\r\n    const userDropdown = () => {\r\n        var str = \"\"\r\n        user.login ?\r\n            user.login.isAuth ?\r\n                str = user.login.name\r\n                : str = \"\"\r\n            : str = \"\"\r\n        return str.substr(0, str.indexOf(' '))\r\n    }\r\n    const navDropdownTitle = (<span style={{ color: \"#ffff\" }} className=\"title\"><i className=\"fa fa-user-circle mr-1\"></i> {userDropdown()}</span>);\r\n    return (\r\n        <div>\r\n\r\n            <NavDropdown title={navDropdownTitle} id=\"basic-nav-dropdown\">\r\n                {showItems()}\r\n            </NavDropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SidenavItems)","D:\\Projects\\Movie Hut Project\\Movie Hut\\client\\src\\components\\Reset\\expiredPassword.js",[],{"ruleId":"244","severity":1,"message":"245","line":10,"column":8,"nodeType":"246","messageId":"247","endLine":10,"endColumn":23},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"244","severity":1,"message":"252","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":18},{"ruleId":"244","severity":1,"message":"253","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":18},{"ruleId":"244","severity":1,"message":"254","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":21},{"ruleId":"244","severity":1,"message":"255","line":15,"column":8,"nodeType":"246","messageId":"247","endLine":15,"endColumn":17},{"ruleId":"244","severity":1,"message":"256","line":18,"column":7,"nodeType":"246","messageId":"247","endLine":18,"endColumn":17},{"ruleId":"244","severity":1,"message":"257","line":24,"column":7,"nodeType":"246","messageId":"247","endLine":24,"endColumn":12},{"ruleId":"258","severity":1,"message":"259","line":25,"column":5,"nodeType":"260","endLine":29,"endColumn":85},{"ruleId":"258","severity":1,"message":"259","line":30,"column":5,"nodeType":"260","endLine":34,"endColumn":85},{"ruleId":"258","severity":1,"message":"259","line":35,"column":5,"nodeType":"260","endLine":39,"endColumn":85},{"ruleId":"258","severity":1,"message":"259","line":40,"column":5,"nodeType":"260","endLine":44,"endColumn":85},{"ruleId":"258","severity":1,"message":"259","line":118,"column":29,"nodeType":"260","endLine":122,"endColumn":109},{"ruleId":"261","severity":1,"message":"262","line":171,"column":57,"nodeType":"263","messageId":"264","endLine":171,"endColumn":59},{"ruleId":"265","severity":1,"message":"266","line":174,"column":43,"nodeType":"267","messageId":"268","endLine":174,"endColumn":45},{"ruleId":"261","severity":1,"message":"262","line":190,"column":93,"nodeType":"263","messageId":"264","endLine":190,"endColumn":95},{"ruleId":"265","severity":1,"message":"266","line":191,"column":68,"nodeType":"267","messageId":"268","endLine":191,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":196,"column":121,"nodeType":"267","messageId":"268","endLine":196,"endColumn":123},{"ruleId":"265","severity":1,"message":"266","line":386,"column":97,"nodeType":"267","messageId":"268","endLine":386,"endColumn":99},{"ruleId":"244","severity":1,"message":"269","line":6,"column":9,"nodeType":"246","messageId":"247","endLine":6,"endColumn":16},{"ruleId":"244","severity":1,"message":"270","line":7,"column":10,"nodeType":"246","messageId":"247","endLine":7,"endColumn":24},{"ruleId":"244","severity":1,"message":"271","line":7,"column":26,"nodeType":"246","messageId":"247","endLine":7,"endColumn":34},{"ruleId":"244","severity":1,"message":"272","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":2,"column":36,"nodeType":"246","messageId":"247","endLine":2,"endColumn":39},{"ruleId":"244","severity":1,"message":"275","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":14},{"ruleId":"244","severity":1,"message":"276","line":52,"column":12,"nodeType":"246","messageId":"247","endLine":52,"endColumn":24},{"ruleId":"244","severity":1,"message":"272","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":2,"column":36,"nodeType":"246","messageId":"247","endLine":2,"endColumn":39},{"ruleId":"244","severity":1,"message":"275","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":14},{"ruleId":"244","severity":1,"message":"272","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":2,"column":17,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":2,"column":25,"nodeType":"246","messageId":"247","endLine":2,"endColumn":29},{"ruleId":"244","severity":1,"message":"273","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":2,"column":36,"nodeType":"246","messageId":"247","endLine":2,"endColumn":39},{"ruleId":"244","severity":1,"message":"279","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":21},{"ruleId":"244","severity":1,"message":"280","line":7,"column":10,"nodeType":"246","messageId":"247","endLine":7,"endColumn":16},{"ruleId":"244","severity":1,"message":"281","line":6,"column":31,"nodeType":"246","messageId":"247","endLine":6,"endColumn":42},{"ruleId":"265","severity":1,"message":"266","line":64,"column":45,"nodeType":"267","messageId":"268","endLine":64,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":65,"column":76,"nodeType":"267","messageId":"268","endLine":65,"endColumn":78},{"ruleId":"265","severity":1,"message":"266","line":82,"column":54,"nodeType":"267","messageId":"268","endLine":82,"endColumn":56},{"ruleId":"265","severity":1,"message":"266","line":297,"column":33,"nodeType":"267","messageId":"268","endLine":297,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":46,"column":44,"nodeType":"267","messageId":"268","endLine":46,"endColumn":46},{"ruleId":"265","severity":1,"message":"266","line":68,"column":51,"nodeType":"267","messageId":"268","endLine":68,"endColumn":53},{"ruleId":"258","severity":1,"message":"259","line":120,"column":29,"nodeType":"260","endLine":124,"endColumn":109},{"ruleId":"265","severity":1,"message":"266","line":198,"column":53,"nodeType":"267","messageId":"268","endLine":198,"endColumn":55},{"ruleId":"265","severity":1,"message":"266","line":277,"column":56,"nodeType":"267","messageId":"268","endLine":277,"endColumn":58},{"ruleId":"282","severity":1,"message":"283","line":6,"column":1,"nodeType":"284","endLine":63,"endColumn":2},{"ruleId":"244","severity":1,"message":"272","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":3,"column":31,"nodeType":"246","messageId":"247","endLine":3,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":3,"column":36,"nodeType":"246","messageId":"247","endLine":3,"endColumn":39},{"ruleId":"244","severity":1,"message":"272","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":3,"column":31,"nodeType":"246","messageId":"247","endLine":3,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":3,"column":36,"nodeType":"246","messageId":"247","endLine":3,"endColumn":39},{"ruleId":"244","severity":1,"message":"272","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":4,"column":31,"nodeType":"246","messageId":"247","endLine":4,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":4,"column":36,"nodeType":"246","messageId":"247","endLine":4,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":22,"column":33,"nodeType":"267","messageId":"268","endLine":22,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":25,"column":39,"nodeType":"267","messageId":"268","endLine":25,"endColumn":41},{"ruleId":"265","severity":1,"message":"266","line":29,"column":38,"nodeType":"267","messageId":"268","endLine":29,"endColumn":40},{"ruleId":"244","severity":1,"message":"272","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":3,"column":17,"nodeType":"246","messageId":"247","endLine":3,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":3,"column":25,"nodeType":"246","messageId":"247","endLine":3,"endColumn":29},{"ruleId":"244","severity":1,"message":"273","line":3,"column":31,"nodeType":"246","messageId":"247","endLine":3,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":3,"column":36,"nodeType":"246","messageId":"247","endLine":3,"endColumn":39},{"ruleId":"244","severity":1,"message":"275","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":14},{"ruleId":"244","severity":1,"message":"272","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":15},{"ruleId":"244","severity":1,"message":"273","line":4,"column":31,"nodeType":"246","messageId":"247","endLine":4,"endColumn":34},{"ruleId":"244","severity":1,"message":"274","line":4,"column":36,"nodeType":"246","messageId":"247","endLine":4,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":19,"column":33,"nodeType":"267","messageId":"268","endLine":19,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":24,"column":46,"nodeType":"267","messageId":"268","endLine":24,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":33,"endColumn":2},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":36,"endColumn":2},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":34,"endColumn":2},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":32,"endColumn":2},{"ruleId":"285","severity":1,"message":"286","line":13,"column":37,"nodeType":"260","endLine":13,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":14,"column":37,"nodeType":"260","endLine":14,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":15,"column":37,"nodeType":"260","endLine":15,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":16,"column":37,"nodeType":"260","endLine":16,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":23,"column":37,"nodeType":"260","endLine":23,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":24,"column":37,"nodeType":"260","endLine":24,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":30,"column":37,"nodeType":"260","endLine":30,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":36,"column":37,"nodeType":"260","endLine":36,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":37,"column":37,"nodeType":"260","endLine":37,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":49,"column":132,"nodeType":"260","endLine":49,"endColumn":144},{"ruleId":"285","severity":1,"message":"286","line":50,"column":136,"nodeType":"260","endLine":50,"endColumn":148},{"ruleId":"244","severity":1,"message":"257","line":6,"column":11,"nodeType":"246","messageId":"247","endLine":6,"endColumn":16},{"ruleId":"244","severity":1,"message":"287","line":2,"column":18,"nodeType":"246","messageId":"247","endLine":2,"endColumn":29},{"ruleId":"244","severity":1,"message":"275","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"271","line":5,"column":23,"nodeType":"246","messageId":"247","endLine":5,"endColumn":31},{"ruleId":"244","severity":1,"message":"288","line":5,"column":33,"nodeType":"246","messageId":"247","endLine":5,"endColumn":40},{"ruleId":"244","severity":1,"message":"289","line":5,"column":42,"nodeType":"246","messageId":"247","endLine":5,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":78,"column":33,"nodeType":"263","messageId":"264","endLine":78,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":80,"column":41,"nodeType":"267","messageId":"268","endLine":80,"endColumn":43},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["290"],"no-negated-in-lhs",["291"],"'Carousel' is defined but never used.","'HomeSlider' is defined but never used.","'AliceCarousel' is defined but never used.","'showtimes' is defined but never used.","'responsive' is assigned a value but never used.","'items' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'request' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'handleSubmit' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'addShowtime' is defined but never used.","'Moment' is defined but never used.","'ProgressBar' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavDropdown' is defined but never used.","'NavLink' is defined but never used.","'NavItem' is defined but never used.","no-global-assign","no-unsafe-negation"]